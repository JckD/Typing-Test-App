{"version":3,"sources":["components/Card.js","components/test.component.js","components/CreateQuote.component.js","components/quotes.component.js","components/login.component.js","components/account.component.js","components/profile.component.js","components/editAccount.component.js","components/approveQuote.component.js","components/privateRoute.component.js","utils/isAdmin.js","themes/light.js","themes/dark.js","components/Container.js","components/NavIcon.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","props","theme","colors","cardBackground","TestInput","input","attrs","type","TypingTest","onInputChange","bind","compare","resetTest","endTest","startTimer","calculateWPM","calculateHighScore","backspace","escFunction","debugToggle","renderTooltip","newTest","sendHighscores","renderSpinner","state","quote","quote_Title","quote_body","quote_author","user_input","quote_words","char_array","current_quote_char","typed_chars","current_quote_word","count","error_count","total_error_count","input_disabled","quote_left","quote_right","quote_error","quote_start","err_arr","quote_class","tInterval","seconds","netWPM","accuracy","highestAcc","highestWPM","quote_score","quoteWPM","quoteAcc","quoteID","apiUrl","token","user","debug","query","this","location","id","APIURL","setState","axios","get","then","response","data","quoteTitle","quoteBody","Array","from","quoteAuthor","quoteScore","highWPMScore","highAccScore","_id","catch","err","console","log","localStorage","getItem","headers","res","document","addEventListener","removeEventListener","event","keyCode","e","length","interval","setInterval","key","slice","current_char","getElementById","value","words","chars","body","split","clearInterval","focus","correctChars","lastWPM","lastAccuracy","activeElement","blur","Math","ceil","latestAccuracy","latestWPM","personalBestWPM","personalBestAcc","sendQuoteScores","update","wpm","acc","post","latestWPMScores","scores","minutes","errors","popper","elements","reference","Tooltip","Spinner","animation","className","Card","Row","Col","sm","Alert","variant","onKeyDown","disabled","OverlayTrigger","placement","delay","show","hide","overlay","name","Button","onClick","style","marginLeft","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","float","Collapse","in","Heading","Component","CreateQuote","checkLogin","onChangeQuoteTitle","onChangeQuoteBody","onChangeQuoteAuthor","validateField","validateForm","addQuote","loggedIn","quoteTitleValid","quoteBodyValid","quoteAuthorValid","formValid","formErrors","formValidAndUser","userName","preventDefault","quoteUser","reqObj","userId","quoteId","history","push","pathname","fieldName","target","fieldValidateErrors","username","Form","m","Control","size","onChange","placeholder","isValid","isInvalid","xs","Text","as","rows","SearchInput","Quote","to","color","Link","QuoteList","search","quotesList","quotes","map","currentQuote","i","index","filteredQuotes","filter","toLowerCase","indexOf","Login","login","onChangeLoginUsername","onChangeLoginPassword","inputEmail","inputUsername","inputPassword","isEmail","email","password","usernameValid","emailValid","passwordValid","loggedInUser","error","loginAccount","userPassword","withCredentials","setItem","Group","Label","account_username","account_password","Account","onChangeAccountUsername","onChangeAccountEmail","onChangeAccountPassword","onSubmit","account_email","account_favourties","loggedUser","inputLoginPassword","inputLoginUserName","match","newAccount","userEmail","status","String","quoteApproved","marginRight","edit","delete","Profile","logout","getQuotes","deleteAccount","editAccount","approveButton","editQuote","deleteQuote","deleteThisQuote","showEditErrors","handleDeleteAccountClose","handleDeleteQuoteClose","handleEditQuoteClose","saveQuote","handleSelect","signUpDate","quoteIds","unapprovedQuotesCount","deleteAccountModal","deleteQuoteModal","editQuoteModal","activeTab","deletingQuote","isAdmin","avgWPM","avgAcc","j","latestAccScores","quotesAdded","WPMChartConfig","title","text","legend","scaleX","label","scaleY","series","values","AccChartConfig","chartConfig","forEach","Id","del","window","reload","editedQuote","removeItem","Badge","selectedTab","Modal","backdrop","keyboard","centered","Header","Title","Body","Footer","Tabs","activeKey","onSelect","Tab","eventKey","quotesComponentsList","EditAccount","onChangeAccountConfirmPassword","onChangeCurrentPassword","checkPassword","passwordsMatch","oldUser","newInput","confirmPassword","newUser","authValid","tempUser","passowrd","newPassword","newConfirmPassowrd","handleClose","approve","approveQuote","noQuotes","PrivateRoute","component","rest","render","background","buttonBackground","textColor","buttonColor","Svg","svg","App","stored","useState","isDarkMode","setIsDarkMode","darkTheme","lightTheme","Container","Navbar","collapseOnSelect","expand","bg","sticky","NavbarBrand","NavIcon","Toggle","aria-controls","Nav","path","exact","Quotes","ApproveQuote","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"woBAEeA,UAAOC,IAAtB,KACgB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,kB,qLCW5C,IAAMC,EAAYN,IAAOO,MAAMC,OAAM,SAAAN,GAAK,MAAK,CAC3CO,KAAO,UADOT,CAAH,KAWMU,E,kDAEjB,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IAEDS,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBACjB,EAAKG,QAAU,EAAKA,QAAQH,KAAb,gBACf,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAClB,EAAKK,aAAe,EAAKA,aAAaL,KAAlB,gBACpB,EAAKM,mBAAqB,EAAKA,mBAAmBN,KAAxB,gBAC1B,EAAKO,UAAY,EAAKA,UAAUP,KAAf,gBACjB,EAAKQ,YAAc,EAAKA,YAAYR,KAAjB,gBACnB,EAAKS,YAAc,EAAKA,YAAYT,KAAjB,gBACnB,EAAKU,cAAgB,EAAKA,cAAcV,KAAnB,gBACrB,EAAKW,QAAU,EAAKA,QAAQX,KAAb,gBACf,EAAKY,eAAiB,EAAKA,eAAeZ,KAApB,gBACtB,EAAKa,cAAgB,EAAKA,cAAcb,KAAnB,gBAGrB,EAAKc,MAAQ,CACTC,MAAO,GAEPC,YAAa,GAEbC,WAAa,GACbC,aAAe,GACfC,WAAa,GAEbC,YAAa,GAEbC,WAAY,GAEZC,mBAAoB,GAEpBC,YAAa,GAEbC,mBAAoB,GAEpBC,MAAO,EAEPC,YAAc,EAEdC,kBAAoB,EAEpBC,gBAAiB,EAEjBC,WAAa,GAEbC,YAAc,GAEdC,YAAc,GAEdC,YAAc,GAEdC,QAAU,GAEVC,YAAc,gBAEdC,UAAY,GAEZC,QAAU,EAEVC,OAAS,EAETC,SAAW,EAEXC,WAAa,EACbC,WAAa,EACbC,YAAc,EACdC,SAAW,EACXC,SAAW,EACXC,QAAU,EAGVC,OAAS,GACTC,MAAQ,GAERC,KAAO,GACPC,OAAQ,GA9EG,E,gEAkFG,IAAD,OACbC,EAAQ,GAERA,EAD6B,MAA7BC,KAAK5D,MAAM6D,SAASrC,MACZoC,KAAK5D,MAAM6D,SAASrC,MAAMsC,GAG1B,SAEZ,IAAIC,EAAS,GAkCb,GA/BIH,KAAKI,UAAS,SAACxC,GAAD,MAAY,CACtB+B,OAAS,mCAEbQ,EAAS,+BAQbE,IAAMC,IAAIH,EAAQ,WAAWJ,GACxBQ,MAAK,SAAAC,GACF,EAAKJ,UAAS,SAACxC,GAAD,MAAY,CACtBE,YAAc0C,EAASC,KAAKC,WAC5B3C,WAAayC,EAASC,KAAKE,UAC3BxC,WAAayC,MAAMC,KAAKL,EAASC,KAAKE,WACtCvC,mBAAqBwC,MAAMC,KAAKL,EAASC,KAAKE,WAAW,GACzD7B,YAAc0B,EAASC,KAAKE,UAC5B3C,aAAewC,EAASC,KAAKK,YAC7BvB,YAAciB,EAASC,KAAKM,WAC5BvB,SAAWgB,EAASC,KAAKO,aACzBvB,SAAWe,EAASC,KAAKQ,aACzBvB,QAAUc,EAASC,KAAKS,WAG/BC,OAAM,SAAUC,GACbC,QAAQC,IAAIF,MAIhBG,aAAaC,QAAQ,YAAa,CAClC,IAAI5B,EAAQ2B,aAAaC,QAAQ,YACjCxB,KAAKI,SAAS,CACVR,MAAQA,IAGZS,IAAMC,IAAKH,EAAS,gBAAiB,CAAEsB,QAAU,CAAE,aAAe7B,KACjEW,MAAK,SAAAmB,GAEH,EAAKtB,SAAS,CACVP,KAAO6B,EAAIjB,UAKtBkB,SAASC,iBAAiB,UAAW5B,KAAK1C,aAAa,K,6CAOvDqE,SAASE,oBAAoB,UAAW7B,KAAK1C,aAAa,K,mCAM1D,IAAI4B,EAAUc,KAAKpC,MAAMsB,QAAU,EACnCc,KAAKI,UAAS,SAACxC,GAAD,MAAY,CACtBsB,QAAUA,Q,kCAKN4C,GACa,KAAlBA,EAAMC,SAEP/B,KAAKhD,c,oCAMPgD,KAAKI,UAAS,SAACxC,GAAD,MAAY,CACtBkC,OAASlC,EAAMkC,Y,oCAMRkC,GAAI,IAAD,OAEd,GAAIhC,KAAKpC,MAAMW,QAAUyB,KAAKpC,MAAMO,WAAW8D,OAG3C,OAFAjC,KAAK/C,eACLoE,QAAQC,IAAI,mBAKhB,GAAkB,IAAdU,EAAED,SAAgC,IAAfC,EAAE/B,SAAgB,CAGrC,GAAyB,IAArBD,KAAKpC,MAAMW,MAAa,CAExB,IAAI2D,EAAWC,YAAYnC,KAAK9C,WAAY,KAC5C8C,KAAKI,UAAU,SAACxC,GAAD,MAAY,CACvBkB,YAAc,GACdI,QAAU,EACVD,UAAYiD,MAIpBlC,KAAKI,SAAS,CACVnC,WAAa+D,EAAEI,MAChB,kBAAM,EAAKrF,QAAQ,EAAKa,MAAMQ,4BAGd,IAAd4D,EAAED,SAAwC,KAAvB/B,KAAKpC,MAAMmB,SAAkBiB,KAAKpC,MAAMY,YAAe,IAE3EwB,KAAKpC,MAAMY,YAAc,EACzBwB,KAAKI,UAAU,SAACxC,GAAD,MAAY,CACvBY,YAAcZ,EAAMY,YAAa,MACjC,kBAAM,EAAKnB,eAGf2C,KAAK3C,e,kCAOb2C,KAAKI,UAAU,SAACxC,GAAD,MAAY,CACvBmB,QAAUnB,EAAMmB,QAAQsD,MAAM,EAAGzE,EAAMmB,QAAQkD,OAAO,GACtD1D,MAAQX,EAAMW,MAAQ,EACtBH,mBAAqBR,EAAMO,WAAWP,EAAMW,MAAO,GACnDI,WAAaf,EAAMS,YAAYgE,MAAM,EAAGzE,EAAMS,YAAY4D,OAASrE,EAAMmB,QAAQkD,QACjF5D,YAAcT,EAAMS,YAAYgE,MAAM,GAAI,GAC1CzD,YAAehB,EAAMO,WAAWkE,MAAMzE,EAAMW,MAAQX,EAAMO,WAAW8D,c,8BASpEK,GAAe,IAAD,OACfA,IAAiBtC,KAAKpC,MAAMK,YAExB+B,KAAKpC,MAAMW,OAASyB,KAAKpC,MAAMO,WAAW8D,OAAQ,EAClDjC,KAAKI,UAAS,SAACxC,GAAD,MAAY,CACtBS,YAAaT,EAAMS,YAAcT,EAAMK,eACvC,kBAAM,EAAKhB,aAGf+C,KAAKI,UAAS,SAACxC,GAAD,MAAY,CACtBQ,mBAAqBR,EAAMO,WAAWP,EAAMW,MAAQ,GACpDA,MAAOX,EAAMW,MAAQ,EACrBF,YAAaT,EAAMS,YAAcT,EAAMK,WACvCW,YAAchB,EAAMO,WAAWkE,MAAMzE,EAAMW,MAAM,EAAGX,EAAMO,WAAW8D,QACrEhE,WAAa,GACbU,WAAaf,EAAMS,YAAcT,EAAMK,WACvCc,QAAU,GACVC,YAAc,oBAGtB2C,SAASY,eAAe,SAASC,MAAQ,IAGzCxC,KAAKI,UAAS,SAACxC,GAAD,MAAY,CACtBmB,QAAUnB,EAAMmB,QAAUnB,EAAMO,WAAWP,EAAMW,OACjDH,mBAAqBR,EAAMO,WAAWP,EAAMW,MAAQ,GACpDA,MAAOX,EAAMW,MAAQ,EACrBS,YAAc,gBACdX,YAAcT,EAAMS,YAAcT,EAAMO,WAAWP,EAAMW,OACzDM,YAAejB,EAAMmB,QACrBH,YAAchB,EAAMO,WAAWkE,MAAMzE,EAAMW,MAAO,EAAGX,EAAMO,WAAW8D,QACtEzD,YAAcZ,EAAMY,YAAc,EAClCC,kBAAoBb,EAAMa,kBAAoB,Q,gCAQ9C,IAAD,OAEPuB,KAAKI,SAAS,CACVtC,YAAc,GACdE,aAAe,GACfD,WAAa,GACbI,WAAa,KAEjBkC,IAAMC,IAAIN,KAAKpC,MAAM+B,OAAS,kBACzBY,MAAK,SAAAC,GACF,EAAKJ,UAAS,SAACxC,GAAD,MAAY,CACtBE,YAAc0C,EAASC,KAAKC,WAC5B3C,WAAayC,EAASC,KAAKE,UAC3BxC,WAAayC,MAAMC,KAAKL,EAASC,KAAKE,WACtCvC,mBAAqBwC,MAAMC,KAAKL,EAASC,KAAKE,WAAW,GACzD7B,YAAc0B,EAASC,KAAKE,UAC5B3C,aAAewC,EAASC,KAAKK,YAC7BtB,SAAWgB,EAASC,KAAKO,aACzBvB,SAAWe,EAASC,KAAKQ,aACzBvB,QAAUc,EAASC,KAAKS,WAG/BC,OAAM,SAAUC,GACbC,QAAQC,IAAIF,MAEpBpB,KAAKhD,c,kCAML,IACIyF,EACAC,EAFAC,EAAO3C,KAAKpC,MAAMG,WAGtB0E,EAAQE,EAAKC,MAAM,KACnBF,EAAQ9B,MAAMC,KAAK8B,GACnBE,cAAc7C,KAAKpC,MAAMqB,WACzB0C,SAASY,eAAe,SAASC,MAAQ,GACzCb,SAASY,eAAe,SAASO,QAEjC9C,KAAKI,UAAS,SAACxC,GAAD,MAAY,CACtBE,YAAaF,EAAME,YACnBC,WAAaH,EAAMG,WACnBG,YAAcuE,EACdnE,mBAAqBmE,EAAM,GAC3BtE,WAAauE,EACb5D,YAAclB,EAAMG,WACpBK,mBAAqBR,EAAMO,WAAW,GACtCY,QAAU,GACVd,WAAa,GACbU,WAAa,GACbC,YAAc,GACdP,YAAc,GACdG,YAAc,EACdQ,YAAc,gBACdH,YAAc,GACdJ,kBAAoB,EACpBF,MAAO,EACPW,QAAU,EACVR,gBAAiB,Q,gCAMb,IAAD,OACPmE,cAAc7C,KAAKpC,MAAMqB,WACzB,IAAI8D,EAAe/C,KAAKpC,MAAMO,WAAW8D,OAASjC,KAAKpC,MAAMa,kBAEzDuE,EAAUhD,KAAKpC,MAAMuB,OACrB8D,EAAejD,KAAKpC,MAAMwB,SAE9BuC,SAASuB,cAAcC,OACvBxB,SAASY,eAAe,SAASO,QACjC9C,KAAKI,UAAS,SAACxC,GAAD,MAAY,CACtBY,YAAcZ,EAAMY,YACpBY,SAAWgE,KAAKC,KAAMN,EAAenF,EAAMO,WAAW8D,OAAQ,KAC9DvD,gBAAiB,EACjBN,mBAAqB,GACrBO,WAAaf,EAAMG,WACnBmB,QAAU,EACVH,QAAU,GACVI,OAASiE,KAAKC,KAAK,EAAKlG,oBACxB,kBAAM,EAAKC,mBAAmB6F,EAAcD,Q,yCAIhCC,EAAcD,GAAU,IAAD,OACnCM,EAAiBtD,KAAKpC,MAAMwB,SAC5BmE,EAAYvD,KAAKpC,MAAMuB,OACvBG,EAAa,EACbD,EAAa,EA0CjB,GArCIkE,EAAYP,IACZhD,KAAKI,SAAS,CACVf,WAAaiE,EACbhE,WAAaiE,IAIjBjE,EAAaiE,EACblE,EAAaiE,EACY,KAArBtD,KAAKpC,MAAMgC,QAGRN,EAAaU,KAAKpC,MAAMiC,KAAK2D,kBAC5BnC,QAAQC,IAAI,mBACZtB,KAAKI,UAAS,SAAAxC,GAAK,MAAK,CACpBiC,KAAI,2BACG,EAAKjC,MAAMiC,MADd,IAGA4D,gBAAkBpE,EAClBmE,gBAAkBlE,QAEtB,kBAAM,EAAK5B,eAAe,EAAKE,MAAMiC,UAIzC0D,GAAavD,KAAKpC,MAAM4B,UAExBQ,KAAKI,SAAS,CACVZ,SAAWF,EACXG,SAAWJ,IACZ,kBAAM,EAAKqE,uBAOD,KAArB1D,KAAKpC,MAAMgC,MAAc,CAGzB,IAAM+D,EAAS,CACXzC,IAAMlB,KAAKpC,MAAMiC,KAAKqB,IACtB0C,IAAML,EACNM,IAAMP,GAEVjC,QAAQC,IAAIqC,GACZtD,IAAMyD,KAAK9D,KAAKpC,MAAM+B,OAAS,qBAAsBgE,EAAS,CAAElC,QAAU,CAAC,aAAezB,KAAKpC,MAAMgC,SACpGW,MAAK,SAAAmB,GACFL,QAAQC,IAAII,EAAIjB,KAAKsD,oBAExB5C,OAAM,SAAAC,GAAG,OAAIA,Q,qCAKPvB,GACXwB,QAAQC,IAAIzB,GACZQ,IAAMyD,KAAK9D,KAAKpC,MAAM+B,OAAS,iBAAkBE,EAAO,CAAE4B,QAAU,CAAC,aAAezB,KAAKpC,MAAMgC,SAC9FW,MAAK,SAAAmB,GAAG,OACLL,QAAQC,IAAII,EAAIjB,SACjBU,OAAM,SAAAC,GAAG,OAAIA,O,wCAIhB,IAAM4C,EAAS,CACXxE,SAAWQ,KAAKpC,MAAM4B,SACtBC,SAAWO,KAAKpC,MAAM6B,SACtByB,IAAMlB,KAAKpC,MAAM8B,SAGrBW,IAAMyD,KAAK9D,KAAKpC,MAAM+B,OAAS,mBAAoBqE,EAAQ,CAACvC,QAAU,CAAC,aAAezB,KAAKpC,MAAMgC,SACjGuB,OAAM,SAAAC,GAAG,OAAIA,O,qCAOb,IACI6C,EADUjE,KAAKpC,MAAMsB,QACH,GAClBgF,EAASlE,KAAKpC,MAAMY,YAMxB,OALmBwB,KAAKpC,MAAMS,YAAY4D,OACb,EAAKgC,EACTC,EAAOD,I,oCAOtB7H,GACV,GAA0B,MAAtBA,EAAM+H,OAAOvG,MAAe,CAG5B,GAAiD,eAA7CxB,EAAM+H,OAAOvG,MAAMwG,SAASC,UAAUnE,GACtC,OACI,kBAACoE,EAAA,EAAD,eAASpE,GAAG,kBAAqB9D,GAAjC,gBAID,GAAiD,eAA7CA,EAAM+H,OAAOvG,MAAMwG,SAASC,UAAUnE,GAC7C,OACI,kBAACoE,EAAA,EAAD,eAASpE,GAAG,kBAAqB9D,GAAjC,kBAID,GAAiD,aAA7CA,EAAM+H,OAAOvG,MAAMwG,SAASC,UAAUnE,GAC7C,OACI,kBAACoE,EAAA,EAAD,eAASpE,GAAG,kBAAqB9D,GAAjC,mBAMZ,OACI,kBAACkI,EAAA,EAAYlI,EAAb,S,sCAOJ,OAAK4D,KAAKpC,MAAME,YAGL,qCAFA,kBAACyG,EAAA,EAAD,CAASC,UAAU,a,+BAO9B,OACI,yBAAKC,UAAU,aACX,kBAACC,EAAD,KAGQ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,4BAAK7E,KAAKpC,MAAME,YAAhB,MAAgCkC,KAAKpC,MAAMI,cAC3C,kBAAC8G,EAAA,EAAD,CAAOC,QAAQ,aACX,8BAAO/E,KAAKrC,iBACZ,0BAAM8G,UAAU,cAAczE,KAAKpC,MAAMe,YACzC,0BAAM8F,UAAU,eAAezE,KAAKpC,MAAMmB,SAC1C,0BAAM0F,UAAWzE,KAAKpC,MAAMoB,aAAcgB,KAAKpC,MAAMQ,oBACrD,0BAAMqG,UAAU,eAAezE,KAAKpC,MAAMkB,YAAYuD,MAAM,IAC5D,0BAAMoC,UAAU,eAAezE,KAAKpC,MAAMgB,aAC1C,6BACA,6CAAmBoB,KAAKpC,MAAM4B,SAA9B,OAA4CQ,KAAKpC,MAAM6B,SAAvD,gBAGR,kBAACmF,EAAA,EAAD,CAAKC,GAAI,GACL,2CACA,kBAACC,EAAA,EAAD,CAAOC,QAAQ,QACX,uCACW/E,KAAKpC,MAAM0B,WADtB,IACkC,6BADlC,cAEgBU,KAAKpC,MAAMyB,WAF3B,KAEwC,iCAKpD,kBAACsF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kDAAwB5E,KAAKpC,MAAMQ,sBAG3C,kBAACuG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACrI,EAAD,CAAYwI,UAAWhF,KAAKnD,cAAeqD,GAAG,QAAQ+E,SAAUjF,KAAKpC,MAAMc,iBAC3E,kBAACwG,EAAA,EAAD,CAAgBC,UAAU,MAAMC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAAOC,QAASvF,KAAKxC,cAAegI,KAAK,kBAC/F,kBAACC,EAAA,EAAD,CAAQC,QAAS1F,KAAKhD,UAAW2I,MAAO,CAACC,WAAY,IAAKb,QAAQ,YAAY7E,GAAG,cAC7E,yBAAKuE,UAAU,qBAAqBoB,MAAM,QAAQC,OAAO,QAAQC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,8BAC3G,0BAAMC,SAAS,UAAUC,EAAE,gNAAgNC,SAAS,YACpP,0BAAMF,SAAS,UAAUC,EAAE,4LAA4LC,SAAS,eAI5O,kBAAClB,EAAA,EAAD,CAAgBC,UAAU,MAAMC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAAOC,QAASvF,KAAKxC,eAC3E,kBAACiI,EAAA,EAAD,CAAQC,QAAS1F,KAAKvC,QAASsH,QAAQ,OAAOY,MAAO,CAACC,WAAa,IAAK1F,GAAG,aAAasF,KAAK,cACzF,yBAAKK,MAAM,QAAQC,OAAO,QAAQC,QAAQ,YAAYtB,UAAU,aAAauB,KAAK,eAAeC,MAAM,8BACnG,0BAAMC,SAAS,UAAUC,EAAE,sFAC3B,0BAAMD,SAAS,UAAUC,EAAE,0EAM3C,kBAACvB,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACK,EAAA,EAAD,CAAgBC,UAAU,OAAOC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAAOC,QAASvF,KAAKxC,eAC5E,kBAACiI,EAAA,EAAD,CAAQC,QAAS1F,KAAKzC,YAAawH,QAAQ,kBAAkBY,MAAO,CAACU,MAAQ,SAAUnG,GAAG,WAAWsF,KAAK,YACtG,yBAAKK,MAAM,QAAQC,OAAO,QAAQC,QAAQ,YAAYtB,UAAU,YAAYuB,KAAK,eAAeC,MAAM,8BAClG,0BAAMC,SAAS,UAAUC,EAAE,mtBAKzC,6BAEN,kBAACxB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACyB,EAAA,EAAD,CAAUC,GAAIvG,KAAKpC,MAAMc,gBACrB,yBAAKwB,GAAG,WACJ,kBAAC4E,EAAA,EAAD,CAAOC,QAAQ,WACX,kBAACD,EAAA,EAAM0B,QAAP,mBACI,oDAC0B,6BAD1B,SAEWxG,KAAKpC,MAAMuB,OAFtB,IAE8B,6BAF9B,cAGgBa,KAAKpC,MAAMwB,SAH3B,KAGsC,6BAHtC,YAIcY,KAAKpC,MAAMa,kBAAkB,6BAJ3C,sBAKwBuB,KAAKpC,MAAMY,iBAMvD,kBAACoG,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACyB,EAAA,EAAD,CAAUC,GAAIvG,KAAKpC,MAAMkC,OACrB,6BACI,kBAACgF,EAAA,EAAD,CAAOC,QAAQ,WACX,kBAACD,EAAA,EAAM0B,QAAP,cACA,4CACmBxG,KAAKpC,MAAMmB,QAAQ,6BADtC,kBAEoBiB,KAAKpC,MAAMO,WAAW8D,OAAO,6BAFjD,iBAGmBjC,KAAKpC,MAAMW,MAAM,6BAHpC,iBAImByB,KAAKpC,MAAMY,YAAY,6BAJ1C,uBAKyBwB,KAAKpC,MAAMa,kBAAkB,6BALtD,wBAM0BuB,KAAKpC,MAAMO,WAAW6B,KAAKpC,MAAMW,MAAM,GAAG,6BANpE,uBAOyByB,KAAKpC,MAAMO,WAAW6B,KAAKpC,MAAMW,OAAO,6BAPjE,oBAQsByB,KAAKpC,MAAMO,WAAW6B,KAAKpC,MAAMW,MAAM,GAAG,6BARhE,gBASkByB,KAAKpC,MAAMe,WAAW,6BATxC,iBAUmBqB,KAAKpC,MAAMQ,mBAAmB,6BAVjD,iBAWmB4B,KAAKpC,MAAMgB,YAAY,6BAX1C,iBAYmBoB,KAAKpC,MAAMiB,mBAQ1D,yBAAK8G,MAAO,CAAEG,OAAS,Y,GAhmBCW,a,QCdnBC,E,kDAEjB,WAAYtK,GAAO,IAAD,8BACd,cAAMA,IAEDuK,WAAa,EAAKA,WAAW7J,KAAhB,gBAClB,EAAK8J,mBAAqB,EAAKA,mBAAmB9J,KAAxB,gBAC1B,EAAK+J,kBAAoB,EAAKA,kBAAkB/J,KAAvB,gBACzB,EAAKgK,oBAAsB,EAAKA,oBAAoBhK,KAAzB,gBAE3B,EAAKiK,cAAgB,EAAKA,cAAcjK,KAAnB,gBACrB,EAAKkK,aAAe,EAAKA,aAAalK,KAAlB,gBAEpB,EAAKmK,SAAW,EAAKA,SAASnK,KAAd,gBAEhB,EAAKc,MAAQ,CAETsJ,UAAW,EACXC,iBAAkB,EAClBC,gBAAiB,EACjBC,kBAAmB,EACnBC,WAAY,EACZC,WAAa,CAAC7G,WAAY,GAAIC,UAAY,GAAIG,YAAc,IAE5D0G,kBAAmB,EAGnBC,SAAW,GACXvH,GAAK,GAGLQ,WAAa,GACbC,UAAY,GACZG,YAAc,IA/BJ,E,gEAoCE,IAAD,OACf,GAAIS,aAAaC,QAAQ,YAAa,CAClCxB,KAAK2G,aAEL,IAAI/G,EAAQ2B,aAAaC,QAAQ,YAC5BrB,EAAS,GAEVA,EAAS,+BAIbE,IAAMC,IAAIH,EAAS,gBAAgB,CAAEsB,QAAU,CAAE,aAAe7B,KAC/DW,MAAM,SAAAmB,GACHL,QAAQC,IAAI,EAAK1D,OACb8D,EAAIjB,MACJ,EAAKL,SAAS,CACVqH,SAAW/F,EAAIjB,KAAKgH,SACpBvH,GAAKwB,EAAIjB,KAAKS,Y,+BAOzBc,GAAI,IAAD,OACRA,EAAE0F,iBAEF,IAAM7J,EAAQ,CACV6C,WAAaV,KAAKpC,MAAM8C,WACxBC,UAAYX,KAAKpC,MAAM+C,UACvBG,YAAcd,KAAKpC,MAAMkD,YACzB6G,UAAY3H,KAAKpC,MAAM6J,UAGvB7H,EAAQ2B,aAAaC,QAAQ,YAC7BrB,EAAS,GAETA,EAAS,+BAKbE,IAAMyD,KAAK3D,EAAS,cAAetC,EAAO,CAAE4D,QAAU,CAAE,aAAe7B,KACtEW,MAAK,SAAAmB,GAEF,IAAMkG,EAAS,CACXC,OAAS,EAAKjK,MAAMsC,GACpB4H,QAAUpG,EAAIjB,MAElBJ,IAAMyD,KAAK3D,EAAS,iBAAkByH,EAAQ,CAACnG,QAAU,CAAC,aAAe7B,KAEzE,EAAKxD,MAAM2L,QAAQC,KAAK,CACpBC,SAAW,gBAGhB9G,OAAO,SAAAC,GAAG,OAAIA,O,mCAMjBpB,KAAKI,SAAS,CACV8G,UAAW,M,yCAIAlF,GAAI,IAAD,OACZkG,EAAYlG,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACVM,WAAasB,EAAEmG,OAAO3F,QACtB,WAAO,EAAKuE,cAAcmB,EAAW,EAAKtK,MAAM8C,iB,wCAItCsB,GAAI,IAAD,OACXkG,EAAYlG,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACVO,UAAYqB,EAAEmG,OAAO3F,QACrB,WAAO,EAAKuE,cAAcmB,EAAW,EAAKtK,MAAM+C,gB,0CAIpCqB,GAAI,IAAD,OACbkG,EAAYlG,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACVU,YAAckB,EAAEmG,OAAO3F,QACvB,WAAO,EAAKuE,cAAcmB,EAAW,EAAKtK,MAAMkD,kB,oCAI1CoH,EAAW1F,GACrB,IAAI4F,EAAsBpI,KAAKpC,MAAM2J,WACjCJ,EAAkBnH,KAAKpC,MAAMuJ,gBAC7BC,EAAiBpH,KAAKpC,MAAMwJ,eAC5BC,EAAmBrH,KAAKpC,MAAMyJ,iBAElC,OAAOa,GAEH,IAAK,aAEDf,EAAkB3E,EAAMP,QAAU,GAAKO,EAAMP,OAAS,GACtDmG,EAAoB1H,WAAayG,EAAkB,GAAK,oDACxD,MAEJ,IAAK,YAEDC,EAAiB5E,EAAMP,QAAU,KAAQO,EAAMP,QAAU,IACzDmG,EAAoBzH,UAAYyG,EAAiB,GAAK,gBAEtD,MAEJ,IAAK,cAED,GAAqB,IAAjB5E,EAAMP,OAAa,CACnBoF,GAAmB,EACnBrH,KAAKI,UAAS,SAACxC,GAAD,MAAY,CACtBkD,YAAclD,EAAMyK,aACpB,WAAOD,EAAoBtH,YAAiC,MAChE,MAEC,GAAI0B,EAAMP,QAAU,GAAI,CACzBoF,GAAmB,EACnBe,EAAoBtH,YAAcuG,EAAmB,GAAK,iBAC1D,OAWZrH,KAAKI,SAAS,CACVmH,WAAaa,EACbjB,gBAAkBA,EAClBC,eAAiBA,EACjBC,iBAAmBA,GAEnBrH,KAAKgH,gB,qCAMR3F,QAAQC,IAAI,cAAgBtB,KAAKpC,MAAMuJ,iBACvC9F,QAAQC,IAAI,aAAetB,KAAKpC,MAAMyJ,kBACtChG,QAAQC,IAAI,YAActB,KAAKpC,MAAMwJ,gBACtCpH,KAAKI,SAAS,CACVkH,UAAYtH,KAAKpC,MAAMuJ,iBACXnH,KAAKpC,MAAMwJ,gBACXpH,KAAKpC,MAAMyJ,iBACvBG,iBAAmBxH,KAAKpC,MAAM0J,WAAatH,KAAKpC,MAAMsJ,a,+BAS1D,OACI,yBAAKzC,UAAU,aACZ,kBAACC,EAAD,KACK,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAEA,4CACA,6BACI,kBAACE,EAAA,EAAD,CAAOC,QAAQ,aACX,kBAACuD,EAAA,EAAD,KAEI,kBAACxD,EAAA,EAAM0B,QAAP,KACQ,kBAAC7B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK2D,EAAE,QACH,kBAACD,EAAA,EAAKE,QAAN,CACIhG,MAAOxC,KAAKpC,MAAM8C,WAClB/D,KAAK,OACL8L,KAAK,KACLC,SAAU1I,KAAK4G,mBACfpB,KAAO,aACPmD,YAAc,cACdC,SAAU5I,KAAKpC,MAAMuJ,gBACrB0B,WAAY7I,KAAKpC,MAAMuJ,mBAI/B,kBAACvC,EAAA,EAAD,CAAKkE,GAAG,QAAR,MACA,kBAAClE,EAAA,EAAD,CAAKkE,GAAG,QAEJ,kBAACR,EAAA,EAAKE,QAAN,CACQhG,MAAOxC,KAAKpC,MAAMkD,YAClBnE,KAAK,OAEL8L,KAAK,KACLC,SAAU1I,KAAK8G,oBACftB,KAAO,cACPmD,YAAc,eACdC,SAAU5I,KAAKpC,MAAMyJ,iBACrBwB,WAAY7I,KAAKpC,MAAMyJ,sBAO/C,kBAACiB,EAAA,EAAKS,KAAN,CAAWtE,UAAU,aAAakB,MAAO,CAAEU,MAAQ,SAAnD,oDAGA,kBAACiC,EAAA,EAAKS,KAAN,CAAWtE,UAAU,aAAakB,MAAO,CAACU,MAAQ,UAAlD,yCAIA,kBAACiC,EAAA,EAAKE,QAAN,CACIhG,MAAOxC,KAAKpC,MAAM+C,UAClBT,GAAK,YACLsF,KAAO,YACPwD,GAAG,WAAWC,KAAO,IACrBP,SAAU1I,KAAK6G,kBACf8B,YAAc,qBACdC,SAAU5I,KAAKpC,MAAMwJ,eACrByB,WAAY7I,KAAKpC,MAAMwJ,iBAE3B,kBAACkB,EAAA,EAAKS,KAAN,CAAWtE,UAAU,cAArB,kEAGA,kBAAC6D,EAAA,EAAKS,KAAN,CAAWtE,UAAU,cAArB,kFASR,kBAACgB,EAAA,EAAD,CAAQ9I,KAAK,SAASoI,QAAQ,OAAOW,QAAS1F,KAAKiH,SAAUhC,UAAWjF,KAAKpC,MAAM4J,kBAAnF,gBAGA,kBAACc,EAAA,EAAKS,KAAN,CAAWtE,UAAU,cAArB,4CAOZ,yBAAKkB,MAAO,CAAEG,OAAS,Y,GA5REW,a,8PCFzC,IAAMyC,EAAchN,IAAOO,MAAMC,OAAM,SAAAN,GAAK,MAAK,CAC7CO,KAAO,OACPgM,YAAc,kCAFEzM,CAAH,KAgBXiN,EAAQ,SAAA/M,GAAK,OACf,6BACI,kBAAC0I,EAAA,EAAD,CAAOC,QAAQ,aACX,kBAAC,IAAD,CAAMqE,GAAI,CAAEnB,SAAW,IAAKrK,MAAO,CAAEsC,GAAK9D,EAAMyB,MAAMqD,MAAQyE,MAAO,CAAC0D,MAAQ,YAC1E,kBAACvE,EAAA,EAAM0B,QAAP,KAAgBpK,EAAMyB,MAAM6C,WAA5B,KAA0CtE,EAAMyB,MAAMiD,cAE1D,8BAAO1E,EAAMyB,MAAM8C,WACnB,6BACA,kBAACgE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,2CAAgB,kBAACC,EAAA,EAAMwE,KAAP,KAAalN,EAAMyB,MAAM8J,YACzC,0BAAMhC,MAAO,CAACC,WAAa,KAA3B,YAA0CxJ,EAAMyB,MAAMkD,YACtD,0BAAM4E,MAAO,CAACC,WAAa,KAA3B,gBAA8CxJ,EAAMyB,MAAMmD,aAA1D,OAA4E5E,EAAMyB,MAAMoD,aAAxF,eAGJ,kBAAC2D,EAAA,EAAD,CAAKC,GAAI,GACL,yBAAKc,MAAO,CAACU,MAAQ,UACjB,kBAACvB,EAAA,EAAMwE,KAAP,CAAavE,QAAQ,oBAArB,oBAOhB,+BAIawE,E,kDAEjB,WAAYnN,GAAO,IAAD,8BACd,cAAMA,IAEDoN,OAAS,EAAKA,OAAO1M,KAAZ,gBACd,EAAK2M,WAAa,EAAKA,WAAW3M,KAAhB,gBAElB,EAAKc,MAAQ,CACT8L,OAAQ,GACRF,OAAS,IARC,E,gEAYE,IAAD,OACXrJ,EAAS,GAETA,EAAS,+BAIbE,IAAMC,IAAIH,EAAS,oBACdI,MAAK,SAAAC,GACF,EAAKJ,SAAS,CAAEsJ,OAASlJ,EAASC,UAErCU,OAAM,SAAUC,GACbC,QAAQC,IAAIF,Q,iCAIbqI,GACP,OAAOA,EAAWE,KAAI,SAASC,EAAcC,GACzC,OAAO,kBAAC,EAAD,CAAOhM,MAAO+L,EAAcxH,IAAKyH,EAAGC,MAASD,S,+BAKxD7J,KAAKI,SAAS,CACVoJ,OAAS7H,SAASY,eAAe,aAAaC,U,+BAO5C,IAAD,OAEDuH,EAAiB/J,KAAKpC,MAAM8L,OAAOM,QACnC,SAACnM,GACG,OAAuE,IAA/DA,EAAM6C,WAAWuJ,cAAcC,QAAQ,EAAKtM,MAAM4L,UACc,IAAhE3L,EAAMiD,YAAYmJ,cAAcC,QAAQ,EAAKtM,MAAM4L,UACH,IAAhD3L,EAAM8J,UAAUuC,QAAQ,EAAKtM,MAAM4L,WAGnD,OACI,yBAAK/E,UAAU,aACX,kBAACC,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,uCAEJ,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACqE,EAAD,CAAahJ,GAAG,YAAawI,SAAU1I,KAAKwJ,WAG9C,6BACN,kBAAC7E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACK5E,KAAKyJ,WAAWM,MAK7B,yBAAKpE,MAAO,CAAEG,OAAS,Y,GAzEAW,aC1ClB0D,E,kDAEjB,WAAY/N,GAAQ,IAAD,8BACf,cAAMA,IAEDgO,MAAQ,EAAKA,MAAMtN,KAAX,gBACb,EAAKuN,sBAAwB,EAAKA,sBAAsBvN,KAA3B,gBAC7B,EAAKwN,sBAAwB,EAAKA,sBAAsBxN,KAA3B,gBAE7B,EAAKc,MAAQ,CAET2M,WAAa,GACbC,cAAgB,GAChBC,cAAgB,GAChBC,SAAU,EAEVnD,WAAY,CAACc,SAAU,GAAIsC,MAAO,GAAIC,SAAU,IAChDC,eAAgB,EAChBC,YAAY,EACZC,eAAe,EACfzD,WAAW,EACX0D,aAAe,GAEfC,OAAQ,GArBG,E,+GAgCGjJ,GAAI,IAAD,OACfkG,EAAYlG,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACVoK,cAAgBxI,EAAEmG,OAAO3F,QACzB,WAAO,EAAKuE,cAAcmB,EAAW,EAAKtK,MAAM4M,oB,4CAIlCxI,GAAI,IAAD,OACfkG,EAAYlG,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACVqK,cAAgBzI,EAAEmG,OAAO3F,QACzB,WAAO,EAAKuE,cAAcmB,EAAW,EAAKtK,MAAM6M,oB,oCAQ1CvC,EAAW1F,GACrB,IAAI4F,EAAsBpI,KAAKpC,MAAM2J,WACjCwD,EAAgB/K,KAAKpC,MAAMmN,cAC3BF,EAAgB7K,KAAKpC,MAAMiN,cAE/B,OAAO3C,GAEH,IAAK,WACD6C,EAAgBvI,EAAMP,QAAU,EAChCmG,EAAoBwC,SAAWG,EAAgB,GAAK,gBACpD,MAEJ,IAAK,WAEDF,EAAgBrI,EAAMP,QAAS,EAC/BmG,EAAoBC,SAAWwC,EAAgB,GAAK,gBAU5D7K,KAAKI,SAAS,CAACmH,WAAaa,EACZyC,cAAgBA,EAChBE,cAAgBA,GAEhB/K,KAAKgH,gB,4BAInBhF,GAAI,IAAD,OACLA,EAAE0F,iBAEF,IAAMwD,EAAe,CACjBzD,SAAWzH,KAAKpC,MAAM4M,cACtBW,aAAenL,KAAKpC,MAAM6M,eAG1BtK,EAAS,GAETA,EAAS,+BAKbE,IAAMyD,KAAK3D,EAAS,cAAgB+K,EAAc,CAACE,iBAAgB,IAClE7K,MAAK,SAAAmB,GACFH,aAAa8J,QAAQ,WAAY3J,EAAIjB,MAErC,EAAKrE,MAAM2L,QAAQC,KAAK,CACPC,SAAW,gBAI/B9G,OAAM,SAAAC,GACH,EAAKhB,SAAS,CACV6K,OAAQ,S,+BAQhB,OACI,yBAAKxG,UAAU,aACX,kBAACC,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACyD,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKgD,MAAN,KACI,qCACA,kBAAChD,EAAA,EAAKiD,MAAN,oBACA,kBAACjD,EAAA,EAAKE,QAAN,CACIhG,MAAOxC,KAAKpC,MAAM4N,iBAClBtL,GAAK,qBACLwI,SAAY1I,KAAKqK,sBACjB7E,KAAM,aACR,6BAEF,kBAAC8C,EAAA,EAAKiD,MAAN,mBACA,kBAACjD,EAAA,EAAKE,QAAN,CACI7L,KAAO,WACP6F,MAAOxC,KAAKpC,MAAM6N,iBAClBvL,GAAK,qBACLwI,SAAY1I,KAAKsK,sBACjB9E,KAAO,cAIf,kBAACC,EAAA,EAAD,CAAQ9I,KAAK,SAASoI,QAAQ,OAAOW,QAAS1F,KAAKoK,OAAnD,SAIA,kBAAC,IAAD,CAAMhB,GAAG,YACL,kBAAC3D,EAAA,EAAD,CAAQV,QAAQ,YAAYY,MAAO,CAAEC,WAAa,KAAlD,sBAOhB,6BACA,kBAACjB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACyB,EAAA,EAAD,CAAUC,GAAIvG,KAAKpC,MAAMqN,OACrB,6BACK,kBAACnG,EAAA,EAAD,CAAOC,QAAS,UACjB,mEAUpB,yBAAKY,MAAO,CAAEG,OAAS,Y,GA/KJW,aCKdiF,E,kDAEjB,WAAYtP,GAAQ,IAAD,8BAEf,cAAMA,IAEDuP,wBAA0B,EAAKA,wBAAwB7O,KAA7B,gBAC/B,EAAK8O,qBAAuB,EAAKA,qBAAqB9O,KAA1B,gBAC5B,EAAK+O,wBAA0B,EAAKA,wBAAwB/O,KAA7B,gBAE/B,EAAKgP,SAAW,EAAKA,SAAShP,KAAd,gBAEhB,EAAKc,MAAQ,CAET4N,iBAAiB,GACjBO,cAAc,GACdN,iBAAiB,GACjBO,mBAAoB,GACpBzE,WAAY,CAACc,SAAU,GAAIsC,MAAO,GAAIC,SAAU,IAChDC,eAAgB,EAChBC,YAAY,EACZC,eAAe,EACfzD,WAAW,EACX2E,WAAa,GAEbC,mBAAoB,GACpBC,mBAAoB,IAxBT,E,oEA6BKnK,GAAI,IAAD,OACjBkG,EAAYlG,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACVoL,iBAAkBxJ,EAAEmG,OAAO3F,QAC3B,WAAO,EAAKuE,cAAcmB,EAAW,EAAKtK,MAAM4N,uB,2CAInCxJ,GAAI,IAAD,OACdkG,EAAYlG,EAAEmG,OAAO3C,KAE3BxF,KAAKI,SAAS,CACV2L,cAAe/J,EAAEmG,OAAO3F,QACxB,WAAO,EAAKuE,cAAcmB,EAAW,EAAKtK,MAAMmO,oB,8CAIhC/J,GAAI,IAAD,OACjBkG,EAAYlG,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACVqL,iBAAkBzJ,EAAEmG,OAAO3F,QAC3B,WAAO,EAAKuE,cAAcmB,EAAW,EAAKtK,MAAM6N,uB,oCAQ1CvD,EAAW1F,GACrB,IAAI4F,EAAsBpI,KAAKpC,MAAM2J,WACjCuD,EAAa9K,KAAKpC,MAAMkN,WACxBC,EAAgB/K,KAAKpC,MAAMmN,cAC3BF,EAAgB7K,KAAKpC,MAAMiN,cAE/B,OAAO3C,GACH,IAAK,QACD4C,EAAatI,EAAM4J,MAAM,wCACzBhE,EAAoBuC,MAAQG,EAAa,GAAK,cAC9C,MAEJ,IAAK,WACDC,EAAgBvI,EAAMP,QAAU,EAChCmG,EAAoBwC,SAAWG,EAAgB,GAAK,gBACpD,MAEJ,IAAK,WACDF,EAAgBrI,EAAMP,QAAS,EAC/BmG,EAAoBC,SAAWwC,EAAgB,GAAK,gBAQ5D7K,KAAKI,SAAS,CAACmH,WAAaa,EACZyC,cAAgBA,EAChBC,WAAaA,EACbC,cAAgBA,GAEhB/K,KAAKgH,gB,qCAKrBhH,KAAKI,SAAS,CAACkH,UAAUtH,KAAKpC,MAAMiN,eAAiB7K,KAAKpC,MAAMkN,YAAc9K,KAAKpC,MAAMmN,kB,+BAGpF/I,GACLA,EAAE0F,iBACF,IAAM2E,EAAa,CACf5E,SAAUzH,KAAKpC,MAAM4N,iBACrBc,UAAYtM,KAAKpC,MAAMmO,cACvBZ,aAAenL,KAAKpC,MAAM6N,kBAG1BtL,EAAS,GAETA,EAAS,+BAKbE,IAAMyD,KAAM3D,EAAS,iBAAkBkM,EAAY,CAACjB,iBAAgB,IACnE7K,MAAK,SAAAmB,GACCA,EAAI6K,OAAO,MACVlL,QAAQC,IAAI,mBAIpBtB,KAAKI,SAAY,CACboL,iBAAiB,GACjBO,cAAc,GACdN,iBAAiB,IAGrBzL,KAAK5D,MAAM2L,QAAQC,KAAK,CACpBC,SAAW,a,0CAQX1G,aAAaC,QAAQ,aACrBxB,KAAK5D,MAAM2L,QAAQC,KAAK,CACpBC,SAAW,e,+BAqBnB,OACI,yBAAKxD,UAAU,aACX,kBAACC,EAAD,KACI,kBAACC,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACyD,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKgD,MAAN,KACI,8CACA,kBAAChD,EAAA,EAAKiD,MAAN,oBACA,kBAACjD,EAAA,EAAKE,QAAN,CACIhG,MAAOxC,KAAKpC,MAAM4N,iBAClBtL,GAAK,gBACLwI,SAAY1I,KAAK2L,wBACjBnG,KAAO,aACT,6BAEF,kBAAC8C,EAAA,EAAKiD,MAAN,gBACA,kBAACjD,EAAA,EAAKE,QAAN,CACIhG,MAAOxC,KAAKpC,MAAMmO,cAClB7L,GAAK,iBACLwI,SAAY1I,KAAK4L,qBACjBpG,KAAO,UACT,6BAEF,kBAAC8C,EAAA,EAAKiD,MAAN,mBACA,kBAACjD,EAAA,EAAKE,QAAN,CACI7L,KAAO,WACP6F,MAAOxC,KAAKpC,MAAM6N,iBAClBvL,GAAK,gBACLwI,SAAY1I,KAAK6L,wBACjBrG,KAAO,cAIf,kBAACC,EAAA,EAAD,CAAQ9I,KAAK,SAASoI,QAAQ,OAAOW,QAAS1F,KAAK8L,SAAU7G,UAAWjF,KAAKpC,MAAM0J,WAAnF,kBAIA,kBAAC,IAAD,CAAM8B,GAAG,UACL,kBAAC3D,EAAA,EAAD,CAAQV,QAAQ,YAAYY,MAAO,CAAEC,WAAa,KAAlD,YAOZ,kBAAChB,EAAA,EAAD,CAAKC,GAAI,MAMjB,yBAAKc,MAAO,CAAEG,OAAS,Y,GArNFW,a,4DCC/B0C,EAAQ,SAAA/M,GAAK,OACf,6BACI,kBAAC0I,EAAA,EAAD,CAAOC,QAAQ,aACX,kBAAC,IAAD,CAAMqE,GAAI,CAAEnB,SAAW,IAAKrK,MAAO,CAAEsC,GAAK9D,EAAMyB,MAAMqD,MAAQyE,MAAO,CAAC0D,MAAQ,YAC1E,kBAACvE,EAAA,EAAM0B,QAAP,KAAgBpK,EAAMyB,MAAM6C,WAA5B,KAA0CtE,EAAMyB,MAAMiD,cAE1D,8BAAO1E,EAAMyB,MAAM8C,WACnB,6BACA,kBAACgE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,0BAAMc,MAAO,CAACC,WAAa,KAA3B,cAA4C4G,OAAOpQ,EAAMyB,MAAM4O,gBAC/D,0BAAM9G,MAAO,CAACC,WAAa,KAA3B,YAA0CxJ,EAAMyB,MAAMkD,YACtD,0BAAM4E,MAAO,CAACC,WAAa,KAA3B,gBAA8CxJ,EAAMyB,MAAMmD,aAA1D,OAA4E5E,EAAMyB,MAAMoD,aAAxF,eAGJ,kBAAC2D,EAAA,EAAD,CAAKC,GAAI,GACL,yBAAKc,MAAO,CAACU,MAAQ,UACjB,kBAACvB,EAAA,EAAMwE,KAAP,CAAY3D,MAAO,CAAC+G,YAAc,IAAKhH,QAAStJ,EAAMuQ,MAAtD,QAGA,kBAAC7H,EAAA,EAAMwE,KAAP,CAAY5D,QAAStJ,EAAMwQ,QAA3B,cAOhB,+BAIaC,E,kDAEjB,WAAYzQ,GAAQ,IAAD,8BACf,cAAMA,IAED0Q,OAAS,EAAKA,OAAOhQ,KAAZ,gBACd,EAAKiQ,UAAY,EAAKA,UAAUjQ,KAAf,gBACjB,EAAKkQ,cAAgB,EAAKA,cAAclQ,KAAnB,gBAErB,EAAKmQ,YAAc,EAAKA,YAAYnQ,KAAjB,gBACnB,EAAKoQ,cAAgB,EAAKA,cAAcpQ,KAAnB,gBACrB,EAAKqQ,UAAY,EAAKA,UAAUrQ,KAAf,gBACjB,EAAKsQ,YAAc,EAAKA,YAAYtQ,KAAjB,gBACnB,EAAKuQ,gBAAkB,EAAKA,gBAAgBvQ,KAArB,gBACvB,EAAKwQ,eAAiB,EAAKA,eAAexQ,KAApB,gBAEtB,EAAKyQ,yBAA2B,EAAKA,yBAAyBzQ,KAA9B,gBAChC,EAAK0Q,uBAAyB,EAAKA,uBAAuB1Q,KAA5B,gBAC9B,EAAK2Q,qBAAuB,EAAKA,qBAAqB3Q,KAA1B,gBAC5B,EAAK4Q,UAAY,EAAKA,UAAU5Q,KAAf,gBACjB,EAAKiK,cAAgB,EAAKA,cAAcjK,KAAnB,gBACrB,EAAKkK,aAAe,EAAKA,aAAalK,KAAlB,gBAEpB,EAAK8J,mBAAqB,EAAKA,mBAAmB9J,KAAxB,gBAC1B,EAAKgK,oBAAsB,EAAKA,oBAAoBhK,KAAzB,gBAC3B,EAAK+J,kBAAoB,EAAKA,kBAAkB/J,KAAvB,gBAEzB,EAAK6Q,aAAe,EAAKA,aAAa7Q,KAAlB,gBAGpB,EAAKc,MAAQ,CAETsC,GAAI,GACJmI,SAAW,GACXsC,MAAQ,GACRiD,WAAa,GACbpK,gBAAkB,EAClBC,gBAAkB,EAClBoK,SAAW,GACXnE,OAAS,GACTvJ,OAAS,GACT2N,sBAAwB,EAExBC,oBAAqB,EACrBC,kBAAmB,EACnBC,gBAAiB,EAEjBC,UAAY9R,EAAM8R,WAAa,EAE/B/G,iBAAkB,EAClBC,gBAAiB,EACjBC,kBAAmB,EACnBC,WAAY,EACZC,WAAa,CAAC7G,WAAY,GAAIC,UAAY,GAAIG,YAAc,IAE5DqM,UAAY,CACRzM,WAAa,GACbI,YAAc,GACdH,UAAY,IAGhBwN,cAAgB,CACZzN,WAAa,KA5DN,E,gEAmEE,IAAD,OACZd,EAAQ2B,aAAaC,QAAQ,YAC7BrB,EAAS,GAETA,EAAS,+BACTH,KAAKI,SAAS,CACVD,OAAS,iCAQjBE,IAAMC,IAAIH,EAAS,gBAAgB,CAAEsB,QAAU,CAAE,aAAe7B,KAC/DW,MAAM,SAAAmB,GAGCA,EAAIjB,KAAK2N,SACT7M,aAAa8J,QAAQ,UAAW3J,EAAIjB,KAAK2N,SAK7C,IAFA,IAAIC,EAAS,GAELxE,EAAI,EAAGA,EAAInI,EAAIjB,KAAKsD,gBAAgB9B,OAAQ4H,IAChDwE,EAAOxE,GAAK,GAKf,IAFD,IAAIyE,EAAS,GAEJC,EAAI,EAAGA,EAAI7M,EAAIjB,KAAK+N,gBAAgBvM,OAAQsM,IACjDD,EAAOC,GAAK,GAGhB,IAAIlS,EAAQ,GACZgF,QAAQC,IAAIC,aAAaC,QAAQ,eAE7BnF,EADAkF,aAAaC,QAAQ,cACb,OAEA,QAEZH,QAAQC,IAAIjF,GACRqF,EAAIjB,OAEJ,EAAKL,SAAS,CACVF,GAAKwB,EAAIjB,KAAKS,IACdmH,SAAW3G,EAAIjB,KAAKgH,SACpBkD,MAAQjJ,EAAIjB,KAAK6L,UACjBsB,WAAalM,EAAIjB,KAAKmN,WAAWvL,MAAM,EAAG,IAC1CmB,gBAAkB9B,EAAIjB,KAAK+C,gBAC3BC,gBAAkB/B,EAAIjB,KAAKgD,gBAC3BoK,SAAWnM,EAAIjB,KAAKgO,YACpBC,eAAiB,CACbrS,MAAQA,EACRM,KAAO,OACPgS,MAAQ,CACJC,KAAO,oBAEX9I,OAAS,MACT+I,OAAS,GACTC,OAAS,CACLC,MAAQ,CACJH,KAAO,iBAGfI,OAAS,CACLD,MAAQ,CACJH,KAAO,QAGfK,OAAQ,CAAC,CACLC,OAASxN,EAAIjB,KAAKsD,gBAClB6K,KAAO,YACT,CACEM,OAASb,EACTO,KAAO,aAKfO,eAAiB,CACb9S,MAAQA,EACRM,KAAO,OACPgS,MAAQ,CACJC,KAAO,sBAEX9I,OAAS,MACT+I,OAAS,GACTC,OAAS,CACLC,MAAQ,CACJH,KAAO,iBAGfI,OAAS,CACLD,MAAQ,CACJH,KAAO,gBAGfK,OAAQ,CAAC,CACLC,OAASxN,EAAIjB,KAAK+N,gBAClBI,KAAO,mBACT,CACEM,OAASZ,EACTM,KAAO,sBAKhB,kBAAMvN,QAAQC,IAAI,EAAK1D,MAAMwR,gBAChC,EAAKrC,gBAKb1M,IAAMC,IAAIH,EAAS,qBAAsB,CAACsB,QAAU,CAAC,aAAe7B,KAC/DW,MAAK,SAAAC,GACEA,EAASC,KAAKwB,OAAS,EACvB,EAAK7B,SAAS,CACd0N,sBAAwBtN,EAASC,KAAKwB,SAGtC,EAAK7B,SAAS,CACV0N,sBAAwB,UAMnC3M,OAAM,SAAUC,GACbC,QAAQC,IAAIF,Q,kCAOX,IAAD,OACJpB,KAAKpC,MAAMiQ,SAAS5L,OAAS,GAC7BjC,KAAKpC,MAAMiQ,SAASwB,SAAQ,SAAAC,GACxBjP,IAAMC,IAAI,EAAK1C,MAAMuC,OAAS,WAAamP,GAC1C/O,MAAK,SAAAmB,GAEEA,EAAIjB,MACJ,EAAKL,SAAS,CACVsJ,OAAM,sBAAO,EAAK9L,MAAM8L,QAAlB,CAA0BhI,EAAIjB,iB,6CAUxD,IAAIkM,EAAO3M,KAAKmN,UACZoC,EAAMvP,KAAKoN,YACf,OAAIpN,KAAKpC,MAAM8L,OAAOzH,OAAS,EAEpBjC,KAAKpC,MAAM8L,OAAOC,KAAI,SAASC,EAAcC,GAChD,OAAO,kBAAC,EAAD,CAAOhM,MAAO+L,EAAcxH,IAAKyH,EAAGC,MAAOD,EAAG8C,KAAM,kBAAMA,EAAK/C,IAAegD,OAAQ,kBAAM2C,EAAI3F,SAInG,kBAAC,IAAD,CAAMR,GAAG,gBAAe,kBAAC3D,EAAA,EAAD,6B,gCAQ9B5H,GAAQ,IAAD,OAEbmC,KAAKI,SAAS,CACV+M,UAAYtP,IACb,kBAAM,EAAK4P,4B,kCAIN5P,GAAQ,IAAD,OACfmC,KAAKI,SAAS,CACV+N,cAAgBtQ,IACjB,kBAAM,EAAK2P,8B,wCAGC,IAAD,OACR3P,EAAQmC,KAAKpC,MAAMuQ,cAErBvO,EAAQ2B,aAAaC,QAAQ,YACjCnB,IAAMyD,KAAK9D,KAAKpC,MAAMuC,OAAS,iBAAmBtC,EAAQ,CAAE4D,QAAS,CAAE,aAAe7B,KACrFW,MAAK,SAAAmB,GACFL,QAAQC,IAAII,EAAIjB,MAChB,EAAKL,SAAS,CACV6N,gBAAiB,IAErBuB,OAAOvP,SAASwP,YAEnBtO,OAAM,SAAAC,GAAG,OAAIA,O,yCAMCY,GAAI,IAAD,OACZkG,EAAYlG,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACV+M,UAAS,2BACFnN,KAAKpC,MAAMuP,WADT,IAELzM,WAAasB,EAAEmG,OAAO3F,UAE3B,WAAO,EAAKuE,cAAcmB,EAAW,EAAKtK,MAAMuP,UAAUzM,iB,0CAG7CsB,GAAI,IAAD,OACbkG,EAAYlG,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACV+M,UAAS,2BACFnN,KAAKpC,MAAMuP,WADT,IAELrM,YAAckB,EAAEmG,OAAO3F,UAE5B,WAAO,EAAKuE,cAAcmB,EAAW,EAAKtK,MAAMuP,UAAUrM,kB,wCAG/CkB,GAAI,IAAD,OACXkG,EAAYlG,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACV+M,UAAS,2BACFnN,KAAKpC,MAAMuP,WADT,IAELxM,UAAYqB,EAAEmG,OAAO3F,UAE1B,WAAO,EAAKuE,cAAcmB,EAAW,EAAKtK,MAAMuP,UAAUxM,gB,kCAIpD,IAAD,OACJf,EAAQ2B,aAAaC,QAAQ,YAG3BkO,EAAc1P,KAAKpC,MAAMuP,UAC/B9L,QAAQC,IAAIoO,GACZrO,QAAQC,IAAItB,KAAKpC,MAAMuC,QACvBE,IAAMyD,KAAK9D,KAAKpC,MAAMuC,OAAS,iBAAkBuP,EAAa,CAAEjO,QAAS,CAAE,aAAe7B,KACzFW,MAAK,SAAAmB,GAEF,EAAKtB,SAAS,CACV6N,gBAAiB,IAErBuB,OAAOvP,SAASwP,YAEnBtO,OAAM,SAAAC,GAAG,OAAIA,O,oCAGJ8G,EAAW1F,GACrB,IAAI4F,EAAsBpI,KAAKpC,MAAM2J,WACjCJ,EAAkBnH,KAAKpC,MAAMuJ,gBAC7BC,EAAiBpH,KAAKpC,MAAMwJ,eAC5BC,EAAmBrH,KAAKpC,MAAMyJ,iBAGlC,OAAOa,GAEH,IAAK,aAEDf,EAAkB3E,EAAMP,QAAU,GAAKO,EAAMP,OAAS,GACtDmG,EAAoB1H,WAAayG,EAAkB,GAAK,+DACxD,MAEJ,IAAK,YAEDC,EAAiB5E,EAAMP,QAAU,KAAQO,EAAMP,QAAU,IACzDmG,EAAoBzH,UAAYyG,EAAiB,GAAK,0BAEtD,MAEJ,IAAK,cAED,GAAqB,IAAjB5E,EAAMP,OAAa,CACnBoF,GAAmB,EACnBrH,KAAKI,UAAS,SAACxC,GAAD,MAAY,CACtBkD,YAAclD,EAAMyK,aACpB,WAAOD,EAAoBtH,YAAiC,MAChE,MAEC,GAAI0B,EAAMP,QAAU,GAAI,CACzBoF,GAAmB,EACnBe,EAAoBtH,YAAcuG,EAAmB,GAAK,6BAC1D,OAWZrH,KAAKI,SAAS,CACVmH,WAAaa,EACbjB,gBAAkBA,EAClBC,eAAiBA,EACjBC,iBAAmBA,GAEnBrH,KAAKgH,gB,qCAMT3F,QAAQC,IAAItB,KAAKpC,MAAMuJ,gBAAiBnH,KAAKpC,MAAMyJ,iBAAkBrH,KAAKpC,MAAMwJ,gBAEhFpH,KAAKI,SAAS,CACVkH,UAAYtH,KAAKpC,MAAMuJ,iBACXnH,KAAKpC,MAAMwJ,gBACXpH,KAAKpC,MAAMyJ,qB,uCAM3B,IAAKrH,KAAKpC,MAAM0J,UAGZ,OAAO,kBAACxC,EAAA,EAAD,CAAOC,QAAQ,UAAU/E,KAAKpC,MAAM2J,WAAW7G,WACtBV,KAAKpC,MAAM2J,WAAWzG,YACtBd,KAAKpC,MAAM2J,WAAW5G,a,iDAgBlDX,KAAKI,SAAS,CACV2N,oBAAsB/N,KAAKpC,MAAMmQ,uB,6CAKzC/N,KAAKI,SAAS,CACV6N,gBAAkBjO,KAAKpC,MAAMqQ,mB,+CAKjCjO,KAAKI,SAAS,CACV4N,kBAAoBhO,KAAKpC,MAAMoQ,qB,+BAQnCzM,aAAaoO,WAAW,YACxBpO,aAAaoO,WAAW,WACxB3P,KAAK5D,MAAM2L,QAAQC,KAAK,CACpBC,SAAW,a,sCAKnB,IAAIrI,EAAQ2B,aAAaC,QAAQ,YACjCD,aAAaoO,WAAW,YAExB,IAAM9P,EAAO,CACT4H,SAAWzH,KAAKpC,MAAMyK,SACtBiE,UAAYtM,KAAKpC,MAAM+M,OAG3BtK,IAAMyD,KAAK9D,KAAKpC,MAAMuC,OAAS,eAAgBN,EAAO,CAAC4B,QAAU,CAAC,aAAe7B,KAGjFI,KAAK5D,MAAM2L,QAAQC,KAAK,CACpBC,SAAW,a,oCAKH1G,aAAaC,QAAQ,YAGlBxB,KAAKpC,MAAMyK,SACVrI,KAAKpC,MAAM+M,MACd3K,KAAKpC,MAAMsC,GAGxBF,KAAK5D,MAAM2L,QAAQC,KAAK,CACpBC,SAAW,eACXrK,MAAQ,CAAEsC,GAAKF,KAAKpC,MAAMsC,Q,sCAO9B,GAAIqB,aAAaC,QAAQ,WACzB,OAAO,kBAAC,IAAD,CAAM4H,GAAG,iBACJ,kBAAC3D,EAAA,EAAD,CAAQV,QAAQ,kBAAkBY,MAAO,CAACC,WAAa,KAAvD,iBACI,kBAACgK,EAAA,EAAD,CAAQ7K,QAAQ,SAASY,MAAO,CAACC,WAAa,IAAK5F,KAAKpC,MAAMkQ,2B,mCAOrE+B,GAGT7P,KAAKI,SAAS,CACZ8N,UAAW2B,M,+BAMb,OAEI,yBAAKpL,UAAU,aAEX,kBAACqL,EAAA,EAAD,CACIzK,KAAMrF,KAAKpC,MAAMmQ,mBACjBgC,SAAS,SACTC,UAAU,EACVC,UAAQ,GAER,kBAACH,EAAA,EAAMI,OAAP,KACA,kBAACJ,EAAA,EAAMK,MAAP,yBAEA,kBAACL,EAAA,EAAMM,KAAP,8EAGA,kBAACN,EAAA,EAAMO,OAAP,KACA,kBAAC5K,EAAA,EAAD,CAAQV,QAAQ,YAAYW,QAAS1F,KAAKuN,0BAA1C,aAGA,kBAAC9H,EAAA,EAAD,CAAQV,QAAQ,SAASW,QAAS1F,KAAKgN,eAAvC,oBAKJ,kBAAC8C,EAAA,EAAD,CACIzK,KAAMrF,KAAKpC,MAAMoQ,iBACjB+B,SAAS,SACTC,UAAU,EACVC,UAAQ,GAER,kBAACH,EAAA,EAAMI,OAAP,KACA,kBAACJ,EAAA,EAAMK,MAAP,uBAEA,kBAACL,EAAA,EAAMM,KAAP,wCACqCpQ,KAAKpC,MAAMuQ,cAAczN,WAD9D,0EAGA,kBAACoP,EAAA,EAAMO,OAAP,KACA,kBAAC5K,EAAA,EAAD,CAAQV,QAAQ,YAAYW,QAAS1F,KAAKwN,wBAA1C,aAGA,kBAAC/H,EAAA,EAAD,CAAQV,QAAQ,SAASW,QAAS1F,KAAKqN,iBAAvC,kBAKJ,kBAACyC,EAAA,EAAD,CACIzK,KAAMrF,KAAKpC,MAAMqQ,eACjB8B,SAAS,SACTC,UAAU,EACVvH,KAAK,KACLwH,UAAQ,GAGR,kBAACH,EAAA,EAAMI,OAAP,KACI,kBAACJ,EAAA,EAAMK,MAAP,oBAEJ,kBAACL,EAAA,EAAMM,KAAP,KACA,6BACI,kBAACtL,EAAA,EAAD,CAAOC,QAAQ,aACX,kBAACuD,EAAA,EAAD,KACI,kBAACxD,EAAA,EAAM0B,QAAP,KACQ,kBAAC7B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK2D,EAAE,QAEH,kBAACD,EAAA,EAAKE,QAAN,CAEIhG,MAAOxC,KAAKpC,MAAMuP,UAAUzM,WAC5B/D,KAAK,OACL8L,KAAK,KACLC,SAAU1I,KAAK4G,mBACfpB,KAAO,gBAGf,kBAACZ,EAAA,EAAD,CAAKkE,GAAG,QAAR,MACA,kBAAClE,EAAA,EAAD,CAAKkE,GAAG,QAEJ,kBAACR,EAAA,EAAKE,QAAN,CACQhG,MAAOxC,KAAKpC,MAAMuP,UAAUrM,YAC5BnE,KAAK,OACLgJ,MAAO,CAACE,MAAQ2G,OAAOxM,KAAKpC,MAAMuP,UAAUrM,YAAYmB,SACxDwG,KAAK,KACLC,SAAU1I,KAAK8G,oBACftB,KAAO,mBAM/B,kBAAC8C,EAAA,EAAKE,QAAN,CACIhG,MAAOxC,KAAKpC,MAAMuP,UAAUxM,UAC5BT,GAAK,YACLsF,KAAO,YACPwD,GAAG,WAAWC,KAAO,IACrBP,SAAU1I,KAAK6G,sBAI1B7G,KAAKsN,mBAGV,kBAACwC,EAAA,EAAMO,OAAP,KACI,kBAAC5K,EAAA,EAAD,CAAQV,QAAQ,YAAYW,QAAS1F,KAAKyN,sBAA1C,aAGA,kBAAChI,EAAA,EAAD,CAAQV,QAAQ,UAAUW,QAAS1F,KAAK0N,UAAWzI,UAAWjF,KAAKpC,MAAM0J,WAAzE,gBAMR,kBAAC5C,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,4BAAK7E,KAAKpC,MAAMyK,SAAhB,cACA,uCAAarI,KAAKpC,MAAM+M,OACxB,6CAAmB3K,KAAKpC,MAAMgQ,aAElC,kBAAChJ,EAAA,EAAD,CAAKC,GAAI,GACL,8CACA,kBAACC,EAAA,EAAD,CAAOC,QAAQ,QACX,uCACW/E,KAAKpC,MAAM4F,gBADtB,IACuC,6BADvC,cAEgBxD,KAAKpC,MAAM6F,gBAF3B,KAE6C,iCAMzD,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,6BACA,kBAAC,IAAD,CAAMwE,GAAG,gBACL,kBAAC3D,EAAA,EAAD,CAAQV,QAAQ,eAAeW,QAAS1F,KAAKiN,YAAatH,MAAO,CAAC+G,YAAc,IAAKzH,UAAU,GAA/F,iBAKJ,kBAACQ,EAAA,EAAD,CAAQV,QAAQ,kBAAkBW,QAAS1F,KAAK8M,OAAQnH,MAAO,CAAC+G,YAAc,KAA9E,UAGA,kBAACjH,EAAA,EAAD,CAAQV,QAAQ,iBAAiBW,QAAS1F,KAAKwN,wBAA/C,kBAICxN,KAAKkN,kBAGd,6BACA,kBAACvI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC0L,EAAA,EAAD,CAAM7L,UAAU,WAAW8L,UAAWvQ,KAAKpC,MAAMsQ,UAAWsC,SAAUxQ,KAAK2N,cACvE,kBAAC8C,EAAA,EAAD,CAAKC,SAAU,EAAG/B,MAAM,eACpB,6BACA,6BACK3O,KAAK2Q,yBAGd,kBAACF,EAAA,EAAD,CAAKC,SAAU,EAAG/B,MAAM,eACpB,6BACA,kBAAC,IAAD,CAAWlO,KAAMT,KAAKpC,MAAM8Q,iBAE5B,kBAAC,IAAD,CAAWjO,KAAMT,KAAKpC,MAAMuR,sBAShD,yBAAKxJ,MAAO,CAAEG,OAAS,Y,GAxpBFW,aCrChBmK,E,kDAEjB,WAAYxU,GAAQ,IAAD,8BACf,cAAMA,IAEDuP,wBAA0B,EAAKA,wBAAwB7O,KAA7B,gBAC/B,EAAK8O,qBAAuB,EAAKA,qBAAqB9O,KAA1B,gBAC5B,EAAK+O,wBAA0B,EAAKA,wBAAwB/O,KAA7B,gBAC/B,EAAK+T,+BAAiC,EAAKA,+BAA+B/T,KAApC,gBACtC,EAAKgU,wBAA0B,EAAKA,wBAAwBhU,KAA7B,gBAC/B,EAAKmQ,YAAc,EAAKA,YAAYnQ,KAAjB,gBACnB,EAAKiU,cAAgB,EAAKA,cAAcjU,KAAnB,gBACrB,EAAKkU,eAAiB,EAAKA,eAAelU,KAApB,gBACtB,EAAKiK,cAAgB,EAAKA,cAAcjK,KAAnB,gBACrB,EAAKkK,aAAe,EAAKA,aAAalK,KAAlB,gBAEpB,EAAKc,MAAO,CAERqT,QAAU,CACN/Q,GAAK,GACLuH,SAAW,GACXkD,MAAQ,GACRC,SAAW,IAGfsG,SAAW,CACPzJ,SAAW,GACXkD,MAAQ,GACRC,SAAW,GACXuG,gBAAkB,GAClBjR,GAAK,IAGTkR,QAAU,CACN3J,SAAW,GACXkD,MAAQ,GACRC,SAAW,IAGfkG,wBAA0B,GAC1BhB,OAAQ,EAERlQ,MAAQ,GACRyR,WAAY,EAEZvG,YAAa,EACbC,eAAgB,EAChBF,eAAgB,EAChBvD,WAAY,EACZC,WAAa,CAAEoD,MAAQ,GAAIC,SAAW,GAAKvC,SAAW,KA/C3C,E,gEAoDE,IAAD,OAEZzI,EAAQ2B,aAAaC,QAAQ,YAC7BrB,EAAS,GAETA,EAAS,+BACTH,KAAKI,SAAS,CACVD,OAAS,iCAQjBE,IAAMC,IAAIH,EAAS,gBAAgB,CAAEsB,QAAU,CAAE,aAAe7B,KAC/DW,MAAM,SAAAmB,GAECA,EAAIjB,MACJ,EAAKL,SAAS,CACV6Q,QAAU,CACN/Q,GAAKwB,EAAIjB,KAAKS,IACduG,SAAW/F,EAAIjB,KAAKgH,SACpBkD,MAAQjJ,EAAIjB,KAAK6L,WAErB1M,MAAQA,S,oCAUpB,IAAM0R,EAAWtR,KAAKpC,MAAMsT,SAC5B7P,QAAQC,IAAIgQ,GAGyB,KAAjCtR,KAAKpC,MAAMsT,SAAStG,UAAmB5K,KAAKgR,iBAC5CM,EAAS1G,SAAY5K,KAAKpC,MAAMqT,QAAQrG,UAIP,KAAjC5K,KAAKpC,MAAMsT,SAASzJ,WACpB6J,EAAS7J,SAAWzH,KAAKpC,MAAMqT,QAAQxJ,UAIT,KAA9BzH,KAAKpC,MAAMsT,SAASvG,QACpB2G,EAAS3G,MAAQ3K,KAAKpC,MAAMqT,QAAQtG,OAGxC2G,EAASpR,GAAKF,KAAKpC,MAAMqT,QAAQ/Q,GACjCmB,QAAQC,IAAIgQ,GAEZjR,IAAMyD,KAAK9D,KAAKpC,MAAMuC,OAAS,eAAgBmR,EAAU,CAAE7P,QAAU,CAAC,aAAezB,KAAKpC,MAAMgC,SAC/FW,MAAK,SAAAmB,GACFL,QAAQC,IAAII,EAAIjB,SACjBU,OAAM,SAAAC,GAAG,OAAIA,O,8CAKIY,GAAI,IAAD,OACjBkG,EAAYlG,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACV8Q,SAAW,CACPzJ,SAAWzF,EAAEmG,OAAO3F,MACpBmI,MAAQ3K,KAAKpC,MAAMsT,SAASvG,MAC5BC,SAAW5K,KAAKpC,MAAMsT,SAAStG,SAC/BuG,gBAAkBnR,KAAKpC,MAAMsT,SAASC,mBAE1C,WAAO,EAAKpK,cAAcmB,EAAW,EAAKtK,MAAMsT,SAASzJ,e,2CAI5CzF,GAAI,IAAD,OACdkG,EAAYlG,EAAEmG,OAAO3C,KAE3BxF,KAAKI,SAAS,CACV8Q,SAAW,CAERvG,MAAO3I,EAAEmG,OAAO3F,MAChBiF,SAAWzH,KAAKpC,MAAMsT,SAASzJ,SAC/BmD,SAAW5K,KAAKpC,MAAMsT,SAAStG,SAC/BuG,gBAAkBnR,KAAKpC,MAAMsT,SAASC,mBAEzC,WAAO,EAAKpK,cAAcmB,EAAW,EAAKtK,MAAMsT,SAASvG,Y,8CAIzC3I,GAAI,IAAD,OACjBkG,EAAYlG,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACV8Q,SAAW,CACPtG,SAAU5I,EAAEmG,OAAO3F,MACnB2O,gBAAkBnR,KAAKpC,MAAMsT,SAASC,gBACtC1J,SAAWzH,KAAKpC,MAAMsT,SAASzJ,SAC/BkD,MAAQ3K,KAAKpC,MAAMsT,SAASvG,SAEhC,WAAO,EAAK5D,cAAcmB,EAAW,EAAKtK,MAAMsT,SAAStG,e,qDAIlC5I,GACTA,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACV8Q,SAAW,CACPC,gBAAiBnP,EAAEmG,OAAO3F,MAC1BiF,SAAWzH,KAAKpC,MAAMsT,SAASzJ,SAC/BkD,MAAQ3K,KAAKpC,MAAMsT,SAASvG,MAC5B4G,SAAWvR,KAAKpC,MAAMsT,SAAStG,c,8CAMnB5I,GACFA,EAAEmG,OAAO3C,KAC3BxF,KAAKI,SAAS,CACV0Q,wBAA0B9O,EAAEmG,OAAO3F,U,oCAQ7B0F,EAAW1F,GACrBnB,QAAQC,IAAIkB,GACZ,IAAI4F,EAAsBpI,KAAKpC,MAAM2J,WACjCuD,EAAa9K,KAAKpC,MAAMkN,WACxBC,EAAgB/K,KAAKpC,MAAMmN,cAC3BF,EAAgB7K,KAAKpC,MAAMiN,cAI/B,OAAO3C,GACH,IAAK,QACD4C,EAAatI,EAAM4J,MAAM,wCACzBhE,EAAoBuC,MAAQG,EAAa,GAAK,cAC9C,MAEJ,IAAK,WACDC,EAAgBvI,EAAMP,QAAU,EAChCmG,EAAoBwC,SAAWG,EAAgB,GAAK,gBACpD,MAEJ,IAAK,WACDF,EAAgBrI,EAAMP,QAAS,EAC/BmG,EAAoBC,SAAWwC,EAAgB,GAAK,gBAQ5D7K,KAAKI,SAAS,CAACmH,WAAaa,EACZyC,cAAgBA,EAChBC,WAAaA,EACbC,cAAgBA,GAEhB/K,KAAKgH,gB,qCAKrBhH,KAAKI,SAAS,CAACkH,UAAUtH,KAAKpC,MAAMiN,eAAiB7K,KAAKpC,MAAMkN,YAAc9K,KAAKpC,MAAMmN,kB,sCAG5E,IAAD,OACNG,EAAe,CACjBzD,SAAWzH,KAAKpC,MAAMqT,QAAQxJ,SAC9B0D,aAAenL,KAAKpC,MAAMkT,yBAG9B9Q,KAAKI,UAAS,SAACxC,GAAD,MAAY,CACtBqT,QAAO,2BACArT,EAAMqT,SADN,IAEHrG,SAAWM,EAAaC,mBAMhC9K,IAAMyD,KAAK9D,KAAKpC,MAAMuC,OAAS,cAAgB+K,EAAc,CAACE,iBAAgB,IAC7E7K,MAAK,SAAAmB,GAEEA,EAAIjB,KAEJ,EAAKL,SAAS,CACV0P,OAAQ,IAIZzO,QAAQC,IAAI,YAEjBH,OAAO,SAAAC,GACN,EAAKhB,SAAS,CACViR,WAAY,S,uCASpB,OAAIrR,KAAKpC,MAAM4T,cAAgBxR,KAAKpC,MAAM6T,qB,+BAS1C,OACI,yBAAKhN,UAAU,aAEX,kBAACqL,EAAA,EAAD,CACIzK,KAAMrF,KAAKpC,MAAMkS,MACjBC,SAAS,SACTC,UAAU,EACVC,UAAQ,GAER,kBAACH,EAAA,EAAMI,OAAP,KACG,kBAACJ,EAAA,EAAMK,MAAP,qCAEH,kBAACL,EAAA,EAAMM,KAAP,yDAEI,kBAAC9H,EAAA,EAAD,KAEI,kBAACA,EAAA,EAAKE,QAAN,CACIhG,MAAOxC,KAAKpC,MAAMkT,wBAClBnU,KAAO,WACPuD,GAAK,gBACLwI,SAAY1I,KAAK8Q,wBACjBtL,KAAO,WACPqD,UAAa7I,KAAKpC,MAAMyT,cAIpC,kBAACvB,EAAA,EAAMO,OAAP,KACA,kBAAC,IAAD,CAAMjH,GAAG,YACL,kBAAC3D,EAAA,EAAD,CAAQV,QAAQ,YAAYW,QAAS1F,KAAK0R,aAA1C,cAKJ,kBAACjM,EAAA,EAAD,CAAQV,QAAQ,SAASW,QAAS1F,KAAK+Q,eAAvC,kBAIJ,kBAACrM,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACyD,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKgD,MAAN,KACI,4CACA,kBAAChD,EAAA,EAAKiD,MAAN,mBACA,kBAACjD,EAAA,EAAKE,QAAN,CACIhG,MAAOxC,KAAKpC,MAAMsT,SAASzJ,SAC3BvH,GAAK,gBACLwI,SAAY1I,KAAK2L,wBACjBnG,KAAO,WACPmD,YAAe3I,KAAKpC,MAAMqT,QAAQxJ,SAClCmB,QAAW5I,KAAKpC,MAAMiN,gBAExB,6BAEF,kBAACvC,EAAA,EAAKiD,MAAN,gBACA,kBAACjD,EAAA,EAAKE,QAAN,CACIhG,MAAOxC,KAAKpC,MAAMsT,SAASvG,MAC3BzK,GAAK,iBACLwI,SAAY1I,KAAK4L,qBACjBpG,KAAO,QACPmD,YAAe3I,KAAKpC,MAAMqT,QAAQtG,MAClC/B,QAAW5I,KAAKpC,MAAMkN,aACxB,6BAEF,kBAACxC,EAAA,EAAKiD,MAAN,mBACA,kBAACjD,EAAA,EAAKE,QAAN,CACI7L,KAAO,WACP6F,MAAOxC,KAAKpC,MAAMsT,SAAStG,SAC3B1K,GAAK,gBACLwI,SAAY1I,KAAK6L,wBACjBrG,KAAO,WACPoD,QAAW5I,KAAKpC,MAAMmN,gBAE1B,kBAACzC,EAAA,EAAKiD,MAAN,2BACA,kBAACjD,EAAA,EAAKE,QAAN,CACI7L,KAAO,WACP6F,MAAOxC,KAAKpC,MAAMsT,SAASC,gBAC3BjR,GAAK,uBACLwI,SAAY1I,KAAK6Q,+BACjBrL,KAAO,qBAId,kBAAC,IAAD,CAAM4D,GAAG,YACN,kBAAC3D,EAAA,EAAD,CAAQV,QAAQ,YAAYY,MAAO,CAAE+G,YAAc,KAAnD,WAKJ,kBAACjH,EAAA,EAAD,CAASV,QAAQ,OAAOW,QAAS1F,KAAKiN,aAAtC,YAQhB,yBAAKtH,MAAO,CAAEG,OAAS,Y,GAlXEW,a,8PCDzC,IAAMyC,EAAchN,IAAOO,MAAMC,OAAM,SAAAN,GAAK,MAAK,CAC7CO,KAAO,OACPgM,YAAc,kCAFEzM,CAAH,KAgBXiN,EAAQ,SAAA/M,GAAK,OACf,6BACI,kBAAC0I,EAAA,EAAD,CAAOC,QAAQ,aACX,kBAAC,IAAD,CAAMqE,GAAI,CAAEnB,SAAW,IAAKrK,MAAO,CAAEsC,GAAK9D,EAAMyB,MAAMqD,MAAQyE,MAAO,CAAC0D,MAAQ,YAC1E,kBAACvE,EAAA,EAAM0B,QAAP,KAAgBpK,EAAMyB,MAAM6C,WAA5B,KAA0CtE,EAAMyB,MAAMiD,cAE1D,8BAAO1E,EAAMyB,MAAM8C,WACnB,6BACA,kBAACgE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,2CAAgB,kBAACC,EAAA,EAAMwE,KAAP,KAAalN,EAAMyB,MAAM8J,YACzC,0BAAMhC,MAAO,CAACC,WAAa,KAA3B,cAA4C4G,OAAOpQ,EAAMyB,MAAM4O,gBAC/D,0BAAM9G,MAAO,CAACC,WAAa,KAA3B,YAA0CxJ,EAAMyB,MAAMkD,YACtD,0BAAM4E,MAAO,CAACC,WAAa,KAA3B,gBAA8CxJ,EAAMyB,MAAMmD,aAA1D,OAA4E5E,EAAMyB,MAAMoD,aAAxF,eAEJ,kBAAC2D,EAAA,EAAD,CAAKC,GAAI,GACL,yBAAKc,MAAO,CAACU,MAAQ,UAEjB,kBAACZ,EAAA,EAAD,CAAQV,QAAQ,UAAUY,MAAO,CAAE+G,YAAc,GAAIhH,QAAStJ,EAAMuV,SAApE,WAGA,kBAAClM,EAAA,EAAD,CAAQV,QAAQ,SAASW,QAAStJ,EAAMmT,KAAxC,cAOhB,+BAIahG,E,kDAEjB,WAAYnN,GAAO,IAAD,8BACd,cAAMA,IAEDoN,OAAS,EAAKA,OAAO1M,KAAZ,gBACd,EAAK2M,WAAa,EAAKA,WAAW3M,KAAhB,gBAClB,EAAK8U,aAAe,EAAKA,aAAa9U,KAAlB,gBACpB,EAAKsQ,YAAc,EAAKA,YAAYtQ,KAAjB,gBACnB,EAAK+U,SAAW,EAAKA,SAAS/U,KAAd,gBAEhB,EAAKc,MAAQ,CACT8L,OAAQ,GACRF,OAAS,GACT5J,MAAQ,GACRO,OAAS,IAbC,E,gEAiBE,IAAD,OACXP,EAAQ2B,aAAaC,QAAQ,YAC7BrB,EAAS,GAETA,EAAS,+BACTH,KAAKI,SAAS,CACVD,OAAS,iCAQjBE,IAAMC,IAAIH,EAAS,qBAAsB,CAACsB,QAAU,CAAC,aAAe7B,KAC/DW,MAAK,SAAAC,GACF,EAAKJ,SAAS,CACVsJ,OAASlJ,EAASC,KAClBb,MAAQ2B,aAAaC,QAAQ,iBAIpCL,OAAM,SAAUC,GACbC,QAAQC,IAAIF,Q,iCAIbqI,GACP,IAAIkI,EAAU3R,KAAK4R,aACfrC,EAAMvP,KAAKoN,YACf,OAAO3D,EAAWE,KAAI,SAASC,EAAcC,GACzC,OAAO,kBAAC,EAAD,CAAOhM,MAAO+L,EAAcxH,IAAKyH,EAAGC,MAASD,EAAI8H,QAAS,kBAAMA,EAAQ/H,IAAe2F,IAAK,kBAAMA,EAAI3F,W,+BAKjH5J,KAAKI,SAAS,CACVoJ,OAAS7H,SAASY,eAAe,aAAaC,U,mCAKzCoH,GAAe,IAAD,OACvBvI,QAAQC,IAAIsI,GACZvJ,IAAMyD,KAAK9D,KAAKpC,MAAMuC,OAAS,kBAAmByJ,EAAc,CAAEnI,QAAU,CAAC,aAAezB,KAAKpC,MAAMgC,SACtGW,MAAK,SAAAmB,GACFL,QAAQC,IAAII,EAAIjB,MAChB,EAAKL,SAAS,CACVsJ,OAAS,QAGjBrI,QAAQC,IAAIsI,EAAa6C,iB,oCAKzBpL,QAAQC,IAAI,Y,iCAIZ,GAAiC,IAA7BtB,KAAKpC,MAAM8L,OAAOzH,OAClB,OAAO,yD,+BAOL,IAAD,OAED8H,EAAiB/J,KAAKpC,MAAM8L,OAAOM,QACnC,SAACnM,GACG,OAAuE,IAA/DA,EAAM6C,WAAWuJ,cAAcC,QAAQ,EAAKtM,MAAM4L,UACc,IAAhE3L,EAAMiD,YAAYmJ,cAAcC,QAAQ,EAAKtM,MAAM4L,UACH,IAAhD3L,EAAM8J,UAAUuC,QAAQ,EAAKtM,MAAM4L,WAGnD,OACI,yBAAK/E,UAAU,aACX,kBAACC,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,gDAGJ,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,CAAa3E,GAAG,YAAawI,SAAU1I,KAAKwJ,WAG9C,6BACN,kBAAC7E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMwE,GAAG,YACL,kBAAC3D,EAAA,EAAD,CAAQV,QAAQ,QAAhB,sBAGN,6BACN,kBAACJ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACK5E,KAAKyJ,WAAWM,GAChB/J,KAAK6R,cAKlB,yBAAKlM,MAAO,CAAEG,OAAS,Y,GA5HAW,a,UCzCxBqL,GAbM,SAAC,GAAqC,IAAzBrL,EAAwB,EAAnCsL,UAAyBC,EAAU,8BACtD,OAII,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAA7V,GAAK,OCP9BmF,aAAaC,QAAQ,WDSb,kBAACiF,EAAcrK,GACjB,kBAAC,IAAD,CAAUgN,GAAG,kB,oCEZZ,IACX9M,OAAQ,CACJ4V,WAAa,QACb3V,eAAiB,UACjB4V,iBAAmB,UACnBC,UAAY,QACZC,YAAc,WCNP,IACX/V,OAAQ,CACN4V,WAAY,UACZ3V,eAAgB,UAChB4V,iBAAkB,UAClBC,UAAW,UACXC,YAAa,Y,6LCJJnW,WAAOC,IAAtB,MACkB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAO4V,cACjC,SAAA9V,GAAK,OAAIA,EAAMC,MAAMC,OAAO8V,a,8HCAzC,IAAME,GAAMpW,IAAOqW,IAAV,MAMK,iBAAG9N,UAAH,OACV,kBAAC6N,GAAD,CAAKzM,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYtB,UAAU,sBAAsBuB,KAAK,eAAeC,MAAM,8BACxG,0BAAMC,SAAS,UAAUC,EAAE,osDC8EpBqM,GA9DH,WAEV,IAAMC,EAASlR,aAAaC,QAAQ,cAFpB,EAIoBkR,mBACvB,SAAXD,GALc,mBAITE,EAJS,KAIGC,EAJH,KAUhB,OACE,kBAAC,IAAD,CAAevW,MAAOsW,EAAaE,GAAYC,IAC7C,kBAACC,GAAD,KAEE,kBAAC,IAAD,KACA,yBAAKtO,UAAU,aACX,kBAACuO,GAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAIR,EAAa,OAAS,QAAS5N,QAAS4N,EAAa,OAAS,QAASS,OAAO,OACrH,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAD,OAEF,kBAACD,GAAA,EAAD,oBACA,kBAACL,GAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAE7B,kBAACR,GAAA,EAAO1M,SAAR,CAAiBpG,GAAG,yBAClB,kBAACuT,GAAA,EAAD,CAAKhP,UAAU,WACb,kBAAC,IAAD,CAAM2E,GAAG,IAAI3E,UAAU,WAAWvE,GAAG,cAArC,QACA,kBAAC,IAAD,CAAMkJ,GAAG,UAAU3E,UAAU,YAA7B,UACA,kBAAC,IAAD,CAAM2E,GAAG,eAAe3E,UAAU,YAAlC,gBACA,kBAAC,IAAD,CAAM2E,GAAG,WAAW3E,UAAU,YAA9B,YAEF,kBAACgP,GAAA,EAAD,KACE,kBAAChO,EAAA,EAAD,CAAQV,QAAQ,oBAAoBW,QAAS,WAC7CkN,GAAeD,GACfpR,aAAa8J,QAAQ,cAAesH,KAEpC,yBAAK9M,MAAM,QAAQC,OAAO,QAAQC,QAAQ,YAAYtB,UAAU,oBAAoBuB,KAAK,eAAeC,MAAM,8BAC5G,0BAAMC,SAAS,UAAUC,EAAE,oEAQrC,kBAAC,IAAD,CAAOuN,KAAK,IAAIC,OAAK,EAAC5B,UAAWnV,IACjC,kBAAC,IAAD,CAAO8W,KAAK,eAAe3B,UAAWrL,IACtC,kBAAC,IAAD,CAAOgN,KAAK,UAAU3B,UAAW6B,IACjC,kBAAC,IAAD,CAAOF,KAAK,SAAS3B,UAAW5H,IAChC,kBAAC,IAAD,CAAOuJ,KAAK,WAAUC,OAAK,EAAC5B,UAAWrG,IACvC,kBAAC,IAAD,CAAOgI,KAAK,WAAW3B,UAAWlF,IAClC,kBAAC,IAAD,CAAO6G,KAAK,eAAe3B,UAAWnB,IACtC,kBAAC,GAAD,CAAc8C,KAAK,gBAAgB3B,UAAW8B,EAAcF,OAAK,QCnEvDG,QACW,cAA7BtE,OAAOvP,SAAS8T,UAEe,UAA7BvE,OAAOvP,SAAS8T,UAEhBvE,OAAOvP,SAAS8T,SAAS3H,MACvB,2DCZN4H,IAAS/B,OACP,kBAAC,IAAMgC,WAAP,KACE,kBAAC,GAAD,OAEFtS,SAASY,eAAe,SDyHpB,kBAAmB2R,WACrBA,UAAUC,cAAcC,MACrB7T,MAAK,SAAA8T,GACJA,EAAaC,gBAEdnT,OAAM,SAAA8J,GACL5J,QAAQ4J,MAAMA,EAAMsJ,c","file":"static/js/main.ccff847b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  background: ${props => props.theme.colors.cardBackground};\r\n  padding: 24px;\r\n  border-radius: 5px;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100px;\r\n`;","import React, { Component } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Button from 'react-bootstrap/Button';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport Card from './Card'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\n\r\nconst TestInput = styled.input.attrs(props => ({\r\n    type : 'text',\r\n    \r\n}))`\r\n    background: white;\r\n    border-radius: 5px;\r\n    border: 1px solid darkgray;\r\n\r\n    :: disabled\r\n`\r\n\r\nexport default class TypingTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.compare = this.compare.bind(this);\r\n        this.resetTest = this.resetTest.bind(this);\r\n        this.endTest = this.endTest.bind(this);\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.calculateWPM = this.calculateWPM.bind(this);\r\n        this.calculateHighScore = this.calculateHighScore.bind(this);\r\n        this.backspace = this.backspace.bind(this);\r\n        this.escFunction = this.escFunction.bind(this);\r\n        this.debugToggle = this.debugToggle.bind(this);\r\n        this.renderTooltip = this.renderTooltip.bind(this);\r\n        this.newTest = this.newTest.bind(this);\r\n        this.sendHighscores = this.sendHighscores.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n\r\n\r\n        this.state = {\r\n            quote: [],\r\n            //The name of the quote\r\n            quote_Title: '',\r\n            // The text body of the quote\r\n            quote_body : '',\r\n            quote_author : '',\r\n            user_input : '',\r\n            // An array of every word in the quote not currently used but might be useful later\r\n            quote_words: [],\r\n            // An array of every character in the quote including spaces\r\n            char_array: [],\r\n            // String that contains the next character to be typed\r\n            current_quote_char: '',\r\n            // String that holds what the user types if they are correct but if it is not correct it is filled correctly by char_array\r\n            typed_chars: '',\r\n            // string that contains the current work to be typed not currently used but might be useful later\r\n            current_quote_word: '',\r\n            // counter that keeps track of the number of user inputs excluding backspace\r\n            count: 0,\r\n            // counter that keeps track of errors, can be decremented if the user corrects their error\r\n            error_count : 0,\r\n            // a total error counter that does not decrement\r\n            total_error_count : 0,\r\n            // boolean to disable input to the text box and display results when the test is over, false == test not over, true == test over\r\n            input_disabled : false,\r\n            // String that contains every thing that has been typed or that the user has passed\r\n            quote_left : '',\r\n            // String that contains everything the user has left to type\r\n            quote_right : '',\r\n            // String that contains correct characters that the user has gotten wrong errors the user has typed\r\n            quote_error : '',\r\n            // The quote placeholder for before the test starts is emptied after the test starts\r\n            quote_start : '',\r\n            // error array that conatins the errors the user has typed\r\n            err_arr : '',\r\n            // string that contains the css class of the current character span so it can be change when there is an error or not\r\n            quote_class : 'quote-current',\r\n            // Interval to time the user\r\n            tInterval : '', \r\n            // number that keeps track of the seconds that have passed since the test started\r\n            seconds : 0,\r\n            // The net words per minute\r\n            netWPM : 0,\r\n            // Accuracy %\r\n            accuracy : 0,\r\n            // Highscores\r\n            highestAcc : 0, \r\n            highestWPM : 0,\r\n            quote_score : 0,\r\n            quoteWPM : 0,\r\n            quoteAcc : 0,\r\n            quoteID : 0,\r\n\r\n            //api url\r\n            apiUrl : '',\r\n            token : '',\r\n\r\n            user : {},\r\n            debug : false\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        let query = '';\r\n        if (this.props.location.state != null) {\r\n            query = this.props.location.state.id\r\n        }\r\n        else {\r\n            query = 'random';\r\n        }\r\n        let APIURL = ''\r\n        // Check if in dev or production environment\r\n        if (process.env.NODE_ENV === 'production') {\r\n            this.setState((state) => ({\r\n                apiUrl : 'https://typingtest.jdoyle.ie',\r\n            }))\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') {\r\n            this.setState((state) => ({\r\n               apiUrl : 'http://localhost:8080',\r\n            }))\r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        // get quote from database and update state\r\n        axios.get(APIURL +'/quotes/'+query)\r\n            .then(response => {\r\n                this.setState((state) => ({ \r\n                    quote_Title : response.data.quoteTitle,\r\n                    quote_body : response.data.quoteBody,\r\n                    char_array : Array.from(response.data.quoteBody),\r\n                    current_quote_char : Array.from(response.data.quoteBody)[0],\r\n                    quote_start : response.data.quoteBody,\r\n                    quote_author : response.data.quoteAuthor,\r\n                    quote_score : response.data.quoteScore,\r\n                    quoteWPM : response.data.highWPMScore,\r\n                    quoteAcc : response.data.highAccScore,\r\n                    quoteID : response.data._id\r\n                }))\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            })\r\n\r\n        //if there is a use logged in get their account info\r\n        if (localStorage.getItem('beepboop')) {\r\n            let token = localStorage.getItem('beepboop')\r\n            this.setState({\r\n                token : token\r\n            })\r\n\r\n            axios.get( APIURL + '/user/profile', { headers : { 'auth-token' : token }})\r\n            .then(res => {\r\n               // console.log(res.data)\r\n               this.setState({\r\n                   user : res.data\r\n               })\r\n            })\r\n        }\r\n        // add eventListener that checks if the esc key has been pressed on every keydown\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n        \r\n    }\r\n\r\n\r\n     \r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    // startTimer function that is called every second by setInterval in onInputChance() \r\n    // increments seconds by 1 and sets the state.\r\n    startTimer () {\r\n        let seconds = this.state.seconds + 1;\r\n        this.setState((state) => ({\r\n            seconds : seconds,\r\n        }))\r\n    }\r\n\r\n    // escFunction that handles when the escape key is pressed\r\n    escFunction(event){\r\n        if(event.keyCode === 27) {\r\n            \r\n          this.resetTest();\r\n        }\r\n    }\r\n\r\n    // Function that toggles the debug output\r\n    debugToggle() {\r\n        this.setState((state) => ({\r\n            debug : !state.debug\r\n        })) \r\n    }\r\n\r\n    // Called whenever the user input is changed\r\n    // Sets the state of user_input to the user's input and calls compare with the current word from state.\r\n    onInputChange (e) {\r\n        // edge case if user ends test with error to just end the test if the total number of entries == the quote len.\r\n        if (this.state.count === this.state.char_array.length) {\r\n            this.endTest();\r\n            console.log('testing jenkins')\r\n            return\r\n        }\r\n\r\n        // if the key pressed is not backspace and is in the general keys location 0\r\n        if (e.keyCode !== 8 && e.location === 0) {\r\n\r\n            // if the user has started typing yet\r\n            if (this.state.count === 0) {\r\n                //Start timer\r\n                let interval = setInterval(this.startTimer, 1000)\r\n                this.setState ((state) => ({\r\n                    quote_start : '',\r\n                    seconds : 0,\r\n                    tInterval : interval      \r\n                }))\r\n            }\r\n            // update the current user_input state and call compare function\r\n            this.setState({\r\n                user_input : e.key\r\n            }, () => this.compare(this.state.current_quote_char))\r\n        }\r\n        // Backspace conditions for changing the current char, left and right spans     \r\n        else if (e.keyCode === 8 && this.state.err_arr !== '' && this.state.error_count  > 0) {\r\n            // if there are errors and the user presses backspace reduce the error count\r\n            if (this.state.error_count > 0) {\r\n                this.setState ((state) => ({\r\n                    error_count : state.error_count -1,\r\n                }), () => this.backspace())      \r\n            }\r\n            else {\r\n                this.backspace();\r\n            }\r\n        }\r\n    }\r\n\r\n    // backspace function that handles when the user enters a backspace into the input box\r\n    backspace () {\r\n        this.setState ((state) => ({\r\n            err_arr : state.err_arr.slice(0, state.err_arr.length-1),\r\n            count : state.count - 1,\r\n            current_quote_char : state.char_array[state.count -1],\r\n            quote_left : state.typed_chars.slice(0, state.typed_chars.length - state.err_arr.length),\r\n            typed_chars : state.typed_chars.slice(0, -1),\r\n            quote_right :  state.char_array.slice(state.count , state.char_array.length)\r\n        }))      \r\n    }\r\n\r\n    // Called in onInputChange\r\n    // Takes the current word to be typed from state\r\n    // Compares it to the user input\r\n    // Checks the if the word count is equal to the length of the quote_words array; if it is the test is over and endTest() is called.\r\n    // If it is not the state of the current word is changed, the count is incremented and the user_input is set back to empty\r\n    compare (current_char) {\r\n        if (current_char === this.state.user_input) {\r\n            //console.log(\"match\");\r\n            if (this.state.count >= this.state.char_array.length -1) {\r\n                this.setState((state) => ({\r\n                    typed_chars: state.typed_chars + state.user_input\r\n                }), () => this.endTest())\r\n            }\r\n            else {\r\n                this.setState((state) => ({\r\n                    current_quote_char : state.char_array[state.count + 1],\r\n                    count: state.count + 1,\r\n                    typed_chars: state.typed_chars + state.user_input,\r\n                    quote_right : state.char_array.slice(state.count+2, state.char_array.length),\r\n                    user_input : '',\r\n                    quote_left : state.typed_chars + state.user_input,\r\n                    err_arr : '',\r\n                    quote_class : 'quote-current',\r\n                }));  \r\n            }\r\n            document.getElementById('input').value = '';\r\n        }\r\n        else {\r\n            this.setState((state) => ({\r\n                err_arr : state.err_arr + state.char_array[state.count],\r\n                current_quote_char : state.char_array[state.count + 1],\r\n                count: state.count + 1,\r\n                quote_class : 'quote-warning',\r\n                typed_chars : state.typed_chars + state.char_array[state.count],\r\n                quote_error :  state.err_arr,\r\n                quote_right : state.char_array.slice(state.count +2, state.char_array.length),\r\n                error_count : state.error_count + 1,\r\n                total_error_count : state.total_error_count + 1,\r\n            }))\r\n        }\r\n    }\r\n\r\n    // Called by newTestBtn \r\n    // queries the db for a random quote and updates the state\r\n    // then calls resettest to reset other counters and timers\r\n    newTest () {\r\n        // get quote from database and update state\r\n        this.setState({\r\n            quote_Title : '',\r\n            quote_author : '',\r\n            quote_body : '',\r\n            char_array : []\r\n        } )\r\n        axios.get(this.state.apiUrl + '/quotes/random')\r\n            .then(response => {\r\n                this.setState((state) => ({ \r\n                    quote_Title : response.data.quoteTitle,\r\n                    quote_body : response.data.quoteBody,\r\n                    char_array : Array.from(response.data.quoteBody),\r\n                    current_quote_char : Array.from(response.data.quoteBody)[0],\r\n                    quote_start : response.data.quoteBody,\r\n                    quote_author : response.data.quoteAuthor,\r\n                    quoteWPM : response.data.highWPMScore,\r\n                    quoteAcc : response.data.highAccScore,\r\n                    quoteID : response.data._id\r\n                }))\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            })\r\n        this.resetTest()\r\n    }\r\n\r\n    //Called whenever the reset button is pressed\r\n    //Resets the test by resetting the state to default.\r\n    resetTest () {\r\n        let body = this.state.quote_body;\r\n        let words = [];\r\n        let chars = [];\r\n        words = body.split(\" \");\r\n        chars = Array.from(body);\r\n        clearInterval(this.state.tInterval);\r\n        document.getElementById('input').value = '';\r\n        document.getElementById('input').focus();\r\n\r\n        this.setState((state) => ({\r\n            quote_Title: state.quote_Title,\r\n            quote_body : state.quote_body, \r\n            quote_words : words,\r\n            current_quote_word : words[0],\r\n            char_array : chars,\r\n            quote_start : state.quote_body,\r\n            current_quote_char : state.char_array[0],\r\n            err_arr : '',\r\n            user_input : '',\r\n            quote_left : '',\r\n            quote_right : '',\r\n            typed_chars : '',\r\n            error_count : 0,\r\n            quote_class : 'quote_current',\r\n            quote_error : '',\r\n            total_error_count : 0,\r\n            count: 0,\r\n            seconds : 0,\r\n            input_disabled : false,\r\n        }))\r\n    }\r\n\r\n    // Called when the end of the test is reached in compare()\r\n    // Calculates word per minute\r\n    endTest () {\r\n        clearInterval(this.state.tInterval);\r\n        let correctChars = this.state.char_array.length - this.state.total_error_count;\r\n\r\n        let lastWPM = this.state.netWPM;\r\n        let lastAccuracy = this.state.accuracy;\r\n        \r\n        document.activeElement.blur();\r\n        document.getElementById('input').focus();\r\n        this.setState((state) => ({\r\n            error_count : state.error_count,\r\n            accuracy : Math.ceil((correctChars / state.char_array.length)*100),\r\n            input_disabled : true,\r\n            current_quote_char : '',\r\n            quote_left : state.quote_body,\r\n            seconds : 0,\r\n            err_arr : '',\r\n            netWPM : Math.ceil(this.calculateWPM()),\r\n        }), () => this.calculateHighScore(lastAccuracy, lastWPM))\r\n    }\r\n\r\n    // Function that updates the user's high score is the latest score was better than the last replace the scores\r\n    calculateHighScore (lastAccuracy, lastWPM) {\r\n        let latestAccuracy = this.state.accuracy;\r\n        let latestWPM = this.state.netWPM;\r\n        let highestWPM = 0;\r\n        let highestAcc = 0;\r\n\r\n        //console.log(lastWPM, this.state.quoteWPM)\r\n        \r\n\r\n        if (latestWPM > lastWPM) {\r\n            this.setState({\r\n                highestAcc : latestAccuracy,\r\n                highestWPM : latestWPM,\r\n                \r\n            })\r\n\r\n            highestWPM = latestWPM;\r\n            highestAcc = latestAccuracy\r\n            if (this.state.token !== '') {\r\n\r\n                // Check if score was better than user's personal best and update accordingly\r\n                if(highestWPM > this.state.user.personalBestWPM ) {\r\n                    console.log('you were better')\r\n                    this.setState(state => ({\r\n                        user : {\r\n                            ...this.state.user,\r\n                            \r\n                            personalBestAcc : highestAcc,\r\n                            personalBestWPM : highestWPM,\r\n                        }\r\n                    }), () => this.sendHighscores(this.state.user))\r\n                }\r\n\r\n                // check if score was better than the best score for that quote and update accordingly\r\n                if (latestWPM >= this.state.quoteWPM) {\r\n                    //console.log('calling')\r\n                    this.setState({\r\n                        quoteWPM : highestWPM,\r\n                        quoteAcc : highestAcc\r\n                    }, () => this.sendQuoteScores())\r\n                }\r\n                \r\n            }\r\n\r\n        }\r\n\r\n        if (this.state.token !== '') {\r\n            \r\n            // Update user's latest scores array\r\n            const update = {\r\n                _id : this.state.user._id,\r\n                wpm : latestWPM,\r\n                acc : latestAccuracy\r\n            } \r\n            console.log(update)\r\n            axios.post(this.state.apiUrl + '/user/updateScores', update , { headers : {'auth-token' : this.state.token}})\r\n            .then(res => {\r\n                console.log(res.data.latestWPMScores)\r\n            })\r\n            .catch(err => err)\r\n        }\r\n    \r\n    }\r\n\r\n    sendHighscores(user) {\r\n        console.log(user)\r\n        axios.post(this.state.apiUrl + '/user/updateHS', user , { headers : {'auth-token' : this.state.token}})\r\n        .then(res =>\r\n            console.log(res.data)    \r\n        ) .catch(err => err)\r\n    }\r\n\r\n    sendQuoteScores() {\r\n        const scores = {\r\n            quoteWPM : this.state.quoteWPM,\r\n            quoteAcc : this.state.quoteAcc,\r\n            _id : this.state.quoteID\r\n        }\r\n\r\n        axios.post(this.state.apiUrl + '/quotes/updateHS', scores, {headers : {'auth-token' : this.state.token}})\r\n       .catch(err => err)\r\n    }\r\n\r\n\r\n\r\n    // calculateWPM function calculates the user's WPM and returns the netWPM\r\n    calculateWPM () {\r\n        let seconds = this.state.seconds;\r\n        let minutes = seconds/60;\r\n        let errors = this.state.error_count;\r\n        let typedEntries = this.state.typed_chars.length;\r\n        let grossWPM = (typedEntries/5) / minutes;\r\n        let netWPM = grossWPM - (errors/minutes);\r\n        // Now do it all in one line for Duggan\r\n        //netWPM = ((this.state.typed_chars.length/5) / (this.state.seconds/60)) - (this.state.error_count/(this.state.seconds/60))\r\n        return netWPM\r\n    }\r\n\r\n    // function to render button tooltips\r\n    renderTooltip(props) {\r\n        if (props.popper.state != null) {\r\n            //console.log(props.popper.state.elements)\r\n\r\n            if (props.popper.state.elements.reference.id === 'restartBtn') {\r\n                return (\r\n                    <Tooltip id=\"button-tooltip\" {...props}>\r\n                        Restart Test\r\n                    </Tooltip>\r\n                );\r\n            } else if (props.popper.state.elements.reference.id === 'newTestBtn') {\r\n                return (\r\n                    <Tooltip id=\"button-tooltip\" {...props}>\r\n                        Start New Test\r\n                    </Tooltip>\r\n                );\r\n            } else if (props.popper.state.elements.reference.id === 'debugBtn') {\r\n                return (\r\n                    <Tooltip id=\"button-tooltip\" {...props}>\r\n                        Show debug Info\r\n                    </Tooltip>\r\n                )\r\n            } \r\n        }\r\n        return  (\r\n            <Tooltip {...props}>\r\n                tes\r\n            </Tooltip>\r\n        )     \r\n    }\r\n\r\n    renderSpinner() {\r\n        if (!this.state.quote_Title) {\r\n            return <Spinner animation=\"border\" />\r\n        } else {\r\n            return <></>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                   \r\n                    \r\n                        <Row>\r\n                            <Col sm={8}>\r\n                                <h4>{this.state.quote_Title} - {this.state.quote_author}</h4>\r\n                                <Alert variant=\"secondary\">   \r\n                                    <span>{this.renderSpinner()}</span>\r\n                                    <span className=\"quote-left\">{this.state.quote_left}</span>\r\n                                    <span className=\"quote-error\">{this.state.err_arr}</span>\r\n                                    <span className={this.state.quote_class}>{this.state.current_quote_char}</span>\r\n                                    <span className=\"quote-start\">{this.state.quote_start.slice(1)}</span>\r\n                                    <span className=\"quote-right\">{this.state.quote_right}</span>\r\n                                    <hr/>\r\n                                    <span>Best Score: {this.state.quoteWPM}WPM {this.state.quoteAcc}% Accuracy</span>\r\n                                </Alert>    \r\n                            </Col>\r\n                            <Col sm={4}>\r\n                                <h4>High Scores</h4>\r\n                                <Alert variant=\"info\">\r\n                                    <span>\r\n                                        WPM : {this.state.highestWPM} <br></br>\r\n                                        Accuracy : {this.state.highestAcc}% <br></br>\r\n                                    </span>       \r\n                                </Alert>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h5>Current Character: {this.state.current_quote_char}</h5>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col sm={8}>\r\n                                <TestInput  onKeyDown={this.onInputChange} id='input' disabled={this.state.input_disabled}/>\r\n                                <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={this.renderTooltip} name=\"restartOverlay\">\r\n                                    <Button onClick={this.resetTest} style={{marginLeft: 10}} variant=\"secondary\" id=\"restartBtn\">\r\n                                        <svg className=\"bi bi-arrow-repeat\" width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fillRule=\"evenodd\" d=\"M2.854 7.146a.5.5 0 00-.708 0l-2 2a.5.5 0 10.708.708L2.5 8.207l1.646 1.647a.5.5 0 00.708-.708l-2-2zm13-1a.5.5 0 00-.708 0L13.5 7.793l-1.646-1.647a.5.5 0 00-.708.708l2 2a.5.5 0 00.708 0l2-2a.5.5 0 000-.708z\" clipRule=\"evenodd\"/>\r\n                                            <path fillRule=\"evenodd\" d=\"M8 3a4.995 4.995 0 00-4.192 2.273.5.5 0 01-.837-.546A6 6 0 0114 8a.5.5 0 01-1.001 0 5 5 0 00-5-5zM2.5 7.5A.5.5 0 013 8a5 5 0 009.192 2.727.5.5 0 11.837.546A6 6 0 012 8a.5.5 0 01.501-.5z\" clipRule=\"evenodd\"/>\r\n                                        </svg>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={this.renderTooltip}>\r\n                                    <Button onClick={this.newTest} variant=\"info\" style={{marginLeft : 10}} id=\"newTestBtn\" name=\"newTestBtn\">\r\n                                        <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" className=\"bi bi-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fillRule=\"evenodd\" d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\"/>\r\n                                            <path fillRule=\"evenodd\" d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\"/>\r\n                                        </svg>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                                \r\n                            </Col>\r\n                            <Col sm={4}>\r\n                                <OverlayTrigger placement=\"left\" delay={{ show: 250, hide: 400 }} overlay={this.renderTooltip}>\r\n                                    <Button onClick={this.debugToggle} variant=\"outline-warning\" style={{float : \"right\"}} id=\"debugBtn\" name=\"debugBtn\">\r\n                                        <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" className=\"bi bi-bug\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                                            <path fillRule=\"evenodd\" d=\"M4.355.522a.5.5 0 0 1 .623.333l.291.956A4.979 4.979 0 0 1 8 1c1.007 0 1.946.298 2.731.811l.29-.956a.5.5 0 1 1 .957.29l-.41 1.352A4.985 4.985 0 0 1 13 6h.5a.5.5 0 0 0 .5-.5V5a.5.5 0 0 1 1 0v.5A1.5 1.5 0 0 1 13.5 7H13v1h1.5a.5.5 0 0 1 0 1H13v1h.5a1.5 1.5 0 0 1 1.5 1.5v.5a.5.5 0 1 1-1 0v-.5a.5.5 0 0 0-.5-.5H13a5 5 0 0 1-10 0h-.5a.5.5 0 0 0-.5.5v.5a.5.5 0 1 1-1 0v-.5A1.5 1.5 0 0 1 2.5 10H3V9H1.5a.5.5 0 0 1 0-1H3V7h-.5A1.5 1.5 0 0 1 1 5.5V5a.5.5 0 0 1 1 0v.5a.5.5 0 0 0 .5.5H3c0-1.364.547-2.601 1.432-3.503l-.41-1.352a.5.5 0 0 1 .333-.623zM4 7v4a4 4 0 0 0 3.5 3.97V7H4zm4.5 0v7.97A4 4 0 0 0 12 11V7H8.5zM12 6H4a3.99 3.99 0 0 1 1.333-2.982A3.983 3.983 0 0 1 8 2c1.025 0 1.959.385 2.666 1.018A3.989 3.989 0 0 1 12 6z\"/>\r\n                                        </svg>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                            </Col>\r\n                        </Row><br></br>\r\n                        \r\n                        <Row> \r\n                            <Col sm={8}>\r\n                                <Collapse in={this.state.input_disabled}>\r\n                                    <div id=\"results\">\r\n                                        <Alert variant=\"success\">\r\n                                            <Alert.Heading>Well Done!</Alert.Heading>\r\n                                                <p>\r\n                                                    Here are your results:<br></br>\r\n                                                    WPM : {this.state.netWPM} <br></br>\r\n                                                    Accuracy : {this.state.accuracy}% <br></br>\r\n                                                    Errors : {this.state.total_error_count}<br></br>\r\n                                                    Corrected Errors : {this.state.error_count}\r\n                                                </p>\r\n                                        </Alert>\r\n                                    </div>          \r\n                                </Collapse>\r\n                            </Col>\r\n                            <Col sm={4}>\r\n                                <Collapse in={this.state.debug}>\r\n                                    <div>\r\n                                        <Alert variant=\"warning\">\r\n                                            <Alert.Heading>Debug</Alert.Heading>\r\n                                            <p>\r\n                                                Error array : {this.state.err_arr}<br></br>\r\n                                                quote length : {this.state.char_array.length}<br></br>\r\n                                                Input count : {this.state.count}<br></br>\r\n                                                Error Count : {this.state.error_count}<br></br>\r\n                                                Total Error Count : {this.state.total_error_count}<br></br>\r\n                                                Previous character : {this.state.char_array[this.state.count-1]}<br></br>\r\n                                                Current character : {this.state.char_array[this.state.count]}<br></br>\r\n                                                Next character : {this.state.char_array[this.state.count+1]}<br></br> \r\n                                                Quote left : {this.state.quote_left}<br></br>\r\n                                                Quote green : {this.state.current_quote_char}<br></br>\r\n                                                Quote right : {this.state.quote_right}<br></br>\r\n                                                Quote error : {this.state.quote_error}\r\n                                            </p>\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Collapse>      \r\n                            </Col>\r\n                        </Row> \r\n                </Card>    \r\n                <div style={{ height : 800}}></div>\r\n            </div>  \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\"\r\nimport Card from \"./Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport axios from \"axios\";\r\n\r\nexport default class CreateQuote extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.onChangeQuoteTitle = this.onChangeQuoteTitle.bind(this);\r\n        this.onChangeQuoteBody = this.onChangeQuoteBody.bind(this);\r\n        this.onChangeQuoteAuthor = this.onChangeQuoteAuthor.bind(this);\r\n\r\n        this.validateField = this.validateField.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n\r\n        this.addQuote = this.addQuote.bind(this);\r\n\r\n        this.state = {\r\n            // validation\r\n            loggedIn : false,\r\n            quoteTitleValid : false,\r\n            quoteBodyValid : false,\r\n            quoteAuthorValid : false,\r\n            formValid : false, \r\n            formErrors : {quoteTitle: '', quoteBody : '', quoteAuthor : ''},\r\n\r\n            formValidAndUser : false,\r\n\r\n            // user\r\n            userName : '',\r\n            id : '',\r\n\r\n            // Quote state\r\n            quoteTitle : '',\r\n            quoteBody : '',\r\n            quoteAuthor : ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        if (localStorage.getItem('beepboop')) {\r\n            this.checkLogin()\r\n\r\n            let token = localStorage.getItem('beepboop')\r\n             let APIURL = ''\r\n            if (process.env.NODE_ENV === 'production') {\r\n                APIURL = 'https://typingtest.jdoyle.ie'\r\n            } else if (process.env.NODE_ENV === 'development') { \r\n                APIURL = 'http://localhost:8080'\r\n            }\r\n            axios.get(APIURL + '/user/profile',{ headers : { 'auth-token' : token}}  )\r\n            .then( res => {\r\n                console.log(this.state)\r\n                if (res.data) {\r\n                    this.setState({\r\n                        userName : res.data.userName,\r\n                        id : res.data._id\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    addQuote(e) {\r\n        e.preventDefault();\r\n\r\n        const quote = {\r\n            quoteTitle : this.state.quoteTitle,\r\n            quoteBody : this.state.quoteBody,\r\n            quoteAuthor : this.state.quoteAuthor,\r\n            quoteUser : this.state.userName\r\n        }\r\n        //console.log(quote)\r\n        let token = localStorage.getItem('beepboop');\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        \r\n        axios.post(APIURL + '/quotes/add', quote, { headers : { 'auth-token' : token}})\r\n        .then(res => {\r\n\r\n            const reqObj = {\r\n                userId : this.state.id,\r\n                quoteId : res.data\r\n            }\r\n            axios.post(APIURL + '/user/addQuote', reqObj, {headers : {'auth-token' : token}})\r\n\r\n            this.props.history.push({\r\n                pathname : '/profile' \r\n                \r\n            })\r\n        }).catch (err => err)\r\n        \r\n    }\r\n\r\n    // Check if user is logged in\r\n    checkLogin() {\r\n        this.setState({\r\n            loggedIn : true,\r\n        })\r\n    }\r\n\r\n    onChangeQuoteTitle(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            quoteTitle : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.quoteTitle)\r\n        })\r\n    }\r\n\r\n    onChangeQuoteBody(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            quoteBody : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.quoteBody)\r\n        })\r\n    }\r\n\r\n    onChangeQuoteAuthor(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            quoteAuthor : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.quoteAuthor)\r\n        })\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let quoteTitleValid = this.state.quoteTitleValid;\r\n        let quoteBodyValid = this.state.quoteBodyValid;\r\n        let quoteAuthorValid = this.state.quoteAuthorValid;\r\n\r\n        switch(fieldName) {\r\n            \r\n            case 'quoteTitle':\r\n                \r\n                quoteTitleValid = value.length >= 0 && value.length < 40;\r\n                fieldValidateErrors.quoteTitle = quoteTitleValid ? '' : ' must not be empty or greater than 20 characters.';\r\n                break;\r\n            \r\n            case 'quoteBody':\r\n                \r\n                quoteBodyValid = value.length >= 200  && value.length <= 350 ;\r\n                fieldValidateErrors.quoteBody = quoteBodyValid ? '' : ' is too short';\r\n                \r\n                break;\r\n\r\n            case 'quoteAuthor':\r\n\r\n                if (value.length === 0){\r\n                    quoteAuthorValid = true;\r\n                    this.setState((state) => ({\r\n                        quoteAuthor : state.username\r\n                    }), () => {fieldValidateErrors.quoteAuthor = quoteAuthorValid ? '' : ''})\r\n                    break;\r\n                }\r\n                else if (value.length <= 10) {\r\n                    quoteAuthorValid = true\r\n                    fieldValidateErrors.quoteAuthor = quoteAuthorValid ? '' : ' is short long';\r\n                    break;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({\r\n            formErrors : fieldValidateErrors, \r\n            quoteTitleValid : quoteTitleValid, \r\n            quoteBodyValid : quoteBodyValid,\r\n            quoteAuthorValid : quoteAuthorValid\r\n        },    \r\n            this.validateForm);\r\n        \r\n    }\r\n\r\n    // ValidaateForm function sets the current state of the fields of the form.\r\n    validateForm() {\r\n         console.log('quotetitle ' + this.state.quoteTitleValid);\r\n         console.log('quoteauth ' + this.state.quoteAuthorValid);\r\n         console.log('quoteboy ' + this.state.quoteBodyValid)\r\n        this.setState({\r\n            formValid:  this.state.quoteTitleValid &&\r\n                        this.state.quoteBodyValid && \r\n                        this.state.quoteAuthorValid,\r\n            formValidAndUser : this.state.formValid && this.state.loggedIn\r\n                    });\r\n\r\n        \r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n               <Card>\r\n                    <Row>  \r\n                        <Col>\r\n                            \r\n                        <h4>Create Quote</h4>\r\n                        <br />\r\n                            <Alert variant=\"secondary\">\r\n                                <Form>\r\n                                    \r\n                                    <Alert.Heading>\r\n                                            <Row>\r\n                                                <Col m=\"auto\">\r\n                                                    <Form.Control\r\n                                                        value={this.state.quoteTitle}\r\n                                                        type='text'\r\n                                                        size='lg'\r\n                                                        onChange={this.onChangeQuoteTitle}\r\n                                                        name = 'quoteTitle'\r\n                                                        placeholder = \"Quote Title\"\r\n                                                        isValid={!this.state.quoteTitleValid}\r\n                                                        isInvalid={!this.state.quoteTitleValid}\r\n                                                    />\r\n                                                    \r\n                                                </Col>\r\n                                                <Col xs=\"auto\"> -</Col>\r\n                                                <Col xs=\"auto\">\r\n\r\n                                                    <Form.Control\r\n                                                            value={this.state.quoteAuthor}\r\n                                                            type='text'\r\n                                                            // style={{width : String(this.state.quoteAuthor.length)}}\r\n                                                            size='lg'\r\n                                                            onChange={this.onChangeQuoteAuthor}\r\n                                                            name = 'quoteAuthor'\r\n                                                            placeholder = 'Quote Author'\r\n                                                            isValid={!this.state.quoteAuthorValid}\r\n                                                            isInvalid={!this.state.quoteAuthorValid}\r\n                                                    />\r\n\r\n                                                    \r\n                                                </Col>\r\n                                            </Row>\r\n                                    </Alert.Heading>\r\n                                    <Form.Text className=\"text-muted\" style={{ float : \"left\"}}>\r\n                                        Quote titles must be shorter than 40 characters.\r\n                                    </Form.Text>\r\n                                    <Form.Text className=\"text-muted\" style={{float : \"right\"}}>\r\n                                        Add the original Author of the Quote.\r\n                                    </Form.Text>\r\n\r\n                                    <Form.Control\r\n                                        value={this.state.quoteBody}\r\n                                        id = \"quoteBody\"\r\n                                        name = \"quoteBody\"\r\n                                        as=\"textarea\" rows = \"4\"\r\n                                        onChange={this.onChangeQuoteBody}\r\n                                        placeholder = 'Main Body of Quote'\r\n                                        isValid={!this.state.quoteBodyValid}\r\n                                        isInvalid={!this.state.quoteBodyValid}\r\n                                    />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    Main text of the Quote must be between 200 and 350 characters.\r\n                                    </Form.Text>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                All Quotes will be approved by an admin before they can be used for testing. \r\n                            </Form.Text>\r\n\r\n                                </Form>\r\n                                \r\n                            </Alert>\r\n                            \r\n                            \r\n                            <Button type=\"submit\" variant=\"info\" onClick={this.addQuote} disabled={!this.state.formValidAndUser}>\r\n                                    Create Quote\r\n                            </Button>\r\n                            <Form.Text className=\"text-muted\">\r\n                                You must be logged in to add a Quote.\r\n                            </Form.Text>\r\n                   \r\n                        </Col> \r\n                    </Row>\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SearchInput = styled.input.attrs(props => ({\r\n    type : 'text',\r\n    placeholder : ' Search: Title, Author, User'\r\n    \r\n}))`\r\n    background: white;\r\n    border-radius: 5px;\r\n    border: 1px solid darkgray;\r\n    height : 35px;\r\n    margin-left : 80px;\r\n    width : 230px;\r\n    float: right;\r\n    :: disabled\r\n`\r\n\r\n// Quote component\r\nconst Quote = props => (\r\n    <div>\r\n        <Alert variant=\"secondary\">\r\n            <Link to={{ pathname : '/', state: { id : props.quote._id }}} style={{color : '#202326'}}>\r\n                <Alert.Heading>{props.quote.quoteTitle} -{props.quote.quoteAuthor}</Alert.Heading>\r\n            </Link>\r\n            <span>{props.quote.quoteBody}</span>\r\n            <hr />\r\n            <Row>\r\n                <Col sm={8}>\r\n                    <span>Added by: <Alert.Link>{props.quote.quoteUser}</Alert.Link></span>\r\n                    <span style={{marginLeft : 10}}>Rating : {props.quote.quoteScore}</span>\r\n                    <span style={{marginLeft : 10}}>High Score : {props.quote.highWPMScore}WPM {props.quote.highAccScore}% Accuracy</span>\r\n\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div style={{float : 'right'}}>\r\n                        <Alert.Link  variant=\"outline-seconary\">\r\n                            Suggest Edit\r\n                        </Alert.Link>\r\n                    </div>\r\n                </Col>\r\n            </Row>    \r\n        </Alert>\r\n        <br></br>\r\n    </div>  \r\n)\r\n\r\nexport default class QuoteList extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.search = this.search.bind(this);\r\n        this.quotesList = this.quotesList.bind(this);\r\n\r\n        this.state = {\r\n            quotes: [],\r\n            search : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        axios.get(APIURL + '/quotes/approved')\r\n            .then(response => {\r\n                this.setState({ quotes : response.data});\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    quotesList(quotesList) {\r\n        return quotesList.map(function(currentQuote, i){\r\n            return <Quote quote={currentQuote} key={i} index = {i}  />\r\n        })\r\n    }\r\n\r\n    search() {\r\n        this.setState({\r\n            search : document.getElementById('searchBar').value\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        // filter funtion that works so amazingly well without needing more requests\r\n        let filteredQuotes = this.state.quotes.filter(\r\n            (quote) => {\r\n                return  quote.quoteTitle.toLowerCase().indexOf(this.state.search) !== -1 ||\r\n                        quote.quoteAuthor.toLowerCase().indexOf(this.state.search) !== -1 || \r\n                        quote.quoteUser.indexOf(this.state.search) !== -1;\r\n            }\r\n        )\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={8}>\r\n                            <h4>Quotes</h4>  \r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <SearchInput id=\"searchBar\"  onChange={this.search}></SearchInput>\r\n                        </Col>\r\n                        \r\n                    </Row><br/>\r\n                    <Row>\r\n                        <Col>\r\n                            {this.quotesList(filteredQuotes)}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form  from \"react-bootstrap/Form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Alert from \"react-bootstrap/Alert\"\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.login = this.login.bind(this);\r\n        this.onChangeLoginUsername = this.onChangeLoginUsername.bind(this);\r\n        this.onChangeLoginPassword = this.onChangeLoginPassword.bind(this);\r\n\r\n        this.state = {\r\n\r\n            inputEmail : '',\r\n            inputUsername : '',\r\n            inputPassword : '',\r\n            isEmail : false,\r\n\r\n            formErrors: {username: '', email: '', password: ''},\r\n            usernameValid : false,\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            formValid: false,\r\n            loggedInUser : {},\r\n\r\n            error : false,\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n\r\n\r\n    }\r\n\r\n    onChangeLoginUsername(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            inputUsername : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.inputUsername)\r\n        });\r\n    }\r\n\r\n    onChangeLoginPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            inputPassword : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.inputPassword)\r\n        });\r\n    }\r\n\r\n    //  Validate Field function takes name of field that is being validated and the value in that field\r\n    //  Check if Email is valid format using regex\r\n    //  Check if Password is longer than 6 characters\r\n    //  Check if Username is longer than 4 chacracters\r\n    validateField(fieldName, value) {\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let passwordValid = this.state.passwordValid;\r\n        let usernameValid = this.state.usernameValid;\r\n\r\n        switch(fieldName) {\r\n            \r\n            case 'Password':\r\n                passwordValid = value.length >= 6;\r\n                fieldValidateErrors.password = passwordValid ? '' : ' is too short';\r\n                break;\r\n            \r\n            case 'Username':\r\n                \r\n                usernameValid = value.length >=4;\r\n                fieldValidateErrors.username = usernameValid ? '' : ' is too short';\r\n                \r\n                \r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({formErrors : fieldValidateErrors, \r\n                        usernameValid : usernameValid, \r\n                        passwordValid : passwordValid\r\n                    },    \r\n                        this.validateForm);\r\n    }\r\n\r\n\r\n    login(e) {\r\n        e.preventDefault();\r\n\r\n        const loginAccount = {\r\n            userName : this.state.inputUsername,\r\n            userPassword : this.state.inputPassword,\r\n        }\r\n\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        \r\n        axios.post(APIURL + '/user/login' , loginAccount, {withCredentials:true})\r\n        .then(res => {\r\n            localStorage.setItem(\"beepboop\", res.data);\r\n            \r\n            this.props.history.push({\r\n                             pathname : \"/profile\",\r\n                             \r\n            });\r\n        })\r\n        .catch(err => {\r\n            this.setState({\r\n                error : true\r\n            })\r\n        });\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                    <Row>  \r\n                        <Col sm={5}>\r\n                            <Form>\r\n                                <Form.Group >\r\n                                    <h4>Login</h4>\r\n                                    <Form.Label>User Name: </Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.account_username}\r\n                                        id = \"inputLoginUserName\"\r\n                                        onChange = {this.onChangeLoginUsername}\r\n                                        name =\"Username\"\r\n                                    /><br />\r\n                                    \r\n                                    <Form.Label>Password: </Form.Label>\r\n                                    <Form.Control\r\n                                        type = \"password\"\r\n                                        value={this.state.account_password}\r\n                                        id = \"inputLoginPassword\"\r\n                                        onChange = {this.onChangeLoginPassword}\r\n                                        name = \"Password\"\r\n                                    />\r\n                                      \r\n                                </Form.Group>\r\n                                <Button type=\"submit\" variant=\"info\" onClick={this.login} >\r\n                                    Login\r\n                                </Button>\r\n\r\n                                <Link to=\"/account\">\r\n                                    <Button variant=\"secondary\" style={{ marginLeft : 10}}>\r\n                                        Create Account\r\n                                    </Button>\r\n                                </Link>\r\n                            </Form>\r\n                        </Col> \r\n                    </Row>\r\n                    <br></br>\r\n                    <Row>\r\n                        <Col sm={5}>\r\n                            <Collapse in={this.state.error}>\r\n                                <div>\r\n                                     <Alert variant={'danger'}>\r\n                                    <p>Username or Password Incorrect</p>\r\n                                </Alert>\r\n                                </div>\r\n                               \r\n                            </Collapse>\r\n                        </Col>\r\n                        \r\n                        \r\n                    </Row>\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from \"./Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n\r\n//import { FormErrors } from './FormErrors';\r\n\r\n\r\n// Account component for creating accounts\r\n// Includes clients side validation of credentials.\r\n\r\nexport default class Account extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.onChangeAccountUsername = this.onChangeAccountUsername.bind(this);\r\n        this.onChangeAccountEmail = this.onChangeAccountEmail.bind(this);\r\n        this.onChangeAccountPassword = this.onChangeAccountPassword.bind(this);\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n\r\n            account_username:'',\r\n            account_email:'',\r\n            account_password:'',\r\n            account_favourties: [],\r\n            formErrors: {username: '', email: '', password: ''},\r\n            usernameValid : false,\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            formValid: false,\r\n            loggedUser : {},\r\n\r\n            inputLoginPassword: '',\r\n            inputLoginUserName: ''\r\n        }\r\n    }\r\n\r\n    // Create Account inputs\r\n    onChangeAccountUsername(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            account_username: e.target.value},\r\n            () => {this.validateField(fieldName, this.state.account_username)           \r\n        });\r\n    }\r\n\r\n    onChangeAccountEmail(e) {\r\n        const fieldName = e.target.name;\r\n        //console.log(fieldName);\r\n        this.setState({\r\n            account_email: e.target.value},\r\n            () => {this.validateField(fieldName, this.state.account_email)\r\n        });  \r\n    }\r\n\r\n    onChangeAccountPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            account_password: e.target.value},\r\n            () => {this.validateField(fieldName, this.state.account_password)\r\n        });\r\n    }\r\n\r\n    //  Validate Field function takes name of field that is being validated and the value in that field\r\n    //  Check if Email is valid format using regex\r\n    //  Check if Password is longer than 6 characters\r\n    //  Check if Username is longer than 4 chacracters\r\n    validateField(fieldName, value) {\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n        let usernameValid = this.state.usernameValid;\r\n\r\n        switch(fieldName) {\r\n            case 'Email' :\r\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidateErrors.email = emailValid ? '' : ' is invalid';\r\n                break;\r\n            \r\n            case 'Password':\r\n                passwordValid = value.length >= 6;\r\n                fieldValidateErrors.password = passwordValid ? '' : ' is too short';\r\n                break;\r\n            \r\n            case 'Username':\r\n                usernameValid = value.length >=4;\r\n                fieldValidateErrors.username = usernameValid ? '' : ' is too short';\r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({formErrors : fieldValidateErrors, \r\n                        usernameValid : usernameValid,\r\n                        emailValid : emailValid, \r\n                        passwordValid : passwordValid\r\n                    },    \r\n                        this.validateForm);\r\n    }\r\n\r\n    // ValidaateForm function sets the current state of the fields of the form.\r\n    validateForm() {\r\n        this.setState({formValid:this.state.usernameValid && this.state.emailValid && this.state.passwordValid});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newAccount = {\r\n            userName: this.state.account_username,\r\n            userEmail : this.state.account_email,\r\n            userPassword : this.state.account_password,\r\n            \r\n        }\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        \r\n        axios.post( APIURL + '/user/register', newAccount, {withCredentials:true})\r\n        .then(res => {\r\n            if(res.status(400)){\r\n                console.log('email in use')\r\n            }\r\n        })\r\n            \r\n        this.setState = ({\r\n            account_username:'',\r\n            account_email:'',\r\n            account_password:'',\r\n        });\r\n\r\n        this.props.history.push({\r\n            pathname : \"/login\",\r\n            \r\n            });\r\n    }\r\n\r\n  \r\n    componentDidMount() {\r\n\r\n        if (localStorage.getItem('beepboop')) {\r\n            this.props.history.push({\r\n                pathname : \"/profile\",\r\n                \r\n});\r\n        }\r\n\r\n        // axios.get('http://localhost:8080/user/',{withCredentials:true})\r\n        // .then(res => {\r\n        //     console.log(res.data)\r\n        //     if (res.data)\r\n        //     {\r\n        //         this.props.history.push({\r\n        //             pathname : \"/account/user\",\r\n        //             state : { loggedInUser : res.data}\r\n        //             });\r\n        //     }\r\n            \r\n        // })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                    <Row>  \r\n                           \r\n                        <Col sm={5}>\r\n                            <Form>\r\n                                <Form.Group >\r\n                                    <h4>Create Account</h4>\r\n                                    <Form.Label>User Name: </Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.account_username}\r\n                                        id = \"inputUserName\"\r\n                                        onChange = {this.onChangeAccountUsername}\r\n                                        name = \"Username\"\r\n                                    /><br />\r\n\r\n                                    <Form.Label>Email: </Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.account_email}\r\n                                        id = \"inputUserEmail\"\r\n                                        onChange = {this.onChangeAccountEmail}\r\n                                        name = \"Email\"\r\n                                    /><br />\r\n                                    \r\n                                    <Form.Label>Password: </Form.Label>\r\n                                    <Form.Control\r\n                                        type = \"password\"\r\n                                        value={this.state.account_password}\r\n                                        id = \"inputPassword\"\r\n                                        onChange = {this.onChangeAccountPassword}\r\n                                        name = \"Password\"\r\n                                    />\r\n                                      \r\n                                </Form.Group>\r\n                                <Button type=\"submit\" variant=\"info\" onClick={this.onSubmit} disabled={!this.state.formValid}>\r\n                                    Create Account\r\n                                </Button>\r\n                                \r\n                                <Link to=\"/login\">\r\n                                    <Button variant=\"secondary\" style={{ marginLeft : 10}}>\r\n                                        Login\r\n                                    </Button>\r\n                                </Link>\r\n                                \r\n                            </Form>\r\n                        </Col>\r\n                        <Col sm={2}></Col>\r\n                        \r\n                        \r\n                    </Row>\r\n\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport 'zingchart/es6';\r\nimport ZingChart from 'zingchart-react';\r\n\r\n// Quote component\r\nconst Quote = props => (\r\n    <div>\r\n        <Alert variant=\"secondary\">\r\n            <Link to={{ pathname : '/', state: { id : props.quote._id }}} style={{color : '#202326'}}>\r\n                <Alert.Heading>{props.quote.quoteTitle} -{props.quote.quoteAuthor}</Alert.Heading>\r\n            </Link>\r\n            <span>{props.quote.quoteBody}</span>\r\n            <hr />\r\n            <Row>\r\n                <Col sm={8}>\r\n                    <span style={{marginLeft : 10}}>Approved : {String(props.quote.quoteApproved)}</span>\r\n                    <span style={{marginLeft : 10}}>Rating : {props.quote.quoteScore}</span>\r\n                    <span style={{marginLeft : 10}}>High Score : {props.quote.highWPMScore}WPM {props.quote.highAccScore}% Accuracy</span>\r\n\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div style={{float : 'right'}}>\r\n                        <Alert.Link style={{marginRight : 10}} onClick={props.edit}>\r\n                            Edit\r\n                        </Alert.Link>\r\n                        <Alert.Link onClick={props.delete}>\r\n                            Delete\r\n                        </Alert.Link>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Alert>\r\n        <br></br>\r\n    </div>\r\n)\r\n\r\nexport default class Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.logout = this.logout.bind(this);\r\n        this.getQuotes = this.getQuotes.bind(this);\r\n        this.deleteAccount = this.deleteAccount.bind(this);\r\n        \r\n        this.editAccount = this.editAccount.bind(this);\r\n        this.approveButton = this.approveButton.bind(this);\r\n        this.editQuote = this.editQuote.bind(this);\r\n        this.deleteQuote = this.deleteQuote.bind(this);\r\n        this.deleteThisQuote = this.deleteThisQuote.bind(this);\r\n        this.showEditErrors = this.showEditErrors.bind(this);\r\n\r\n        this.handleDeleteAccountClose = this.handleDeleteAccountClose.bind(this);\r\n        this.handleDeleteQuoteClose = this.handleDeleteQuoteClose.bind(this);\r\n        this.handleEditQuoteClose = this.handleEditQuoteClose.bind(this);\r\n        this.saveQuote = this.saveQuote.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n\r\n        this.onChangeQuoteTitle = this.onChangeQuoteTitle.bind(this);\r\n        this.onChangeQuoteAuthor = this.onChangeQuoteAuthor.bind(this);\r\n        this.onChangeQuoteBody = this.onChangeQuoteBody.bind(this);\r\n\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n\r\n\r\n        this.state = {\r\n\r\n            id: '',\r\n            username : '',\r\n            email : '',\r\n            signUpDate : '',\r\n            personalBestWPM : 0,\r\n            personalBestAcc : 0,\r\n            quoteIds : [],\r\n            quotes : [],\r\n            APIURL : '',\r\n            unapprovedQuotesCount : 0,\r\n\r\n            deleteAccountModal : false,\r\n            deleteQuoteModal : false,\r\n            editQuoteModal : false,\r\n\r\n            activeTab : props.activeTab || 1,\r\n\r\n            quoteTitleValid : false,\r\n            quoteBodyValid : false,\r\n            quoteAuthorValid : false,\r\n            formValid : false, \r\n            formErrors : {quoteTitle: '', quoteBody : '', quoteAuthor : ''},\r\n\r\n            editQuote : {\r\n                quoteTitle : '',\r\n                quoteAuthor : '',\r\n                quoteBody : '',\r\n            },\r\n\r\n            deletingQuote : {\r\n                quoteTitle : '',\r\n            },\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let token = localStorage.getItem('beepboop')\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n            this.setState({\r\n                APIURL : 'https://typingtest.jdoyle.ie'\r\n            })\r\n        } else if (process.env.NODE_ENV === 'development') {\r\n            APIURL = 'http://localhost:8080'\r\n            this.setState({\r\n                APIURL : 'http://localhost:8080'\r\n            })\r\n        }\r\n        axios.get(APIURL + '/user/profile',{ headers : { 'auth-token' : token}}  )\r\n        .then( res => {\r\n\r\n            //console.log(this.state)\r\n            if (res.data.isAdmin) {\r\n                localStorage.setItem(\"nimdAis\", res.data.isAdmin)\r\n            }\r\n\r\n            let avgWPM = [];\r\n            //fill an array the same length as the user's with the avg WPM to compare against the user\r\n            for(let i = 0; i < res.data.latestWPMScores.length; i++) {\r\n                avgWPM[i] = 40\r\n            }\r\n\r\n            let avgAcc = [];\r\n             //fill an array the same length as the user's with the avg ACC to compare against the user\r\n             for(let j = 0; j < res.data.latestAccScores.length; j++) {\r\n                avgAcc[j] = 92;\r\n            }\r\n\r\n            let theme = '';\r\n            console.log(localStorage.getItem(\"isDarkMode\"))\r\n            if (localStorage.getItem(\"isDarkMode\")) {\r\n                theme = 'dark';\r\n            } else {\r\n                theme = 'light';\r\n            }\r\n            console.log(theme)\r\n            if (res.data) {\r\n                //console.log(res.data)\r\n                this.setState({\r\n                    id : res.data._id,\r\n                    username : res.data.userName,\r\n                    email : res.data.userEmail,\r\n                    signUpDate : res.data.signUpDate.slice(0, 15),\r\n                    personalBestWPM : res.data.personalBestWPM,\r\n                    personalBestAcc : res.data.personalBestAcc,\r\n                    quoteIds : res.data.quotesAdded,\r\n                    WPMChartConfig : {\r\n                        theme : theme,\r\n                        type : 'line',\r\n                        title : {\r\n                            text : 'Words Per Minute',\r\n                        },\r\n                        height : '60%',\r\n                        legend : {},\r\n                        scaleX : {\r\n                            label : {\r\n                                text : 'Typing Tests'\r\n                            }\r\n                        },\r\n                        scaleY : {\r\n                            label : {\r\n                                text : 'WPM'\r\n                            }\r\n                        },\r\n                        series: [{\r\n                            values : res.data.latestWPMScores,\r\n                            text : 'Your WPM'\r\n                        },{\r\n                            values : avgWPM,\r\n                            text : 'Avg WPM'\r\n                        }\r\n                        ]\r\n                    },\r\n\r\n                    AccChartConfig : {\r\n                        theme : theme,\r\n                        type : 'line',\r\n                        title : {\r\n                            text : 'Typing Accuracy % ',\r\n                        },\r\n                        height : '70%',\r\n                        legend : {},\r\n                        scaleX : {\r\n                            label : {\r\n                                text : 'Typing Tests'\r\n                            }\r\n                        },\r\n                        scaleY : {\r\n                            label : {\r\n                                text : 'Accuracy % '\r\n                            }\r\n                        },\r\n                        series: [{\r\n                            values : res.data.latestAccScores,\r\n                            text : 'Your Accuracy %'\r\n                        },{\r\n                            values : avgAcc,\r\n                            text : 'Avg Accuracy %'\r\n                        }\r\n                        ]\r\n                    }\r\n\r\n                }, () => console.log(this.state.chartConfig))\r\n                this.getQuotes();\r\n            }\r\n        })\r\n\r\n        //get unapproved quotes\r\n        axios.get(APIURL + '/quotes/unapproved', {headers : {'auth-token' : token}})\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    this.setState({\r\n                    unapprovedQuotesCount : response.data.length\r\n                });\r\n                } else {\r\n                    this.setState({\r\n                        unapprovedQuotesCount : null\r\n                    })\r\n                }\r\n\r\n\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n   \r\n\r\n    //#region Quotes list\r\n    getQuotes() {\r\n        if (this.state.quoteIds.length > 0) {\r\n            this.state.quoteIds.forEach(Id => {\r\n                axios.get(this.state.APIURL + '/quotes/' + Id)\r\n                .then(res => {\r\n\r\n                    if (res.data) {\r\n                        this.setState({\r\n                            quotes : [...this.state.quotes, res.data]\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    quotesComponentsList () {\r\n        let edit = this.editQuote;\r\n        let del = this.deleteQuote;\r\n        if (this.state.quotes.length > 0)\r\n        {\r\n            return this.state.quotes.map(function(currentQuote, i) {\r\n                return <Quote quote={currentQuote} key={i} index={i} edit={() => edit(currentQuote)} delete={() => del(currentQuote)}/>\r\n            })\r\n        }\r\n        else {\r\n            return  <Link to='/createQuote'><Button> Add Some Quotes!</Button></Link>\r\n        }\r\n\r\n    }\r\n    //#endregion\r\n\r\n\r\n    // Function that lets users edit a quote\r\n    editQuote(quote) {\r\n        //console.log(quote)\r\n        this.setState({\r\n            editQuote : quote\r\n        }, () => this.handleEditQuoteClose())\r\n    }\r\n\r\n    // Function that lets users delete a quote\r\n    deleteQuote(quote) {\r\n        this.setState({\r\n            deletingQuote : quote\r\n        }, () => this.handleDeleteQuoteClose())\r\n    }\r\n\r\n    deleteThisQuote() {\r\n        const quote = this.state.deletingQuote;\r\n\r\n        let token = localStorage.getItem('beepboop');\r\n        axios.post(this.state.APIURL + '/quotes/delete',  quote , { headers: { 'auth-token' : token}})\r\n        .then(res => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                editQuoteModal : false\r\n            })\r\n            window.location.reload()\r\n        })\r\n        .catch(err => err)\r\n\r\n    }\r\n\r\n    //#region Edit Quote Modal Functions\r\n\r\n    onChangeQuoteTitle(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            editQuote : {\r\n                ...this.state.editQuote,\r\n                quoteTitle : e.target.value,\r\n            }\r\n        }, () => {this.validateField(fieldName, this.state.editQuote.quoteTitle)})\r\n    }\r\n\r\n    onChangeQuoteAuthor(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            editQuote : {\r\n                ...this.state.editQuote,\r\n                quoteAuthor : e.target.value\r\n            }\r\n        }, () => {this.validateField(fieldName, this.state.editQuote.quoteAuthor)})\r\n    }\r\n\r\n    onChangeQuoteBody(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            editQuote : {\r\n                ...this.state.editQuote,\r\n                quoteBody : e.target.value\r\n            }\r\n        }, () => {this.validateField(fieldName, this.state.editQuote.quoteBody)})\r\n    }\r\n\r\n    // Saves the new edited quote\r\n    saveQuote() {\r\n        let token = localStorage.getItem('beepboop');\r\n        let APIURL = ''\r\n       //console.log(token)\r\n        const editedQuote = this.state.editQuote;\r\n        console.log(editedQuote)\r\n        console.log(this.state.APIURL)\r\n        axios.post(this.state.APIURL + '/quotes/update', editedQuote, { headers: { 'auth-token' : token}})\r\n        .then(res => {\r\n            //onsole.log(res.data)\r\n            this.setState({\r\n                editQuoteModal : false\r\n            })\r\n            window.location.reload()\r\n        })\r\n        .catch(err => err)\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let quoteTitleValid = this.state.quoteTitleValid;\r\n        let quoteBodyValid = this.state.quoteBodyValid;\r\n        let quoteAuthorValid = this.state.quoteAuthorValid;\r\n\r\n        //console.log(value)\r\n        switch(fieldName) {\r\n            \r\n            case 'quoteTitle':\r\n                \r\n                quoteTitleValid = value.length >= 0 && value.length < 40;\r\n                fieldValidateErrors.quoteTitle = quoteTitleValid ? '' : 'Quote Title must not be empty or greater than 20 characters.';\r\n                break;\r\n            \r\n            case 'quoteBody':\r\n                \r\n                quoteBodyValid = value.length >= 200  && value.length <= 350 ;\r\n                fieldValidateErrors.quoteBody = quoteBodyValid ? '' : 'Quote Body is too short';\r\n                \r\n                break;\r\n\r\n            case 'quoteAuthor':\r\n\r\n                if (value.length === 0){\r\n                    quoteAuthorValid = true;\r\n                    this.setState((state) => ({\r\n                        quoteAuthor : state.username\r\n                    }), () => {fieldValidateErrors.quoteAuthor = quoteAuthorValid ? '' : ''})\r\n                    break;\r\n                }\r\n                else if (value.length <= 20) {\r\n                    quoteAuthorValid = true\r\n                    fieldValidateErrors.quoteAuthor = quoteAuthorValid ? '' : 'Quote Author is short long';\r\n                    break;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({\r\n            formErrors : fieldValidateErrors, \r\n            quoteTitleValid : quoteTitleValid, \r\n            quoteBodyValid : quoteBodyValid,\r\n            quoteAuthorValid : quoteAuthorValid,\r\n        },    \r\n            this.validateForm);\r\n        \r\n    }\r\n\r\n     // ValidaateForm function sets the current state of the fields of the form.\r\n    validateForm() {\r\n        console.log(this.state.quoteTitleValid, this.state.quoteAuthorValid, this.state.quoteBodyValid )\r\n\r\n        this.setState({\r\n            formValid:  this.state.quoteTitleValid &&\r\n                        this.state.quoteBodyValid && \r\n                        this.state.quoteAuthorValid,\r\n                    });\r\n\r\n    }\r\n\r\n    showEditErrors() {\r\n        if (!this.state.formValid) {\r\n            //console.log('showing')\r\n            //console.log(this.state.formValid)\r\n            return <Alert variant=\"danger\">{this.state.formErrors.quoteTitle} \r\n                                           {this.state.formErrors.quoteAuthor} \r\n                                           {this.state.formErrors.quoteBody}\r\n                    </Alert>\r\n        } \r\n    }\r\n\r\n\r\n    //#endregion\r\n\r\n    // deleteAccountModal() {\r\n    //    this.handleClose()\r\n    // }\r\n\r\n\r\n\r\n    //#region Modal Handlers\r\n        handleDeleteAccountClose (){\r\n                this.setState({\r\n                    deleteAccountModal : !this.state.deleteAccountModal\r\n                })\r\n            }\r\n\r\n        handleEditQuoteClose () {\r\n            this.setState({\r\n                editQuoteModal : !this.state.editQuoteModal\r\n            })\r\n        }\r\n\r\n        handleDeleteQuoteClose() {\r\n            this.setState({\r\n                deleteQuoteModal : !this.state.deleteQuoteModal\r\n            })\r\n        }\r\n    //#endregion\r\n\r\n\r\n    //#region Account Buttons\r\n    logout() {\r\n            localStorage.removeItem(\"beepboop\")\r\n            localStorage.removeItem('nimdAis')\r\n            this.props.history.push({\r\n                pathname : \"/login\",\r\n            })\r\n        }\r\n\r\n    deleteAccount() {\r\n        let token = localStorage.getItem('beepboop')\r\n        localStorage.removeItem('beepboop')\r\n\r\n        const user = {\r\n            userName : this.state.username,\r\n            userEmail : this.state.email\r\n        }\r\n        //console.log(user)\r\n        axios.post(this.state.APIURL + '/user/delete', user , {headers : {'auth-token' : token}})\r\n\r\n\r\n        this.props.history.push({\r\n            pathname : '/login'\r\n        });\r\n    }\r\n\r\n    editAccount() {\r\n        let token = localStorage.getItem('beepboop')\r\n\r\n        const user = {\r\n            userName : this.state.username,\r\n            userEmail : this.state.email,\r\n            userId : this.state.id,\r\n        }\r\n\r\n        this.props.history.push({\r\n            pathname : '/editAccount',\r\n            state : { id : this.state.id }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    approveButton () {\r\n        if (localStorage.getItem('nimdAis')) {\r\n        return <Link to='/approveQuote'>\r\n                    <Button variant=\"outline-success\" style={{marginLeft : 10}}>Approve Quotes\r\n                        <Badge  variant=\"danger\" style={{marginLeft : 5}}>{this.state.unapprovedQuotesCount}</Badge>\r\n                    </Button>\r\n                </Link>\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    handleSelect(selectedTab) {\r\n        // The active tab must be set into the state so that\r\n        // the Tabs component knows about the change and re-renders.\r\n        this.setState({\r\n          activeTab: selectedTab\r\n        });\r\n      }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                {/* Delete Account Modal */}\r\n                <Modal\r\n                    show={this.state.deleteAccountModal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                    <Modal.Title>Delete Account?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to delete your account? This is not reversable.\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleDeleteAccountClose}>\r\n                        Nevermind\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={this.deleteAccount}>Delete Account</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {/* Delete Quote Modal */}\r\n                <Modal\r\n                    show={this.state.deleteQuoteModal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                    <Modal.Title>Delete Quote?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to delete {this.state.deletingQuote.quoteTitle}? This is not reversable and will delete the quotes top score and WPM.\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleDeleteQuoteClose}>\r\n                        Nevermind\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={this.deleteThisQuote}>Delete Quote</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {/* Edit Quote Modal */}\r\n                <Modal\r\n                    show={this.state.editQuoteModal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    size='xl'\r\n                    centered\r\n\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Edit Quote</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <div>\r\n                        <Alert variant=\"secondary\">\r\n                            <Form>\r\n                                <Alert.Heading>\r\n                                        <Row>\r\n                                            <Col m=\"auto\">\r\n\r\n                                                <Form.Control\r\n\r\n                                                    value={this.state.editQuote.quoteTitle}\r\n                                                    type='text'\r\n                                                    size='lg'\r\n                                                    onChange={this.onChangeQuoteTitle}\r\n                                                    name = 'quoteTitle'\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs=\"auto\"> -</Col>\r\n                                            <Col xs=\"auto\">\r\n\r\n                                                <Form.Control\r\n                                                        value={this.state.editQuote.quoteAuthor}\r\n                                                        type='text'\r\n                                                        style={{width : String(this.state.editQuote.quoteAuthor.length)}}\r\n                                                        size='lg'\r\n                                                        onChange={this.onChangeQuoteAuthor}\r\n                                                        name = 'quoteAuthor'\r\n                                                    />\r\n                                            </Col>\r\n                                        </Row>\r\n                                </Alert.Heading>\r\n\r\n                                <Form.Control\r\n                                    value={this.state.editQuote.quoteBody}\r\n                                    id = \"quoteBody\"\r\n                                    name = \"quoteBody\"\r\n                                    as=\"textarea\" rows = \"4\"\r\n                                    onChange={this.onChangeQuoteBody}\r\n                                />\r\n                            </Form>\r\n                        </Alert>\r\n                        {this.showEditErrors()}\r\n                    </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleEditQuoteClose}>\r\n                            Nevermind\r\n                        </Button>\r\n                        <Button variant=\"success\" onClick={this.saveQuote} disabled={!this.state.formValid}>\r\n                            Save Quote\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={9}>\r\n                            <h3>{this.state.username}'s Profile</h3>\r\n                            <h5>Email:  {this.state.email}</h5>\r\n                            <h5>Date Joined:  {this.state.signUpDate}</h5>\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                            <h4>Personal Best:</h4>\r\n                            <Alert variant=\"info\">\r\n                                <span>\r\n                                    WPM : {this.state.personalBestWPM} <br></br>\r\n                                    Accuracy : {this.state.personalBestAcc}% <br></br>\r\n                                </span>\r\n                            </Alert>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col >\r\n                            <br/>\r\n                            <Link to='/editAccount'>\r\n                                <Button variant=\"outline-info\" onClick={this.editAccount} style={{marginRight : 10}} disabled={false}>\r\n                                    Edit Account\r\n                                </Button>\r\n                            </Link>\r\n\r\n                            <Button variant=\"outline-warning\" onClick={this.logout} style={{marginRight : 10}}>\r\n                                Logout\r\n                            </Button>\r\n                            <Button variant=\"outline-danger\" onClick={this.handleDeleteQuoteClose}>\r\n                                Delete Account\r\n                            </Button>                   \r\n\r\n                            {this.approveButton()}\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col>\r\n                            <Tabs className=\"tabClass\" activeKey={this.state.activeTab} onSelect={this.handleSelect}>\r\n                                <Tab eventKey={1} title='Your Quotes' >\r\n                                    <br />\r\n                                    <div>\r\n                                        {this.quotesComponentsList()}\r\n                                    </div>\r\n                                </Tab>\r\n                                <Tab eventKey={2} title='Your Scores'> \r\n                                    <br />\r\n                                    <ZingChart data={this.state.WPMChartConfig} />\r\n                                    \r\n                                    <ZingChart data={this.state.AccChartConfig} />\r\n                                </Tab>\r\n                                \r\n                            </Tabs>\r\n                                \r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Card>\r\n                <div style={{ height : 800 }}></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from \"./Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\n\r\nexport default class EditAccount extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.onChangeAccountUsername = this.onChangeAccountUsername.bind(this);\r\n        this.onChangeAccountEmail = this.onChangeAccountEmail.bind(this);\r\n        this.onChangeAccountPassword = this.onChangeAccountPassword.bind(this);\r\n        this.onChangeAccountConfirmPassword = this.onChangeAccountConfirmPassword.bind(this);\r\n        this.onChangeCurrentPassword = this.onChangeCurrentPassword.bind(this);\r\n        this.editAccount = this.editAccount.bind(this);\r\n        this.checkPassword = this.checkPassword.bind(this);\r\n        this.passwordsMatch = this.passwordsMatch.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n\r\n        this.state ={\r\n\r\n            oldUser : {\r\n                id : '',\r\n                userName : '',\r\n                email : '',\r\n                password : '',\r\n            },\r\n\r\n            newInput : {\r\n                userName : '',\r\n                email : '',\r\n                password : '',\r\n                confirmPassword : '',\r\n                id : ''\r\n            },\r\n\r\n            newUser : {\r\n                userName : '',\r\n                email : '',\r\n                password : '',\r\n            },\r\n\r\n            onChangeCurrentPassword : '',\r\n            Modal : true,\r\n\r\n            token : '',\r\n            authValid : false,\r\n           \r\n            emailValid : false,\r\n            passwordValid : false,\r\n            usernameValid : false,\r\n            formValid : false,\r\n            formErrors : { email : '', password : '' , username : ''}\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let token = localStorage.getItem('beepboop')\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n            this.setState({\r\n                APIURL : 'https://typingtest.jdoyle.ie'\r\n            })\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n            this.setState({\r\n                APIURL : 'http://localhost:8080'\r\n            })\r\n        }\r\n        axios.get(APIURL + '/user/profile',{ headers : { 'auth-token' : token}}  )\r\n        .then( res => {\r\n            //console.log(this.state)\r\n            if (res.data) {\r\n                this.setState({\r\n                    oldUser : {\r\n                        id : res.data._id,\r\n                        userName : res.data.userName,\r\n                        email : res.data.userEmail,\r\n                    },\r\n                    token : token\r\n                })\r\n\r\n            }\r\n        })\r\n    \r\n    }\r\n\r\n    editAccount() {\r\n\r\n        const tempUser = this.state.newInput\r\n        console.log(tempUser)\r\n        //console.log(this.state.oldUser.password)\r\n        // Check if user has entered a new passowrd\r\n        if (this.state.newInput.password === \"\" && this.passwordsMatch) {\r\n            tempUser.password  = this.state.oldUser.password   \r\n        }\r\n        \r\n        // check if user has entered a new username\r\n        if (this.state.newInput.userName === '') {\r\n            tempUser.userName = this.state.oldUser.userName\r\n        } \r\n\r\n        // check if users has enetered a new email\r\n        if (this.state.newInput.email === '') {\r\n            tempUser.email = this.state.oldUser.email\r\n        } \r\n            \r\n        tempUser.id = this.state.oldUser.id\r\n        console.log(tempUser)\r\n        // post req\r\n        axios.post(this.state.APIURL + '/user/update', tempUser, { headers : {'auth-token' : this.state.token }})\r\n        .then(res => {\r\n            console.log(res.data)\r\n        }).catch(err => err)\r\n    }\r\n\r\n\r\n    // Create Account inputs\r\n    onChangeAccountUsername(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            newInput : {\r\n                userName : e.target.value,\r\n                email : this.state.newInput.email,\r\n                password : this.state.newInput.password,\r\n                confirmPassword : this.state.newInput.confirmPassword,\r\n            }},\r\n            () => {this.validateField(fieldName, this.state.newInput.userName)} \r\n        );\r\n    }\r\n\r\n    onChangeAccountEmail(e) {\r\n        const fieldName = e.target.name;\r\n        //console.log(fieldName);\r\n        this.setState({\r\n            newInput : {\r\n\r\n               email: e.target.value,\r\n               userName : this.state.newInput.userName,\r\n               password : this.state.newInput.password,\r\n               confirmPassword : this.state.newInput.confirmPassword,\r\n            }},\r\n            () => {this.validateField(fieldName, this.state.newInput.email)}\r\n        );  \r\n    }\r\n\r\n    onChangeAccountPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            newInput : {\r\n                password: e.target.value,\r\n                confirmPassword : this.state.newInput.confirmPassword,\r\n                userName : this.state.newInput.userName,\r\n                email : this.state.newInput.email,\r\n            }},\r\n            () => {this.validateField(fieldName, this.state.newInput.password)}\r\n        );\r\n    }\r\n\r\n    onChangeAccountConfirmPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            newInput : {\r\n                confirmPassword: e.target.value,\r\n                userName : this.state.newInput.userName,\r\n                email : this.state.newInput.email,\r\n                passowrd : this.state.newInput.password,\r\n            }},\r\n           // () => {this.validateField(fieldName, this.state.newConfirmPassword)}\r\n        );\r\n    }\r\n\r\n    onChangeCurrentPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            onChangeCurrentPassword : e.target.value\r\n        })\r\n    }\r\n\r\n    //  Validate Field function takes name of field that is being validated and the value in that field\r\n    //  Check if Email is valid format using regex\r\n    //  Check if Password is longer than 6 characters\r\n    //  Check if Username is longer than 4 chacracters\r\n    validateField(fieldName, value) {\r\n        console.log(value)\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n        let usernameValid = this.state.usernameValid;\r\n\r\n      \r\n\r\n        switch(fieldName) {\r\n            case 'Email' :\r\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidateErrors.email = emailValid ? '' : ' is invalid';\r\n                break;\r\n            \r\n            case 'Password':\r\n                passwordValid = value.length >= 6;\r\n                fieldValidateErrors.password = passwordValid ? '' : ' is too short';\r\n                break;\r\n            \r\n            case 'Username':\r\n                usernameValid = value.length >=4;\r\n                fieldValidateErrors.username = usernameValid ? '' : ' is too short';\r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({formErrors : fieldValidateErrors, \r\n                        usernameValid : usernameValid,\r\n                        emailValid : emailValid, \r\n                        passwordValid : passwordValid\r\n                    },    \r\n                        this.validateForm);\r\n    }\r\n\r\n    // ValidaateForm function sets the current state of the fields of the form.\r\n    validateForm() {\r\n        this.setState({formValid:this.state.usernameValid && this.state.emailValid && this.state.passwordValid});\r\n    }\r\n\r\n    checkPassword (){\r\n        const loginAccount = {\r\n            userName : this.state.oldUser.userName,\r\n            userPassword : this.state.onChangeCurrentPassword\r\n        }\r\n\r\n        this.setState((state) => ({\r\n            oldUser : {\r\n                ...state.oldUser,\r\n                password : loginAccount.userPassword\r\n            }\r\n        })\r\n\r\n        )\r\n        //console.log(loginAccount)\r\n        axios.post(this.state.APIURL + '/user/login' , loginAccount, {withCredentials:true})\r\n        .then(res => {\r\n            \r\n            if (res.data) {\r\n                //console.log('beep')\r\n                this.setState({\r\n                    Modal : false\r\n                })\r\n            }\r\n            else {\r\n                console.log('error')\r\n            }\r\n        }).catch (err => {\r\n            this.setState({\r\n                authValid : true\r\n            })\r\n        }) \r\n    }\r\n\r\n\r\n\r\n    // check if both entries of passwords match returns true / false\r\n    passwordsMatch() {\r\n        if (this.state.newPassword === this.state.newConfirmPassowrd) {\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Modal\r\n                    show={this.state.Modal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                       <Modal.Title>Enter your current Password</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Enter your current password to edit your Account.\r\n                        <Form>\r\n                            \r\n                            <Form.Control \r\n                                value={this.state.onChangeCurrentPassword}\r\n                                type = \"password\"\r\n                                id = \"inputUserName\"\r\n                                onChange = {this.onChangeCurrentPassword}\r\n                                name = \"Username\"\r\n                                isInvalid = {this.state.authValid}\r\n                           />\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Link to=\"/profile\">\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Nevermind\r\n                        </Button>\r\n                    </Link>\r\n                    \r\n                    <Button variant=\"danger\" onClick={this.checkPassword}>Edit Account</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={5}>\r\n                            <Form>\r\n                                <Form.Group>\r\n                                    <h4>Edit Account</h4>\r\n                                    <Form.Label>User Name:</Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.newInput.userName}\r\n                                        id = \"inputUserName\"\r\n                                        onChange = {this.onChangeAccountUsername}\r\n                                        name = \"Username\"\r\n                                        placeholder = {this.state.oldUser.userName}\r\n                                        isValid = {this.state.usernameValid}\r\n\r\n                                    /><br />\r\n\r\n                                    <Form.Label>Email: </Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.newInput.email}\r\n                                        id = \"inputUserEmail\"\r\n                                        onChange = {this.onChangeAccountEmail}\r\n                                        name = \"Email\"\r\n                                        placeholder = {this.state.oldUser.email}\r\n                                        isValid = {this.state.emailValid}\r\n                                    /><br />\r\n                                    \r\n                                    <Form.Label>Password: </Form.Label>\r\n                                    <Form.Control\r\n                                        type = \"password\"\r\n                                        value={this.state.newInput.password}\r\n                                        id = \"inputPassword\"\r\n                                        onChange = {this.onChangeAccountPassword}\r\n                                        name = \"Password\"\r\n                                        isValid = {this.state.passwordValid}\r\n                                    />\r\n                                    <Form.Label>Confirm Password: </Form.Label>\r\n                                    <Form.Control\r\n                                        type = \"password\"\r\n                                        value={this.state.newInput.confirmPassword}\r\n                                        id = \"inputConfirmPassword\"\r\n                                        onChange = {this.onChangeAccountConfirmPassword}\r\n                                        name = \"ConfirmPassword\"\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                 <Link to=\"/profile\">\r\n                                    <Button variant=\"secondary\" style={{ marginRight : 10}}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Link>\r\n\r\n                                <Button  variant=\"info\" onClick={this.editAccount}>\r\n                                    Save\r\n                                </Button>\r\n                                \r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst SearchInput = styled.input.attrs(props => ({\r\n    type : 'text',\r\n    placeholder : ' Search: Title, Author, User'\r\n    \r\n}))`\r\n    background: white;\r\n    border-radius: 5px;\r\n    border: 1px solid darkgray;\r\n    height : 35px;\r\n    margin-left : 80px;\r\n    width : 230px;\r\n    float: right;\r\n    :: disabled\r\n`\r\n\r\n// Quote component\r\nconst Quote = props => (\r\n    <div>\r\n        <Alert variant=\"secondary\">\r\n            <Link to={{ pathname : '/', state: { id : props.quote._id }}} style={{color : '#202326'}}>\r\n                <Alert.Heading>{props.quote.quoteTitle} -{props.quote.quoteAuthor}</Alert.Heading>\r\n            </Link>\r\n            <span>{props.quote.quoteBody}</span>\r\n            <hr />\r\n            <Row>\r\n                <Col sm={8}>\r\n                    <span>Added by: <Alert.Link>{props.quote.quoteUser}</Alert.Link></span>\r\n                    <span style={{marginLeft : 10}}>Approved : {String(props.quote.quoteApproved)}</span> \r\n                    <span style={{marginLeft : 10}}>Rating : {props.quote.quoteScore}</span> \r\n                    <span style={{marginLeft : 10}}>High Score : {props.quote.highWPMScore}WPM {props.quote.highAccScore}% Accuracy</span>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div style={{float : 'right'}}>\r\n\r\n                        <Button variant=\"success\" style={{ marginRight : 5}} onClick={props.approve}  >\r\n                            Approve\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={props.del}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>    \r\n        </Alert>\r\n        <br></br>\r\n    </div>  \r\n)\r\n\r\nexport default class QuoteList extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.search = this.search.bind(this);\r\n        this.quotesList = this.quotesList.bind(this);\r\n        this.approveQuote = this.approveQuote.bind(this);\r\n        this.deleteQuote = this.deleteQuote.bind(this);\r\n        this.noQuotes = this.noQuotes.bind(this);\r\n\r\n        this.state = {\r\n            quotes: [],\r\n            search : '',\r\n            token : '',\r\n            APIURL : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let token = localStorage.getItem('beepboop');\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n            this.setState({\r\n                APIURL : 'https://typingtest.jdoyle.ie'\r\n            })\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n            this.setState({\r\n                APIURL : 'http://localhost:8080'\r\n            })\r\n        }\r\n        axios.get(APIURL + '/quotes/unapproved', {headers : {'auth-token' : token}})\r\n            .then(response => {\r\n                this.setState({ \r\n                    quotes : response.data,\r\n                    token : localStorage.getItem('beepboop')\r\n                });\r\n\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    quotesList(quotesList) {\r\n        let approve = this.approveQuote;\r\n        let del = this.deleteQuote;\r\n        return quotesList.map(function(currentQuote, i, ){\r\n            return <Quote quote={currentQuote} key={i} index = {i}  approve={() => approve(currentQuote)} del={() => del(currentQuote)}/>\r\n        })\r\n    }\r\n\r\n    search() {\r\n        this.setState({\r\n            search : document.getElementById('searchBar').value\r\n        })\r\n        \r\n    }\r\n\r\n    approveQuote(currentQuote) {\r\n        console.log(currentQuote)\r\n        axios.post(this.state.APIURL + '/quotes/approve', currentQuote, { headers : {'auth-token' : this.state.token}})\r\n        .then(res => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                quotes : []\r\n            })\r\n        })\r\n        console.log(currentQuote.quoteApproved)\r\n\r\n    }\r\n\r\n    deleteQuote() {\r\n        console.log('Delete')\r\n    }\r\n\r\n    noQuotes() {\r\n        if (this.state.quotes.length === 0) {\r\n            return <span>No quotes to approve!</span> \r\n        }\r\n    }\r\n   \r\n\r\n    \r\n\r\n    render() {\r\n        // filter funtion that works so amazingly well without needing more requests\r\n        let filteredQuotes = this.state.quotes.filter(\r\n            (quote) => {\r\n                return  quote.quoteTitle.toLowerCase().indexOf(this.state.search) !== -1 ||\r\n                        quote.quoteAuthor.toLowerCase().indexOf(this.state.search) !== -1 || \r\n                        quote.quoteUser.indexOf(this.state.search) !== -1;\r\n            }\r\n        )\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={8}>\r\n                            <h4> Approve Quotes</h4>  \r\n                            \r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <SearchInput id=\"searchBar\"  onChange={this.search}></SearchInput>\r\n                        </Col>\r\n                        \r\n                    </Row><br/>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to='/profile'>\r\n                                <Button variant=\"info\">Back to Profile</Button>\r\n                            </Link>\r\n                        </Col> \r\n                    </Row><br/>\r\n                    <Row>\r\n                        <Col>\r\n                            {this.quotesList(filteredQuotes)}\r\n                            {this.noQuotes()}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAdmin } from '../utils/isAdmin';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isAdmin() ?\r\n                <Component {...props} />\r\n            : <Redirect to=\"/profile\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","\r\nexport const isAdmin  = () => {\r\n    if (localStorage.getItem('nimdAis')) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}","export default {\r\n    colors: {\r\n        background : \"white\",\r\n        cardBackground : \"#F5FFFA\",\r\n        buttonBackground : \"#5E81AC\",\r\n        textColor : \"black\",\r\n        buttonColor : \"ECEFF4\",\r\n    },\r\n};","export default {\r\n    colors: {\r\n      background: \"#343A40\",\r\n      cardBackground: \"#3B4252\",\r\n      buttonBackground: \"#d08770\",\r\n      textColor: \"#ECEFF4\",\r\n      buttonColor: \"#2E3440\",\r\n    },\r\n  };","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n    background: ${props => props.theme.colors.background};\r\n    color: ${props => props.theme.colors.textColor};\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 0px;\r\n\r\n`;\r\n","import styled from \"styled-components\";\r\nimport React from 'react';\r\n\r\n\r\nconst Svg = styled.svg`\r\n width : 30px;\r\n height : 30px;\r\n alt=\"Typing Test;\r\n`;\r\n\r\nexport default({ className }) => ( \r\n    <Svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-keyboard-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fillRule=\"evenodd\" d=\"M0 6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6zm13 .25a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zM2.25 8a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5A.25.25 0 0 0 3 8.75v-.5A.25.25 0 0 0 2.75 8h-.5zM4 8.25A.25.25 0 0 1 4.25 8h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 4 8.75v-.5zM6.25 8a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5A.25.25 0 0 0 7 8.75v-.5A.25.25 0 0 0 6.75 8h-.5zM8 8.25A.25.25 0 0 1 8.25 8h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 8 8.75v-.5zM13.25 8a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-.5zm0 2a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-.5zm-3-2a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h1.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-1.5zm.75 2.25a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zM11.25 6a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-.5zM9 6.25A.25.25 0 0 1 9.25 6h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 9 6.75v-.5zM7.25 6a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5A.25.25 0 0 0 8 6.75v-.5A.25.25 0 0 0 7.75 6h-.5zM5 6.25A.25.25 0 0 1 5.25 6h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 5 6.75v-.5zM2.25 6a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h1.5A.25.25 0 0 0 4 6.75v-.5A.25.25 0 0 0 3.75 6h-1.5zM2 10.25a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zM4.25 10a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h5.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-5.5z\"/>\r\n    </Svg>\r\n)","import React, { useState } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\"; \r\n\r\nimport TypingTest from './components/test.component';\r\nimport CreateQuote from './components/CreateQuote.component';\r\nimport Quotes from './components/quotes.component';\r\nimport Login from './components/login.component';\r\nimport Account from './components/account.component';\r\nimport Profile from './components/profile.component';\r\nimport EditAccount from './components/editAccount.component';\r\nimport ApproveQuote from './components/approveQuote.component';\r\n\r\nimport PrivateRoute from './components/privateRoute.component';\r\nimport './App.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavbarBrand from 'react-bootstrap/NavbarBrand';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport lightTheme from \"./themes/light\";\r\nimport darkTheme from \"./themes/dark\";\r\n\r\n\r\nimport Container from \"./components/Container\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavIcon from './components/NavIcon';\r\n\r\n\r\nconst App = () => {\r\n\r\n  const stored = localStorage.getItem(\"isDarkMode\");\r\n  \r\n  const [isDarkMode, setIsDarkMode] = useState( \r\n    stored === \"true\" ? true : false\r\n  );\r\n\r\n  \r\n\r\n  return (\r\n    <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\r\n      <Container>\r\n        \r\n        <Router>\r\n        <div className=\"container\">\r\n            <Navbar collapseOnSelect expand=\"lg\" bg={isDarkMode ? 'dark' : 'light'} variant={isDarkMode ? 'dark' : 'light'} sticky=\"top\">\r\n              <NavbarBrand>\r\n                <NavIcon></NavIcon>\r\n              </NavbarBrand>\r\n              <NavbarBrand>Typing Test</NavbarBrand>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  <Link to=\"/\" className=\"nav-link\" id=\"navBarText\">Test</Link>\r\n                  <Link to=\"/quotes\" className=\"nav-link\">Quotes</Link>\r\n                  <Link to=\"/createQuote\" className=\"nav-link\">Create Quote</Link>\r\n                  <Link to=\"/account\" className=\"nav-link\">Account</Link>\r\n                </Nav>\r\n                <Nav>\r\n                  <Button variant=\"outline-secondary\" onClick={() => {\r\n                  setIsDarkMode(!isDarkMode);\r\n                  localStorage.setItem(\"isDarkMode\", !isDarkMode);\r\n                  }}>\r\n                  <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" className=\"bi bi-circle-half\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" d=\"M8 15V1a7 7 0 1 1 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z\"/>\r\n                  </svg>\r\n                </Button>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n\r\n          <Route path=\"/\" exact component={TypingTest} />\r\n          <Route path=\"/createQuote\" component={CreateQuote} />\r\n          <Route path=\"/quotes\" component={Quotes} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/account\"exact component={Account} />\r\n          <Route path=\"/profile\" component={Profile} />\r\n          <Route path=\"/editAccount\" component={EditAccount} />\r\n          <PrivateRoute path=\"/approveQuote\" component={ApproveQuote} exact/>\r\n      \r\n        </Router>  \r\n      </Container>\r\n        \r\n    </ThemeProvider>\r\n   \r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}