{"version":3,"sources":["components/Card.js","components/test.component.js","components/CreateQuote.component.js","components/quotes.component.js","components/login.component.js","components/account.component.js","components/profile.component.js","components/editAccount.component.js","components/approveQuote.component.js","components/leaderboard.component.js","components/privateRoute.component.js","utils/isAdmin.js","themes/light.js","themes/dark.js","components/Container.js","components/NavIcon.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","props","theme","colors","cardBackground","TestInput","input","attrs","type","TypingTest","onInputChange","bind","compare","resetTest","endTest","startTimer","calculateWPM","calculateHighScore","backspace","escFunction","debugToggle","renderTooltip","newTest","sendHighscores","renderSpinner","increaseLike","decreaseLike","updateQuoteScore","state","quote","quote_Title","quote_body","quote_author","user_input","quote_words","char_array","current_quote_char","typed_chars","current_quote_word","count","error_count","total_error_count","input_disabled","HSenabled","QHSenabled","quote_left","quote_right","quote_error","quote_start","err_arr","quote_class","tInterval","seconds","netWPM","resultsVariant","endMsg","accuracy","highestAcc","highestWPM","quote_score","quoteWPM","quoteAcc","quoteID","upVote","downVote","apiUrl","token","user","debug","query","this","location","id","APIURL","setState","axios","get","then","response","data","quoteTitle","quoteBody","Array","from","quoteAuthor","quoteScore","highWPMScore","highAccScore","_id","catch","err","console","log","localStorage","getItem","headers","res","document","addEventListener","removeEventListener","event","keyCode","e","length","interval","setInterval","key","slice","current_char","getElementById","value","words","chars","body","split","clearInterval","focus","correctChars","lastWPM","lastAccuracy","Math","ceil","variant","activeElement","blur","latestAccuracy","latestWPM","personalBestWPM","personalBestAcc","sendQuoteScores","update","wpm","acc","post","latestWPMScores","scores","minutes","errors","popper","elements","reference","Tooltip","Spinner","animation","likeDecrease","likes","score","className","style","height","window","innerHeight","Card","Row","Col","sm","Alert","OverlayTrigger","placement","delay","show","hide","overlay","float","onClick","xmlns","width","fill","class","viewBox","d","marginLeft","marginRight","onKeyDown","disabled","name","Button","fillRule","clipRule","Collapse","in","Heading","Component","CreateQuote","checkLogin","onChangeQuoteTitle","onChangeQuoteBody","onChangeQuoteAuthor","validateField","validateForm","addQuote","loggedIn","quoteTitleValid","quoteBodyValid","quoteAuthorValid","formValid","formErrors","formValidAndUser","userName","preventDefault","quoteUser","reqObj","userId","quoteId","history","push","pathname","fieldName","target","fieldValidateErrors","username","screen","availHeight","Form","m","Control","size","onChange","placeholder","isValid","isInvalid","xs","Text","as","rows","SearchInput","Quote","to","color","Link","QuoteList","search","quotesList","selectSort","quotes","filteredQuotes","sortedQuotes","listHeight","map","currentQuote","i","index","filter","toLowerCase","indexOf","offsetHeight","sort","a","b","FormControl","Login","login","onChangeLoginUsername","onChangeLoginPassword","inputEmail","inputUsername","inputPassword","isEmail","email","password","usernameValid","emailValid","passwordValid","loggedInUser","error","loginAccount","userPassword","withCredentials","setItem","Group","Label","account_username","account_password","Account","onChangeAccountUsername","onChangeAccountEmail","onChangeAccountPassword","onSubmit","account_email","account_favourties","loggedUser","inputLoginPassword","inputLoginUserName","match","newAccount","userEmail","status","String","quoteApproved","edit","delete","Profile","logout","getQuotes","deleteAccount","editAccount","approveButton","editQuote","deleteQuote","deleteThisQuote","showEditErrors","handleDeleteAccountClose","handleDeleteQuoteClose","handleEditQuoteClose","saveQuote","handleSelect","signUpDate","quoteIds","unapprovedQuotesCount","deleteAccountModal","deleteQuoteModal","editQuoteModal","activeTab","deletingQuote","isAdmin","quotesAdded","WPMChartConfig","title","text","legend","scaleX","label","scaleY","values","series","AccChartConfig","latestAccScores","chartConfig","forEach","Id","del","reload","editedQuote","removeItem","Badge","selectedTab","Modal","backdrop","keyboard","centered","Header","Title","Body","Footer","Tabs","activeKey","onSelect","Tab","eventKey","quotesComponentsList","EditAccount","onChangeAccountConfirmPassword","onChangeCurrentPassword","checkPassword","passwordsMatch","oldUser","newInput","confirmPassword","newUser","authValid","tempUser","passowrd","newPassword","newConfirmPassowrd","handleClose","approve","approveQuote","noQuotes","Ranking","Leader","BestAcc","LeaderAcc","userList","users","accList","bestAcc","bestWPM","currentUser","Table","striped","bordered","hover","responsive","PrivateRoute","component","rest","render","background","buttonBackground","textColor","buttonColor","Svg","svg","App","stored","useState","isDarkMode","setIsDarkMode","darkTheme","lightTheme","Container","Navbar","collapseOnSelect","expand","bg","sticky","NavbarBrand","NavIcon","Toggle","aria-controls","Nav","path","exact","Quotes","Leaderboard","ApproveQuote","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e62611bc.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  background: ${props => props.theme.colors.cardBackground};\r\n  padding: 24px;\r\n  border-radius: 5px;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100px;\r\n`;","import React, { Component } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Button from 'react-bootstrap/Button';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\n\r\nconst TestInput = styled.input.attrs(props => ({\r\n    type : 'text',\r\n    \r\n}))`\r\n    background: white;\r\n    border-radius: 5px;\r\n    border: 1px solid darkgray;\r\n\r\n    :: disabled\r\n`\r\n\r\nexport default class TypingTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.compare = this.compare.bind(this);\r\n        this.resetTest = this.resetTest.bind(this);\r\n        this.endTest = this.endTest.bind(this);\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.calculateWPM = this.calculateWPM.bind(this);\r\n        this.calculateHighScore = this.calculateHighScore.bind(this);\r\n        this.backspace = this.backspace.bind(this);\r\n        this.escFunction = this.escFunction.bind(this);\r\n        this.debugToggle = this.debugToggle.bind(this);\r\n        this.renderTooltip = this.renderTooltip.bind(this);\r\n        this.newTest = this.newTest.bind(this);\r\n        this.sendHighscores = this.sendHighscores.bind(this);\r\n        this.renderSpinner = this.renderSpinner.bind(this);\r\n        this.increaseLike = this.increaseLike.bind(this);\r\n        this.decreaseLike = this.decreaseLike.bind(this);\r\n        this.updateQuoteScore = this.updateQuoteScore.bind(this);\r\n\r\n        this.state = {\r\n            quote: [],\r\n            //The name of the quote\r\n            quote_Title: '',\r\n            // The text body of the quote\r\n            quote_body : '',\r\n            quote_author : '',\r\n            user_input : '',\r\n            // An array of every word in the quote not currently used but might be useful later\r\n            quote_words: [],\r\n            // An array of every character in the quote including spaces\r\n            char_array: [],\r\n            // String that contains the next character to be typed\r\n            current_quote_char: '',\r\n            // String that holds what the user types if they are correct but if it is not correct it is filled correctly by char_array\r\n            typed_chars: '',\r\n            // string that contains the current work to be typed not currently used but might be useful later\r\n            current_quote_word: '',\r\n            // counter that keeps track of the number of user inputs excluding backspace\r\n            count: 0,\r\n            // counter that keeps track of errors, can be decremented if the user corrects their error\r\n            error_count : 0,\r\n            // a total error counter that does not decrement\r\n            total_error_count : 0,\r\n            // boolean to disable input to the text box and display results when the test is over, false == test not over, true == test over\r\n            input_disabled : false,\r\n            // boolean to display new personal best msg\r\n            HSenabled : false,\r\n            // boolean to display new quote best msg\r\n            QHSenabled : false,\r\n            // String that contains every thing that has been typed or that the user has passed\r\n            quote_left : '',\r\n            // String that contains everything the user has left to type\r\n            quote_right : '',\r\n            // String that contains correct characters that the user has gotten wrong errors the user has typed\r\n            quote_error : '',\r\n            // The quote placeholder for before the test starts is emptied after the test starts\r\n            quote_start : '',\r\n            // error array that conatins the errors the user has typed\r\n            err_arr : '',\r\n            // string that contains the css class of the current character span so it can be change when there is an error or not\r\n            quote_class : 'quote-current',\r\n            // Interval to time the user\r\n            tInterval : '', \r\n            // number that keeps track of the seconds that have passed since the test started\r\n            seconds : 0,\r\n            // The net words per minute\r\n            netWPM : 0,\r\n            resultsVariant : 'success',\r\n            endMsg : 'Well done!',\r\n            // Accuracy %\r\n            accuracy : 0,\r\n            // Highscores\r\n            highestAcc : 0, \r\n            highestWPM : 0,\r\n            quote_score : 0,\r\n            quoteWPM : 0,\r\n            quoteAcc : 0,\r\n            quoteID : 0,\r\n\r\n            upVote : false,\r\n            downVote : false,\r\n            //api url\r\n            apiUrl : '',\r\n            token : '',\r\n\r\n            user : {},\r\n            debug : false\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        let query = '';\r\n        if (this.props.location.state != null) {\r\n            query = this.props.location.state.id\r\n        }\r\n        else {\r\n            query = 'random';\r\n        }\r\n        let APIURL = ''\r\n        // Check if in dev or production environment\r\n        if (process.env.NODE_ENV === 'production') {\r\n            this.setState((state) => ({\r\n                apiUrl : 'https://typingtest.jdoyle.ie',\r\n            }))\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') {\r\n            this.setState((state) => ({\r\n               apiUrl : 'http://localhost:8080',\r\n            }))\r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        // get quote from database and update state\r\n        axios.get(APIURL +'/quotes/'+query)\r\n            .then(response => {\r\n                this.setState((state) => ({ \r\n                    quote_Title : response.data.quoteTitle,\r\n                    quote_body : response.data.quoteBody,\r\n                    char_array : Array.from(response.data.quoteBody),\r\n                    current_quote_char : Array.from(response.data.quoteBody)[0],\r\n                    quote_start : response.data.quoteBody,\r\n                    quote_author : response.data.quoteAuthor,\r\n                    quote_score : response.data.quoteScore,\r\n                    quoteWPM : response.data.highWPMScore,\r\n                    quoteAcc : response.data.highAccScore,\r\n                    quoteID : response.data._id\r\n                }))\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            })\r\n\r\n        //if there is a use logged in get their account info\r\n        if (localStorage.getItem('beepboop')) {\r\n            let token = localStorage.getItem('beepboop')\r\n            this.setState({\r\n                token : token\r\n            })\r\n\r\n            axios.get( APIURL + '/user/profile', { headers : { 'auth-token' : token }})\r\n            .then(res => {\r\n               // console.log(res.data)\r\n               this.setState({\r\n                   user : res.data\r\n               })\r\n            })\r\n        }\r\n        // add eventListener that checks if the esc key has been pressed on every keydown\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n        \r\n    }\r\n\r\n\r\n     \r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    // startTimer function that is called every second by setInterval in onInputChance() \r\n    // increments seconds by 1 and sets the state.\r\n    startTimer () {\r\n        let seconds = this.state.seconds + 1;\r\n        this.setState((state) => ({\r\n            seconds : seconds,\r\n        }))\r\n    }\r\n\r\n    // escFunction that handles when the escape key is pressed\r\n    escFunction(event){\r\n        if(event.keyCode === 27) {\r\n            \r\n          this.resetTest();\r\n        }\r\n    }\r\n\r\n    // Function that toggles the debug output\r\n    debugToggle() {\r\n        this.setState((state) => ({\r\n            debug : !state.debug\r\n        })) \r\n    }\r\n\r\n    // Called whenever the user input is changed\r\n    // Sets the state of user_input to the user's input and calls compare with the current word from state.\r\n    onInputChange (e) {\r\n        // edge case if user ends test with error to just end the test if the total number of entries == the quote len.\r\n        if (this.state.count === this.state.char_array.length) {\r\n            this.endTest();\r\n            return\r\n        }\r\n\r\n        // if the key pressed is not backspace and is in the general keys location 0\r\n        if (e.keyCode !== 8 && e.location === 0) {\r\n\r\n            // if the user has started typing yet\r\n            if (this.state.count === 0) {\r\n                //Start timer\r\n                let interval = setInterval(this.startTimer, 1000)\r\n                this.setState ((state) => ({\r\n                    quote_start : '',\r\n                    seconds : 0,\r\n                    tInterval : interval      \r\n                }))\r\n            }\r\n            // update the current user_input state and call compare function\r\n            this.setState({\r\n                user_input : e.key\r\n            }, () => this.compare(this.state.current_quote_char))\r\n        }\r\n        // Backspace conditions for changing the current char, left and right spans     \r\n        else if (e.keyCode === 8 && this.state.err_arr !== '' && this.state.error_count  > 0) {\r\n            // if there are errors and the user presses backspace reduce the error count\r\n            if (this.state.error_count > 0) {\r\n                this.setState ((state) => ({\r\n                    error_count : state.error_count -1,\r\n                }), () => this.backspace())      \r\n            }\r\n            else {\r\n                this.backspace();\r\n            }\r\n        }\r\n    }\r\n\r\n    // backspace function that handles when the user enters a backspace into the input box\r\n    backspace () {\r\n        this.setState ((state) => ({\r\n            err_arr : state.err_arr.slice(0, state.err_arr.length-1),\r\n            count : state.count - 1,\r\n            current_quote_char : state.char_array[state.count -1],\r\n            quote_left : state.typed_chars.slice(0, state.typed_chars.length - state.err_arr.length),\r\n            typed_chars : state.typed_chars.slice(0, -1),\r\n            quote_right :  state.char_array.slice(state.count , state.char_array.length)\r\n        }))      \r\n    }\r\n\r\n    // Called in onInputChange\r\n    // Takes the current word to be typed from state\r\n    // Compares it to the user input\r\n    // Checks the if the word count is equal to the length of the quote_words array; if it is the test is over and endTest() is called.\r\n    // If it is not the state of the current word is changed, the count is incremented and the user_input is set back to empty\r\n    compare (current_char) {\r\n        if (current_char === this.state.user_input) {\r\n            //console.log(\"match\");\r\n            if (this.state.count >= this.state.char_array.length -1) {\r\n                this.setState((state) => ({\r\n                    typed_chars: state.typed_chars + state.user_input\r\n                }), () => this.endTest())\r\n            }\r\n            else {\r\n                this.setState((state) => ({\r\n                    current_quote_char : state.char_array[state.count + 1],\r\n                    count: state.count + 1,\r\n                    typed_chars: state.typed_chars + state.user_input,\r\n                    quote_right : state.char_array.slice(state.count+2, state.char_array.length),\r\n                    user_input : '',\r\n                    quote_left : state.typed_chars + state.user_input,\r\n                    err_arr : '',\r\n                    quote_class : 'quote-current',\r\n                }));  \r\n            }\r\n            document.getElementById('input').value = '';\r\n        }\r\n        else {\r\n            this.setState((state) => ({\r\n                err_arr : state.err_arr + state.char_array[state.count],\r\n                current_quote_char : state.char_array[state.count + 1],\r\n                count: state.count + 1,\r\n                quote_class : 'quote-warning',\r\n                typed_chars : state.typed_chars + state.char_array[state.count],\r\n                quote_error :  state.err_arr,\r\n                quote_right : state.char_array.slice(state.count +2, state.char_array.length),\r\n                error_count : state.error_count + 1,\r\n                total_error_count : state.total_error_count + 1,\r\n            }))\r\n        }\r\n    }\r\n\r\n    // Called by newTestBtn \r\n    // queries the db for a random quote and updates the state\r\n    // then calls resettest to reset other counters and timers\r\n    newTest () {\r\n        // get quote from database and update state\r\n        this.setState({\r\n            quote_Title : '',\r\n            quote_author : '',\r\n            quote_body : '',\r\n            char_array : []\r\n        } )\r\n        axios.get(this.state.apiUrl + '/quotes/random')\r\n            .then(response => {\r\n                this.setState((state) => ({ \r\n                    quote_Title : response.data.quoteTitle,\r\n                    quote_body : response.data.quoteBody,\r\n                    char_array : Array.from(response.data.quoteBody),\r\n                    current_quote_char : Array.from(response.data.quoteBody)[0],\r\n                    quote_start : response.data.quoteBody,\r\n                    quote_author : response.data.quoteAuthor,\r\n                    quoteWPM : response.data.highWPMScore,\r\n                    quoteAcc : response.data.highAccScore,\r\n                    quoteID : response.data._id\r\n                }))\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            })\r\n        this.resetTest()\r\n    }\r\n\r\n    //Called whenever the reset button is pressed\r\n    //Resets the test by resetting the state to default.\r\n    resetTest () {\r\n        let body = this.state.quote_body;\r\n        let words = [];\r\n        let chars = [];\r\n        words = body.split(\" \");\r\n        chars = Array.from(body);\r\n        clearInterval(this.state.tInterval);\r\n        document.getElementById('input').value = '';\r\n        document.getElementById('input').focus();\r\n\r\n        this.setState((state) => ({\r\n            quote_Title: state.quote_Title,\r\n            quote_body : state.quote_body, \r\n            quote_words : words,\r\n            current_quote_word : words[0],\r\n            char_array : chars,\r\n            quote_start : state.quote_body,\r\n            current_quote_char : state.char_array[0],\r\n            err_arr : '',\r\n            user_input : '',\r\n            quote_left : '',\r\n            quote_right : '',\r\n            typed_chars : '',\r\n            error_count : 0,\r\n            quote_class : 'quote_current',\r\n            quote_error : '',\r\n            total_error_count : 0,\r\n            count: 0,\r\n            seconds : 0,\r\n            input_disabled : false,\r\n            HSenabled : false,\r\n            QHSenabled : false,\r\n            upVote : false,\r\n            downVote : false,\r\n            quote_score : 0\r\n        }))\r\n    }\r\n\r\n    // Called when the end of the test is reached in compare()\r\n    // Calculates word per minute\r\n    endTest () {\r\n        clearInterval(this.state.tInterval);\r\n        let correctChars = this.state.char_array.length - this.state.total_error_count;\r\n\r\n        let lastWPM = this.state.netWPM;\r\n        let lastAccuracy = this.state.accuracy;\r\n        \r\n        let netWPM = Math.ceil(this.calculateWPM());\r\n\r\n        let goodEndMsg = 'Well Done!';\r\n        let avgEndMsg = 'Not Bad!';\r\n        let badEndMsg = 'Yikes! You can do better';\r\n        let endMsg = this.state.endMsg;\r\n\r\n        // Conditional results statements\r\n        let variant = this.state.resultsVariant;\r\n        if ( netWPM > 41) {\r\n            variant = 'success';\r\n            endMsg = goodEndMsg;\r\n        }\r\n        else if (netWPM <= 41 && netWPM >= 25) {\r\n            variant = 'warning';\r\n            endMsg = avgEndMsg;\r\n\r\n        } else if ( netWPM < 25 ) {\r\n            variant = 'danger';\r\n            endMsg = badEndMsg;\r\n        }\r\n\r\n\r\n\r\n        document.activeElement.blur();\r\n        document.getElementById('input').focus();\r\n        this.setState((state) => ({\r\n            error_count : state.error_count,\r\n            accuracy : Math.ceil((correctChars / state.char_array.length)*100),\r\n            input_disabled : true,\r\n            resultsVariant : variant,\r\n            endMsg : endMsg,\r\n            current_quote_char : '',\r\n            quote_left : state.quote_body,\r\n            seconds : 0,\r\n            err_arr : '',\r\n            netWPM : netWPM,\r\n        }), () => this.calculateHighScore(lastAccuracy, lastWPM))\r\n    }\r\n\r\n    // Function that updates the user's high score is the latest score was better than the last replace the scores\r\n    calculateHighScore (lastAccuracy, lastWPM) {\r\n        let latestAccuracy = this.state.accuracy;\r\n        let latestWPM = this.state.netWPM;\r\n        let highestWPM = 0;\r\n        let highestAcc = 0;\r\n\r\n        //console.log(lastWPM, this.state.quoteWPM)\r\n        \r\n\r\n        if (latestWPM > lastWPM) {\r\n            this.setState({\r\n                highestAcc : latestAccuracy,\r\n                highestWPM : latestWPM,\r\n                \r\n            })\r\n\r\n            highestWPM = latestWPM;\r\n            highestAcc = latestAccuracy\r\n            if (this.state.token !== '') {\r\n\r\n                // Check if score was better than user's personal best and update accordingly\r\n                if(highestWPM > this.state.user.personalBestWPM ) {\r\n                    console.log('you were better')\r\n                    this.setState(state => ({\r\n                        HSenabled : true,\r\n                        user : {\r\n                            ...this.state.user,\r\n                            \r\n                            personalBestAcc : highestAcc,\r\n                            personalBestWPM : highestWPM,\r\n                        }\r\n                    }), () => this.sendHighscores(this.state.user))\r\n                }\r\n\r\n                // check if score was better than the best score for that quote and update accordingly\r\n                if (latestWPM >= this.state.quoteWPM) {\r\n                    //console.log('calling')\r\n                    \r\n                    this.setState({\r\n                        QHSenabled : true,\r\n                        quoteWPM : highestWPM,\r\n                        quoteAcc : highestAcc\r\n                    }, () => this.sendQuoteScores())\r\n                }\r\n                \r\n            }\r\n\r\n        }\r\n\r\n        if (this.state.token !== '') {\r\n            \r\n            // Update user's latest scores array\r\n            const update = {\r\n                _id : this.state.user._id,\r\n                wpm : latestWPM,\r\n                acc : latestAccuracy\r\n            } \r\n            console.log(update)\r\n            axios.post(this.state.apiUrl + '/user/updateScores', update , { headers : {'auth-token' : this.state.token}})\r\n            .then(res => {\r\n                console.log(res.data.latestWPMScores)\r\n            })\r\n            .catch(err => err)\r\n        }\r\n    \r\n    }\r\n\r\n    sendHighscores(user) {\r\n        console.log(user)\r\n        axios.post(this.state.apiUrl + '/user/updateHS', user , { headers : {'auth-token' : this.state.token}})\r\n        .then(res =>\r\n            console.log(res.data)    \r\n        ) .catch(err => err)\r\n    }\r\n\r\n    sendQuoteScores() {\r\n        const scores = {\r\n            quoteWPM : this.state.quoteWPM,\r\n            quoteAcc : this.state.quoteAcc,\r\n            _id : this.state.quoteID\r\n        }\r\n\r\n        axios.post(this.state.apiUrl + '/quotes/updateHS', scores, {headers : {'auth-token' : this.state.token}})\r\n       .catch(err => err)\r\n    }\r\n\r\n\r\n\r\n    // calculateWPM function calculates the user's WPM and returns the netWPM\r\n    calculateWPM () {\r\n        let seconds = this.state.seconds;\r\n        let minutes = seconds/60;\r\n        let errors = this.state.error_count;\r\n        let typedEntries = this.state.typed_chars.length;\r\n        let grossWPM = (typedEntries/5) / minutes;\r\n        let netWPM = grossWPM - (errors/minutes);\r\n        // Now do it all in one line for Duggan\r\n        //netWPM = ((this.state.typed_chars.length/5) / (this.state.seconds/60)) - (this.state.error_count/(this.state.seconds/60))\r\n        return netWPM\r\n    }\r\n\r\n    // function to render button tooltips\r\n    renderTooltip(props) {\r\n        if (props.popper.state != null) {\r\n            //console.log(props.popper.state.elements.reference)\r\n\r\n            if (props.popper.state.elements.reference.id === 'restartBtn') {\r\n                return (\r\n                    <Tooltip id=\"button-tooltip\" {...props}>\r\n                        Restart Test\r\n                    </Tooltip>\r\n                );\r\n            } else if (props.popper.state.elements.reference.id === 'newTestBtn') {\r\n                return (\r\n                    <Tooltip id=\"button-tooltip\" {...props}>\r\n                        Start New Test\r\n                    </Tooltip>\r\n                );\r\n            } else if (props.popper.state.elements.reference.id === 'debugBtn') {\r\n                return (\r\n                    <Tooltip >\r\n                        Show debug Info\r\n                    </Tooltip>\r\n                )\r\n            } else if (props.popper.state.elements.reference.id === 'dislikeOverlay') {\r\n                return (\r\n                    <Tooltip id=\"button-tooltip\" {...props}>\r\n                        Like Quote\r\n                    </Tooltip>\r\n                )\r\n            } else if (props.popper.state.elements.reference.id === 'likeOverlay') {\r\n                return (\r\n                    <Tooltip id=\"buton-tooltip\" {...props}>\r\n                        Dislike Quote\r\n                    </Tooltip>\r\n                )\r\n            }\r\n        }\r\n        return  (\r\n            <Tooltip {...props}>\r\n                test\r\n            </Tooltip>\r\n        )     \r\n    }\r\n\r\n    renderSpinner() {\r\n        if (!this.state.quote_Title) {\r\n            return <Spinner animation=\"border\" />\r\n        } else {\r\n            return <></>\r\n        }\r\n    }\r\n\r\n    increaseLike() {\r\n        \r\n        if (!this.state.upVote && !this.state.downVote) {\r\n            //if only upvote has been clicked not downvote\r\n            // increase the score\r\n            let likeDecrease = this.state.quote_score + 1;\r\n            this.setState({\r\n                quote_score : likeDecrease,\r\n                upVote : true,\r\n                downVote : false\r\n            }, () => this.updateQuoteScore())\r\n        } else if (!this.state.upVote && this.state.downVote) {\r\n            // if down vote has already been clicked increase the score by 2\r\n            // to account for undoing the down vote\r\n\r\n            let likeDecrease = this.state.quote_score + 2;\r\n            this.setState({\r\n                quote_score : likeDecrease,\r\n                upVote : true,\r\n                downVote : false\r\n\r\n            }, () => this.updateQuoteScore())\r\n        } else if (this.state.upVote) {\r\n            // unlike\r\n            let likes = this.state.quote_score -1;\r\n            this.setState({\r\n                quote_score : likes,\r\n                upVote : false,\r\n            }, () => this.updateQuoteScore())\r\n        }\r\n    }\r\n\r\n    decreaseLike() {\r\n        if (!this.state.downVote && !this.state.upVote) {\r\n            // if only downvote has been clicked not upvote\r\n            // decrese the score\r\n           let likeDecrease = this.state.quote_score - 1;\r\n\r\n            this.setState({\r\n                quote_score : likeDecrease,\r\n                downVote : true,\r\n                upVote : false,\r\n            }, () => this.updateQuoteScore()) \r\n\r\n        } else if (!this.state.downVote && this.state.upVote) {\r\n            // upvote has already been clicked decrease by 2\r\n            // to account for undoing the upvote\r\n            let likeDecrease = this.state.quote_score - 2;\r\n\r\n            this.setState({\r\n                quote_score : likeDecrease,\r\n                downVote : true,\r\n                upVote : false,\r\n            }, () => this.updateQuoteScore()) \r\n\r\n        } else if (this.state.downVote) {\r\n            // undo a down vote\r\n            let likes = this.state.quote_score + 1;\r\n            this.setState({\r\n                quote_score : likes,\r\n                downVote: false\r\n            }, () => this.updateQuoteScore())\r\n        }\r\n    }\r\n\r\n    updateQuoteScore() {\r\n        \r\n        const score = {\r\n            _id : this.state.quoteID,\r\n            quote_score : this.state.quote_score,\r\n        }\r\n        axios.post(this.state.apiUrl + '/quotes/updateRating', score)\r\n        .catch(err => err)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{height : window.innerHeight}}>\r\n                <Card>\r\n                        <Row>\r\n                            <Col sm={8}>\r\n                                <h4>{this.state.quote_Title} - {this.state.quote_author}</h4>\r\n                                <Alert variant=\"secondary\">   \r\n                                    <span>{this.renderSpinner()}</span>\r\n                                    <span className=\"quote-left\">{this.state.quote_left}</span>\r\n                                    <span className=\"quote-error\">{this.state.err_arr}</span>\r\n                                    <span className={this.state.quote_class}>{this.state.current_quote_char}</span>\r\n                                    <span className=\"quote-start\">{this.state.quote_start.slice(1)}</span>\r\n                                    <span className=\"quote-right\">{this.state.quote_right}</span>\r\n                                    <hr/>\r\n                                    <span>Best Score: {this.state.quoteWPM}WPM {this.state.quoteAcc}% Accuracy</span>\r\n                                    <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={this.renderTooltip}>\r\n                                        <span style={{float : \"right\"}} onClick={this.decreaseLike} id=\"likeOverlay\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-hand-thumbs-down\" viewBox=\"0 0 16 16\">\r\n                                                <path d=\"M8.864 15.674c-.956.24-1.843-.484-1.908-1.42-.072-1.05-.23-2.015-.428-2.59-.125-.36-.479-1.012-1.04-1.638-.557-.624-1.282-1.179-2.131-1.41C2.685 8.432 2 7.85 2 7V3c0-.845.682-1.464 1.448-1.546 1.07-.113 1.564-.415 2.068-.723l.048-.029c.272-.166.578-.349.97-.484C6.931.08 7.395 0 8 0h3.5c.937 0 1.599.478 1.934 1.064.164.287.254.607.254.913 0 .152-.023.312-.077.464.201.262.38.577.488.9.11.33.172.762.004 1.15.069.13.12.268.159.403.077.27.113.567.113.856 0 .289-.036.586-.113.856-.035.12-.08.244-.138.363.394.571.418 1.2.234 1.733-.206.592-.682 1.1-1.2 1.272-.847.283-1.803.276-2.516.211a9.877 9.877 0 0 1-.443-.05 9.364 9.364 0 0 1-.062 4.51c-.138.508-.55.848-1.012.964l-.261.065zM11.5 1H8c-.51 0-.863.068-1.14.163-.281.097-.506.229-.776.393l-.04.025c-.555.338-1.198.73-2.49.868-.333.035-.554.29-.554.55V7c0 .255.226.543.62.65 1.095.3 1.977.997 2.614 1.709.635.71 1.064 1.475 1.238 1.977.243.7.407 1.768.482 2.85.025.362.36.595.667.518l.262-.065c.16-.04.258-.144.288-.255a8.34 8.34 0 0 0-.145-4.726.5.5 0 0 1 .595-.643h.003l.014.004.058.013a8.912 8.912 0 0 0 1.036.157c.663.06 1.457.054 2.11-.163.175-.059.45-.301.57-.651.107-.308.087-.67-.266-1.021L12.793 7l.353-.354c.043-.042.105-.14.154-.315.048-.167.075-.37.075-.581 0-.211-.027-.414-.075-.581-.05-.174-.111-.273-.154-.315l-.353-.354.353-.354c.047-.047.109-.176.005-.488a2.224 2.224 0 0 0-.505-.804l-.353-.354.353-.354c.006-.005.041-.05.041-.17a.866.866 0 0 0-.121-.415C12.4 1.272 12.063 1 11.5 1z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </OverlayTrigger>\r\n                                    <span style={{float : \"right\", marginLeft : 5, marginRight : 5}}> {this.state.quote_score} </span>\r\n                                    <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={this.renderTooltip}>\r\n                                        <span style={{float : \"right\"}} onClick={this.increaseLike} id=\"dislikeOverlay\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-hand-thumbs-up\" viewBox=\"0 0 16 16\">\r\n                                                <path d=\"M8.864.046C7.908-.193 7.02.53 6.956 1.466c-.072 1.051-.23 2.016-.428 2.59-.125.36-.479 1.013-1.04 1.639-.557.623-1.282 1.178-2.131 1.41C2.685 7.288 2 7.87 2 8.72v4.001c0 .845.682 1.464 1.448 1.545 1.07.114 1.564.415 2.068.723l.048.03c.272.165.578.348.97.484.397.136.861.217 1.466.217h3.5c.937 0 1.599-.477 1.934-1.064a1.86 1.86 0 0 0 .254-.912c0-.152-.023-.312-.077-.464.201-.263.38-.578.488-.901.11-.33.172-.762.004-1.149.069-.13.12-.269.159-.403.077-.27.113-.568.113-.857 0-.288-.036-.585-.113-.856a2.144 2.144 0 0 0-.138-.362 1.9 1.9 0 0 0 .234-1.734c-.206-.592-.682-1.1-1.2-1.272-.847-.282-1.803-.276-2.516-.211a9.84 9.84 0 0 0-.443.05 9.365 9.365 0 0 0-.062-4.509A1.38 1.38 0 0 0 9.125.111L8.864.046zM11.5 14.721H8c-.51 0-.863-.069-1.14-.164-.281-.097-.506-.228-.776-.393l-.04-.024c-.555-.339-1.198-.731-2.49-.868-.333-.036-.554-.29-.554-.55V8.72c0-.254.226-.543.62-.65 1.095-.3 1.977-.996 2.614-1.708.635-.71 1.064-1.475 1.238-1.978.243-.7.407-1.768.482-2.85.025-.362.36-.594.667-.518l.262.066c.16.04.258.143.288.255a8.34 8.34 0 0 1-.145 4.725.5.5 0 0 0 .595.644l.003-.001.014-.003.058-.014a8.908 8.908 0 0 1 1.036-.157c.663-.06 1.457-.054 2.11.164.175.058.45.3.57.65.107.308.087.67-.266 1.022l-.353.353.353.354c.043.043.105.141.154.315.048.167.075.37.075.581 0 .212-.027.414-.075.582-.05.174-.111.272-.154.315l-.353.353.353.354c.047.047.109.177.005.488a2.224 2.224 0 0 1-.505.805l-.353.353.353.354c.006.005.041.05.041.17a.866.866 0 0 1-.121.416c-.165.288-.503.56-1.066.56z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                        \r\n                                    </OverlayTrigger>\r\n                                    \r\n                                    \r\n                                    \r\n                                </Alert>    \r\n                            </Col>\r\n                            \r\n                            <Col sm={4}>\r\n                                <h4>High Scores</h4>\r\n                                <Alert variant=\"info\">\r\n                                    <span>\r\n                                        WPM : {this.state.highestWPM} <br></br>\r\n                                        Accuracy : {this.state.highestAcc}% <br></br>\r\n                                    </span>       \r\n                                </Alert>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h5>Current Character: {this.state.current_quote_char}</h5>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col sm={8}>\r\n                                <TestInput  onKeyDown={this.onInputChange} id='input' disabled={this.state.input_disabled}/>\r\n                                <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={this.renderTooltip} name=\"restartOverlay\">\r\n                                    <Button onClick={this.resetTest} style={{marginLeft: 10}} variant=\"secondary\" id=\"restartBtn\">\r\n                                        <svg className=\"bi bi-arrow-repeat\" width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fillRule=\"evenodd\" d=\"M2.854 7.146a.5.5 0 00-.708 0l-2 2a.5.5 0 10.708.708L2.5 8.207l1.646 1.647a.5.5 0 00.708-.708l-2-2zm13-1a.5.5 0 00-.708 0L13.5 7.793l-1.646-1.647a.5.5 0 00-.708.708l2 2a.5.5 0 00.708 0l2-2a.5.5 0 000-.708z\" clipRule=\"evenodd\"/>\r\n                                            <path fillRule=\"evenodd\" d=\"M8 3a4.995 4.995 0 00-4.192 2.273.5.5 0 01-.837-.546A6 6 0 0114 8a.5.5 0 01-1.001 0 5 5 0 00-5-5zM2.5 7.5A.5.5 0 013 8a5 5 0 009.192 2.727.5.5 0 11.837.546A6 6 0 012 8a.5.5 0 01.501-.5z\" clipRule=\"evenodd\"/>\r\n                                        </svg>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={this.renderTooltip}>\r\n                                    <Button onClick={this.newTest} variant=\"info\" style={{marginLeft : 10}} id=\"newTestBtn\" name=\"newTestBtn\">\r\n                                        <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" className=\"bi bi-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fillRule=\"evenodd\" d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\"/>\r\n                                            <path fillRule=\"evenodd\" d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\"/>\r\n                                        </svg>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                                \r\n                            </Col>\r\n                            <Col sm={4}>\r\n                                <OverlayTrigger placement=\"left\" delay={{ show: 250, hide: 400 }} overlay={this.renderTooltip}>\r\n                                    <Button onClick={this.debugToggle} variant=\"outline-warning\" style={{float : \"right\"}} id=\"debugBtn\" name=\"debugBtn\">\r\n                                      \r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-bug\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M4.355.522a.5.5 0 0 1 .623.333l.291.956A4.979 4.979 0 0 1 8 1c1.007 0 1.946.298 2.731.811l.29-.956a.5.5 0 1 1 .957.29l-.41 1.352A4.985 4.985 0 0 1 13 6h.5a.5.5 0 0 0 .5-.5V5a.5.5 0 0 1 1 0v.5A1.5 1.5 0 0 1 13.5 7H13v1h1.5a.5.5 0 0 1 0 1H13v1h.5a1.5 1.5 0 0 1 1.5 1.5v.5a.5.5 0 1 1-1 0v-.5a.5.5 0 0 0-.5-.5H13a5 5 0 0 1-10 0h-.5a.5.5 0 0 0-.5.5v.5a.5.5 0 1 1-1 0v-.5A1.5 1.5 0 0 1 2.5 10H3V9H1.5a.5.5 0 0 1 0-1H3V7h-.5A1.5 1.5 0 0 1 1 5.5V5a.5.5 0 0 1 1 0v.5a.5.5 0 0 0 .5.5H3c0-1.364.547-2.601 1.432-3.503l-.41-1.352a.5.5 0 0 1 .333-.623zM4 7v4a4 4 0 0 0 3.5 3.97V7H4zm4.5 0v7.97A4 4 0 0 0 12 11V7H8.5zM12 6a3.989 3.989 0 0 0-1.334-2.982A3.983 3.983 0 0 0 8 2a3.983 3.983 0 0 0-2.667 1.018A3.989 3.989 0 0 0 4 6h8z\"/>\r\n                                        </svg>    \r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                            </Col>\r\n                        </Row><br></br>\r\n                        \r\n                        <Row> \r\n                            <Col sm={8}>\r\n                                <Collapse in={this.state.HSenabled}>\r\n                                    <div>\r\n                                        <Alert variant='success'>\r\n                                            New Personal Best WPM Score! \r\n                                        </Alert>\r\n                                    </div>  \r\n                                </Collapse>\r\n                                <Collapse in={this.state.QHSenabled}>\r\n                                    <div>\r\n                                       <Alert variant='success'>\r\n                                            New Quote High Score!\r\n                                        </Alert> \r\n                                    </div>\r\n                                </Collapse>\r\n                                <Collapse in={this.state.input_disabled}>\r\n                                    <div id=\"results\">\r\n                                        <Alert variant={this.state.resultsVariant}>\r\n                                            <Alert.Heading>{this.state.endMsg}</Alert.Heading>\r\n                                                <p>\r\n                                                    Here are your results:<br></br>\r\n                                                    WPM : {this.state.netWPM} <br></br>\r\n                                                    Accuracy : {this.state.accuracy}% <br></br>\r\n                                                    Errors : {this.state.total_error_count}<br></br>\r\n                                                    Corrected Errors : {this.state.error_count}\r\n                                                </p>\r\n                                        </Alert>\r\n                                    </div>          \r\n                                </Collapse>\r\n                            </Col>\r\n                            <Col sm={4}>\r\n                                <Collapse in={this.state.debug}>\r\n                                    <div>\r\n                                        <Alert variant=\"warning\">\r\n                                            <Alert.Heading>Debug</Alert.Heading>\r\n                                            <p>\r\n                                                Error array : {this.state.err_arr}<br></br>\r\n                                                quote length : {this.state.char_array.length}<br></br>\r\n                                                Input count : {this.state.count}<br></br>\r\n                                                Error Count : {this.state.error_count}<br></br>\r\n                                                Total Error Count : {this.state.total_error_count}<br></br>\r\n                                                Previous character : {this.state.char_array[this.state.count-1]}<br></br>\r\n                                                Current character : {this.state.char_array[this.state.count]}<br></br>\r\n                                                Next character : {this.state.char_array[this.state.count+1]}<br></br> \r\n                                                Quote left : {this.state.quote_left}<br></br>\r\n                                                Quote green : {this.state.current_quote_char}<br></br>\r\n                                                Quote right : {this.state.quote_right}<br></br>\r\n                                                Quote error : {this.state.quote_error}\r\n                                            </p>\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Collapse>      \r\n                            </Col>\r\n                        </Row> \r\n                </Card>    \r\n               \r\n            </div>  \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\"\r\nimport Card from \"./Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport axios from \"axios\";\r\n\r\nexport default class CreateQuote extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.onChangeQuoteTitle = this.onChangeQuoteTitle.bind(this);\r\n        this.onChangeQuoteBody = this.onChangeQuoteBody.bind(this);\r\n        this.onChangeQuoteAuthor = this.onChangeQuoteAuthor.bind(this);\r\n\r\n        this.validateField = this.validateField.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n\r\n        this.addQuote = this.addQuote.bind(this);\r\n\r\n        this.state = {\r\n            // validation\r\n            loggedIn : false,\r\n            quoteTitleValid : false,\r\n            quoteBodyValid : false,\r\n            quoteAuthorValid : false,\r\n            formValid : false, \r\n            formErrors : {quoteTitle: '', quoteBody : '', quoteAuthor : ''},\r\n\r\n            formValidAndUser : false,\r\n\r\n            // user\r\n            userName : '',\r\n            id : '',\r\n\r\n            // Quote state\r\n            quoteTitle : '',\r\n            quoteBody : '',\r\n            quoteAuthor : ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        if (localStorage.getItem('beepboop')) {\r\n            this.checkLogin()\r\n\r\n            let token = localStorage.getItem('beepboop')\r\n             let APIURL = ''\r\n            if (process.env.NODE_ENV === 'production') {\r\n                APIURL = 'https://typingtest.jdoyle.ie'\r\n            } else if (process.env.NODE_ENV === 'development') { \r\n                APIURL = 'http://localhost:8080'\r\n            }\r\n            axios.get(APIURL + '/user/profile',{ headers : { 'auth-token' : token}}  )\r\n            .then( res => {\r\n                console.log(this.state)\r\n                if (res.data) {\r\n                    this.setState({\r\n                        userName : res.data.userName,\r\n                        id : res.data._id\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    addQuote(e) {\r\n        e.preventDefault();\r\n\r\n        const quote = {\r\n            quoteTitle : this.state.quoteTitle,\r\n            quoteBody : this.state.quoteBody,\r\n            quoteAuthor : this.state.quoteAuthor,\r\n            quoteUser : this.state.userName\r\n        }\r\n        //console.log(quote)\r\n        let token = localStorage.getItem('beepboop');\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        \r\n        axios.post(APIURL + '/quotes/add', quote, { headers : { 'auth-token' : token}})\r\n        .then(res => {\r\n\r\n            const reqObj = {\r\n                userId : this.state.id,\r\n                quoteId : res.data\r\n            }\r\n            axios.post(APIURL + '/user/addQuote', reqObj, {headers : {'auth-token' : token}})\r\n\r\n            this.props.history.push({\r\n                pathname : '/profile' \r\n                \r\n            })\r\n        }).catch (err => err)\r\n        \r\n    }\r\n\r\n    // Check if user is logged in\r\n    checkLogin() {\r\n        this.setState({\r\n            loggedIn : true,\r\n        })\r\n    }\r\n\r\n    onChangeQuoteTitle(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            quoteTitle : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.quoteTitle)\r\n        })\r\n    }\r\n\r\n    onChangeQuoteBody(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            quoteBody : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.quoteBody)\r\n        })\r\n    }\r\n\r\n    onChangeQuoteAuthor(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            quoteAuthor : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.quoteAuthor)\r\n        })\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let quoteTitleValid = this.state.quoteTitleValid;\r\n        let quoteBodyValid = this.state.quoteBodyValid;\r\n        let quoteAuthorValid = this.state.quoteAuthorValid;\r\n\r\n        switch(fieldName) {\r\n            \r\n            case 'quoteTitle':\r\n                \r\n                quoteTitleValid = value.length >= 0 && value.length < 40;\r\n                fieldValidateErrors.quoteTitle = quoteTitleValid ? '' : ' must not be empty or greater than 20 characters.';\r\n                break;\r\n            \r\n            case 'quoteBody':\r\n                \r\n                quoteBodyValid = value.length >= 200  && value.length <= 350 ;\r\n                fieldValidateErrors.quoteBody = quoteBodyValid ? '' : ' is too short';\r\n                \r\n                break;\r\n\r\n            case 'quoteAuthor':\r\n\r\n                if (value.length === 0){\r\n                    quoteAuthorValid = true;\r\n                    this.setState((state) => ({\r\n                        quoteAuthor : state.username\r\n                    }), () => {fieldValidateErrors.quoteAuthor = quoteAuthorValid ? '' : ''})\r\n                    break;\r\n                }\r\n                else if (value.length <= 10) {\r\n                    quoteAuthorValid = true\r\n                    fieldValidateErrors.quoteAuthor = quoteAuthorValid ? '' : ' is short long';\r\n                    break;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({\r\n            formErrors : fieldValidateErrors, \r\n            quoteTitleValid : quoteTitleValid, \r\n            quoteBodyValid : quoteBodyValid,\r\n            quoteAuthorValid : quoteAuthorValid\r\n        },    \r\n            this.validateForm);\r\n        \r\n    }\r\n\r\n    // ValidaateForm function sets the current state of the fields of the form.\r\n    validateForm() {\r\n         console.log('quotetitle ' + this.state.quoteTitleValid);\r\n         console.log('quoteauth ' + this.state.quoteAuthorValid);\r\n         console.log('quoteboy ' + this.state.quoteBodyValid)\r\n        this.setState({\r\n            formValid:  this.state.quoteTitleValid &&\r\n                        this.state.quoteBodyValid && \r\n                        this.state.quoteAuthorValid,\r\n            formValidAndUser : this.state.formValid && this.state.loggedIn\r\n                    });\r\n\r\n        \r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{height : window.screen.availHeight}}>\r\n               <Card>\r\n                    <Row>  \r\n                        <Col>\r\n                            \r\n                        <h4>Create Quote</h4>\r\n                        <br />\r\n                            <Alert variant=\"secondary\">\r\n                                <Form>\r\n                                    \r\n                                    <Alert.Heading>\r\n                                            <Row>\r\n                                                <Col m=\"auto\">\r\n                                                    <Form.Control\r\n                                                        value={this.state.quoteTitle}\r\n                                                        type='text'\r\n                                                        size='lg'\r\n                                                        onChange={this.onChangeQuoteTitle}\r\n                                                        name = 'quoteTitle'\r\n                                                        placeholder = \"Quote Title\"\r\n                                                        isValid={!this.state.quoteTitleValid}\r\n                                                        isInvalid={!this.state.quoteTitleValid}\r\n                                                    />\r\n                                                    \r\n                                                </Col>\r\n                                                <Col xs=\"auto\"> -</Col>\r\n                                                <Col xs=\"auto\">\r\n\r\n                                                    <Form.Control\r\n                                                            value={this.state.quoteAuthor}\r\n                                                            type='text'\r\n                                                            // style={{width : String(this.state.quoteAuthor.length)}}\r\n                                                            size='lg'\r\n                                                            onChange={this.onChangeQuoteAuthor}\r\n                                                            name = 'quoteAuthor'\r\n                                                            placeholder = 'Quote Author'\r\n                                                            isValid={!this.state.quoteAuthorValid}\r\n                                                            isInvalid={!this.state.quoteAuthorValid}\r\n                                                    />\r\n\r\n                                                    \r\n                                                </Col>\r\n                                            </Row>\r\n                                    </Alert.Heading>\r\n                                    <Form.Text className=\"text-muted\" style={{ float : \"left\"}}>\r\n                                        Quote titles must be shorter than 40 characters.\r\n                                    </Form.Text>\r\n                                    <Form.Text className=\"text-muted\" style={{float : \"right\"}}>\r\n                                        Add the original Author of the Quote.\r\n                                    </Form.Text>\r\n\r\n                                    <Form.Control\r\n                                        value={this.state.quoteBody}\r\n                                        id = \"quoteBody\"\r\n                                        name = \"quoteBody\"\r\n                                        as=\"textarea\" rows = \"4\"\r\n                                        onChange={this.onChangeQuoteBody}\r\n                                        placeholder = 'Main Body of Quote'\r\n                                        isValid={!this.state.quoteBodyValid}\r\n                                        isInvalid={!this.state.quoteBodyValid}\r\n                                    />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    Main text of the Quote must be between 200 and 350 characters.\r\n                                    </Form.Text>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                All Quotes will be approved by an admin before they can be used for testing. \r\n                            </Form.Text>\r\n\r\n                                </Form>\r\n                                \r\n                            </Alert>\r\n                            \r\n                            \r\n                            <Button type=\"submit\" variant=\"info\" onClick={this.addQuote} disabled={!this.state.formValidAndUser}>\r\n                                    Create Quote\r\n                            </Button>\r\n                            <Form.Text className=\"text-muted\">\r\n                                You must be logged in to add a Quote.\r\n                            </Form.Text>\r\n                   \r\n                        </Col> \r\n                    </Row>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SearchInput = styled.input.attrs(props => ({\r\n    type : 'text',\r\n    placeholder : ' Search: Title, Author, User'\r\n    \r\n}))`\r\n    background: white;\r\n    border-radius: 5px;\r\n    border: 1px solid darkgray;\r\n    height : 35px;\r\n    margin-left : 80px;\r\n    width : 230px;\r\n    float: right;\r\n    :: disabled\r\n`\r\n\r\n// Quote component\r\nconst Quote = props => (\r\n    <div>\r\n        <Alert variant=\"secondary\">\r\n            <Link to={{ pathname : '/', state: { id : props.quote._id }}} style={{color : '#202326'}}>\r\n                <Alert.Heading>{props.quote.quoteTitle} -{props.quote.quoteAuthor}</Alert.Heading>\r\n            </Link>\r\n            <span>{props.quote.quoteBody}</span>\r\n            <hr />\r\n            <Row>\r\n                <Col sm={8}>\r\n                    <span>Added by: <Alert.Link>{props.quote.quoteUser}</Alert.Link></span>\r\n                    <span style={{marginLeft : 10}}>Rating : {props.quote.quoteScore}</span>\r\n                    <span style={{marginLeft : 10}}>High Score : {props.quote.highWPMScore}WPM {props.quote.highAccScore}% Accuracy</span>\r\n\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div style={{float : 'right'}}>\r\n                        \r\n                    </div>\r\n                </Col>\r\n            </Row>    \r\n        </Alert>\r\n        <br></br>\r\n    </div>  \r\n)\r\n\r\nexport default class QuoteList extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.search = this.search.bind(this);\r\n        this.quotesList = this.quotesList.bind(this);\r\n        this.selectSort = this.selectSort.bind(this);\r\n\r\n        this.state = {\r\n            quotes: [],\r\n            search : '',\r\n            filteredQuotes : [],\r\n            sortedQuotes : [],\r\n            listHeight : 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let listHeight = document.getElementById('card')\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        axios.get(APIURL + '/quotes/approved')\r\n            .then(response => {\r\n                this.setState({ quotes : response.data,\r\n                                filteredQuotes : response.data,\r\n                                listHeight : listHeight\r\n                });\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    quotesList(quotesList) {\r\n        return quotesList.map(function(currentQuote, i){\r\n            return <Quote quote={currentQuote} key={i} index = {i}  />\r\n        })\r\n    }\r\n\r\n    search() {\r\n       \r\n        let search = document.getElementById('searchBar').value\r\n\r\n        // filter funtion that works so amazingly well without needing more requests\r\n        let filteredQuotes = this.state.filteredQuotes.filter(\r\n            (quote) => {\r\n                return  quote.quoteTitle.toLowerCase().indexOf(search) !== -1 ||\r\n                        quote.quoteAuthor.toLowerCase().indexOf(search) !== -1 || \r\n                        quote.quoteUser.indexOf(search) !== -1;\r\n            }\r\n        )\r\n\r\n        this.setState({\r\n            filteredQuotes : filteredQuotes\r\n        })\r\n    }\r\n\r\n    selectSort(e){\r\n\r\n\r\n        let value = e.target.value\r\n\r\n        console.log(document.getElementById('card').offsetHeight)\r\n        let quotes = this.state.filteredQuotes\r\n        let sortedQuotes = quotes\r\n        console.log(quotes)\r\n        switch (value) {\r\n\r\n            case 'a-z':\r\n                sortedQuotes = quotes.sort((a,b) => (a.quoteTitle > b.quoteTitle) ? 1 : -1) \r\n                break;\r\n\r\n            case 'z-a': \r\n                sortedQuotes = quotes.sort((a,b) => (a.quoteTitle < b.quoteTitle) ? 1 : -1) \r\n                break;\r\n\r\n            case 'rating':\r\n                sortedQuotes = quotes.sort((a,b) => (a.quoteScore < b.quoteScore) ? 1 : -1)\r\n                break;\r\n\r\n            case 'score':\r\n                sortedQuotes = quotes.sort((a,b) => (a.highWPMScore < b.highWPMScore) ? 1 : -1)\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            filteredQuotes : sortedQuotes\r\n        }) \r\n    }\r\n\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div className=\"container\">\r\n                <Card id='card'>\r\n                    <Row>\r\n                        <Col sm={7}>\r\n                            <h4>Quotes</h4>  \r\n                        </Col>\r\n                        <Col sm={2}>\r\n                            <FormControl as=\"select\" size=\"sm\" onChange={this.selectSort}>\r\n                                <option value=\"a-z\">A-Z</option>\r\n                                <option value=\"z-a\">Z-A</option>\r\n                                <option value=\"rating\">Rating</option>\r\n                                <option value=\"score\">High Score</option>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                            <SearchInput id=\"searchBar\"  onChange={this.search}></SearchInput>\r\n                        </Col>\r\n                        \r\n                    </Row><br/>\r\n                    <Row>\r\n                        <Col>\r\n                            {this.quotesList(this.state.filteredQuotes)}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n                <div style={{height : 800}}> </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form  from \"react-bootstrap/Form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Alert from \"react-bootstrap/Alert\"\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.login = this.login.bind(this);\r\n        this.onChangeLoginUsername = this.onChangeLoginUsername.bind(this);\r\n        this.onChangeLoginPassword = this.onChangeLoginPassword.bind(this);\r\n\r\n        this.state = {\r\n\r\n            inputEmail : '',\r\n            inputUsername : '',\r\n            inputPassword : '',\r\n            isEmail : false,\r\n\r\n            formErrors: {username: '', email: '', password: ''},\r\n            usernameValid : false,\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            formValid: false,\r\n            loggedInUser : {},\r\n\r\n            error : false,\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n\r\n\r\n    }\r\n\r\n    onChangeLoginUsername(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            inputUsername : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.inputUsername)\r\n        });\r\n    }\r\n\r\n    onChangeLoginPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            inputPassword : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.inputPassword)\r\n        });\r\n    }\r\n\r\n    //  Validate Field function takes name of field that is being validated and the value in that field\r\n    //  Check if Email is valid format using regex\r\n    //  Check if Password is longer than 6 characters\r\n    //  Check if Username is longer than 4 chacracters\r\n    validateField(fieldName, value) {\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let passwordValid = this.state.passwordValid;\r\n        let usernameValid = this.state.usernameValid;\r\n\r\n        switch(fieldName) {\r\n            \r\n            case 'Password':\r\n                passwordValid = value.length >= 6;\r\n                fieldValidateErrors.password = passwordValid ? '' : ' is too short';\r\n                break;\r\n            \r\n            case 'Username':\r\n                \r\n                usernameValid = value.length >=4;\r\n                fieldValidateErrors.username = usernameValid ? '' : ' is too short';\r\n                \r\n                \r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({formErrors : fieldValidateErrors, \r\n                        usernameValid : usernameValid, \r\n                        passwordValid : passwordValid\r\n                    },    \r\n                        this.validateForm);\r\n    }\r\n\r\n\r\n    login(e) {\r\n        e.preventDefault();\r\n\r\n        const loginAccount = {\r\n            userName : this.state.inputUsername,\r\n            userPassword : this.state.inputPassword,\r\n        }\r\n\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        \r\n        axios.post(APIURL + '/user/login' , loginAccount, {withCredentials:true})\r\n        .then(res => {\r\n            localStorage.setItem(\"beepboop\", res.data);\r\n            \r\n            this.props.history.push({\r\n                             pathname : \"/profile\",\r\n                             \r\n            });\r\n        })\r\n        .catch(err => {\r\n            this.setState({\r\n                error : true\r\n            })\r\n        });\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                    <Row>  \r\n                        <Col sm={5}>\r\n                            <Form>\r\n                                <Form.Group >\r\n                                    <h4>Login</h4>\r\n                                    <Form.Label>User Name: </Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.account_username}\r\n                                        id = \"inputLoginUserName\"\r\n                                        onChange = {this.onChangeLoginUsername}\r\n                                        name =\"Username\"\r\n                                    /><br />\r\n                                    \r\n                                    <Form.Label>Password: </Form.Label>\r\n                                    <Form.Control\r\n                                        type = \"password\"\r\n                                        value={this.state.account_password}\r\n                                        id = \"inputLoginPassword\"\r\n                                        onChange = {this.onChangeLoginPassword}\r\n                                        name = \"Password\"\r\n                                    />\r\n                                      \r\n                                </Form.Group>\r\n                                <Button type=\"submit\" variant=\"info\" onClick={this.login} >\r\n                                    Login\r\n                                </Button>\r\n\r\n                                <Link to=\"/account\">\r\n                                    <Button variant=\"secondary\" style={{ marginLeft : 10}}>\r\n                                        Create Account\r\n                                    </Button>\r\n                                </Link>\r\n                            </Form>\r\n                        </Col> \r\n                    </Row>\r\n                    <br></br>\r\n                    <Row>\r\n                        <Col sm={5}>\r\n                            <Collapse in={this.state.error}>\r\n                                <div>\r\n                                     <Alert variant={'danger'}>\r\n                                    <p>Username or Password Incorrect</p>\r\n                                </Alert>\r\n                                </div>\r\n                               \r\n                            </Collapse>\r\n                        </Col>\r\n                        \r\n                        \r\n                    </Row>\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from \"./Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n\r\n//import { FormErrors } from './FormErrors';\r\n\r\n\r\n// Account component for creating accounts\r\n// Includes clients side validation of credentials.\r\n\r\nexport default class Account extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.onChangeAccountUsername = this.onChangeAccountUsername.bind(this);\r\n        this.onChangeAccountEmail = this.onChangeAccountEmail.bind(this);\r\n        this.onChangeAccountPassword = this.onChangeAccountPassword.bind(this);\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n\r\n            account_username:'',\r\n            account_email:'',\r\n            account_password:'',\r\n            account_favourties: [],\r\n            formErrors: {username: '', email: '', password: ''},\r\n            usernameValid : false,\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            formValid: false,\r\n            loggedUser : {},\r\n\r\n            inputLoginPassword: '',\r\n            inputLoginUserName: ''\r\n        }\r\n    }\r\n\r\n    // Create Account inputs\r\n    onChangeAccountUsername(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            account_username: e.target.value},\r\n            () => {this.validateField(fieldName, this.state.account_username)           \r\n        });\r\n    }\r\n\r\n    onChangeAccountEmail(e) {\r\n        const fieldName = e.target.name;\r\n        //console.log(fieldName);\r\n        this.setState({\r\n            account_email: e.target.value},\r\n            () => {this.validateField(fieldName, this.state.account_email)\r\n        });  \r\n    }\r\n\r\n    onChangeAccountPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            account_password: e.target.value},\r\n            () => {this.validateField(fieldName, this.state.account_password)\r\n        });\r\n    }\r\n\r\n    //  Validate Field function takes name of field that is being validated and the value in that field\r\n    //  Check if Email is valid format using regex\r\n    //  Check if Password is longer than 6 characters\r\n    //  Check if Username is longer than 4 chacracters\r\n    validateField(fieldName, value) {\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n        let usernameValid = this.state.usernameValid;\r\n\r\n        switch(fieldName) {\r\n            case 'Email' :\r\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidateErrors.email = emailValid ? '' : ' is invalid';\r\n                break;\r\n            \r\n            case 'Password':\r\n                passwordValid = value.length >= 6;\r\n                fieldValidateErrors.password = passwordValid ? '' : ' is too short';\r\n                break;\r\n            \r\n            case 'Username':\r\n                usernameValid = value.length >=4;\r\n                fieldValidateErrors.username = usernameValid ? '' : ' is too short';\r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({formErrors : fieldValidateErrors, \r\n                        usernameValid : usernameValid,\r\n                        emailValid : emailValid, \r\n                        passwordValid : passwordValid\r\n                    },    \r\n                        this.validateForm);\r\n    }\r\n\r\n    // ValidaateForm function sets the current state of the fields of the form.\r\n    validateForm() {\r\n        this.setState({formValid:this.state.usernameValid && this.state.emailValid && this.state.passwordValid});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newAccount = {\r\n            userName: this.state.account_username,\r\n            userEmail : this.state.account_email,\r\n            userPassword : this.state.account_password,\r\n            \r\n        }\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        \r\n        axios.post( APIURL + '/user/register', newAccount, {withCredentials:true})\r\n        .then(res => {\r\n            if(res.status(400)){\r\n                console.log('email in use')\r\n            }\r\n        })\r\n            \r\n        this.setState = ({\r\n            account_username:'',\r\n            account_email:'',\r\n            account_password:'',\r\n        });\r\n\r\n        this.props.history.push({\r\n            pathname : \"/login\",\r\n            \r\n            });\r\n    }\r\n\r\n  \r\n    componentDidMount() {\r\n\r\n        if (localStorage.getItem('beepboop')) {\r\n            this.props.history.push({\r\n                pathname : \"/profile\",\r\n                \r\n});\r\n        }\r\n\r\n        // axios.get('http://localhost:8080/user/',{withCredentials:true})\r\n        // .then(res => {\r\n        //     console.log(res.data)\r\n        //     if (res.data)\r\n        //     {\r\n        //         this.props.history.push({\r\n        //             pathname : \"/account/user\",\r\n        //             state : { loggedInUser : res.data}\r\n        //             });\r\n        //     }\r\n            \r\n        // })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                    <Row>  \r\n                           \r\n                        <Col sm={5}>\r\n                            <Form>\r\n                                <Form.Group >\r\n                                    <h4>Create Account</h4>\r\n                                    <Form.Label>User Name: </Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.account_username}\r\n                                        id = \"inputUserName\"\r\n                                        onChange = {this.onChangeAccountUsername}\r\n                                        name = \"Username\"\r\n                                    /><br />\r\n\r\n                                    <Form.Label>Email: </Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.account_email}\r\n                                        id = \"inputUserEmail\"\r\n                                        onChange = {this.onChangeAccountEmail}\r\n                                        name = \"Email\"\r\n                                    /><br />\r\n                                    \r\n                                    <Form.Label>Password: </Form.Label>\r\n                                    <Form.Control\r\n                                        type = \"password\"\r\n                                        value={this.state.account_password}\r\n                                        id = \"inputPassword\"\r\n                                        onChange = {this.onChangeAccountPassword}\r\n                                        name = \"Password\"\r\n                                    />\r\n                                      \r\n                                </Form.Group>\r\n                                <Button type=\"submit\" variant=\"info\" onClick={this.onSubmit} disabled={!this.state.formValid}>\r\n                                    Create Account\r\n                                </Button>\r\n                                \r\n                                <Link to=\"/login\">\r\n                                    <Button variant=\"secondary\" style={{ marginLeft : 10}}>\r\n                                        Login\r\n                                    </Button>\r\n                                </Link>\r\n                                \r\n                            </Form>\r\n                        </Col>\r\n                        <Col sm={2}></Col>\r\n                        \r\n                        \r\n                    </Row>\r\n\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport 'zingchart/es6';\r\nimport ZingChart from 'zingchart-react';\r\n\r\n// Quote component\r\nconst Quote = props => (\r\n    <div>\r\n        <Alert variant=\"secondary\">\r\n            <Link to={{ pathname : '/', state: { id : props.quote._id }}} style={{color : '#202326'}}>\r\n                <Alert.Heading>{props.quote.quoteTitle} -{props.quote.quoteAuthor}</Alert.Heading>\r\n            </Link>\r\n            <span>{props.quote.quoteBody}</span>\r\n            <hr />\r\n            <Row>\r\n                <Col sm={8}>\r\n                    <span style={{marginLeft : 10}}>Approved : {String(props.quote.quoteApproved)}</span>\r\n                    <span style={{marginLeft : 10}}>Rating : {props.quote.quoteScore}</span>\r\n                    <span style={{marginLeft : 10}}>High Score : {props.quote.highWPMScore}WPM {props.quote.highAccScore}% Accuracy</span>\r\n\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div style={{float : 'right'}}>\r\n                        <Alert.Link style={{marginRight : 10}} onClick={props.edit}>\r\n                            Edit\r\n                        </Alert.Link>\r\n                        <Alert.Link onClick={props.delete}>\r\n                            Delete\r\n                        </Alert.Link>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Alert>\r\n        <br></br>\r\n    </div>\r\n)\r\n\r\nexport default class Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.logout = this.logout.bind(this);\r\n        this.getQuotes = this.getQuotes.bind(this);\r\n        this.deleteAccount = this.deleteAccount.bind(this);\r\n        \r\n        this.editAccount = this.editAccount.bind(this);\r\n        this.approveButton = this.approveButton.bind(this);\r\n        this.editQuote = this.editQuote.bind(this);\r\n        this.deleteQuote = this.deleteQuote.bind(this);\r\n        this.deleteThisQuote = this.deleteThisQuote.bind(this);\r\n        this.showEditErrors = this.showEditErrors.bind(this);\r\n\r\n        this.handleDeleteAccountClose = this.handleDeleteAccountClose.bind(this);\r\n        this.handleDeleteQuoteClose = this.handleDeleteQuoteClose.bind(this);\r\n        this.handleEditQuoteClose = this.handleEditQuoteClose.bind(this);\r\n        this.saveQuote = this.saveQuote.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n\r\n        this.onChangeQuoteTitle = this.onChangeQuoteTitle.bind(this);\r\n        this.onChangeQuoteAuthor = this.onChangeQuoteAuthor.bind(this);\r\n        this.onChangeQuoteBody = this.onChangeQuoteBody.bind(this);\r\n\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n\r\n\r\n        this.state = {\r\n\r\n            id: '',\r\n            username : '',\r\n            email : '',\r\n            signUpDate : '',\r\n            personalBestWPM : 0,\r\n            personalBestAcc : 0,\r\n            quoteIds : [],\r\n            quotes : [],\r\n            APIURL : '',\r\n            unapprovedQuotesCount : 0,\r\n\r\n            deleteAccountModal : false,\r\n            deleteQuoteModal : false,\r\n            editQuoteModal : false,\r\n\r\n            activeTab : props.activeTab || 1,\r\n\r\n            quoteTitleValid : false,\r\n            quoteBodyValid : false,\r\n            quoteAuthorValid : false,\r\n            formValid : false, \r\n            formErrors : {quoteTitle: '', quoteBody : '', quoteAuthor : ''},\r\n\r\n            editQuote : {\r\n                quoteTitle : '',\r\n                quoteAuthor : '',\r\n                quoteBody : '',\r\n            },\r\n\r\n            deletingQuote : {\r\n                quoteTitle : '',\r\n            },\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let token = localStorage.getItem('beepboop')\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n            this.setState({\r\n                APIURL : 'https://typingtest.jdoyle.ie'\r\n            })\r\n        } else if (process.env.NODE_ENV === 'development') {\r\n            APIURL = 'http://localhost:8080'\r\n            this.setState({\r\n                APIURL : 'http://localhost:8080'\r\n            })\r\n        }\r\n        axios.get(APIURL + '/user/profile',{ headers : { 'auth-token' : token}}  )\r\n        .then( res => {\r\n\r\n            //console.log(this.state)\r\n            if (res.data.isAdmin) {\r\n                localStorage.setItem(\"nimdAis\", res.data.isAdmin)\r\n            }\r\n\r\n\r\n            let theme = '';\r\n            console.log(localStorage.getItem(\"isDarkMode\"))\r\n            if (localStorage.getItem(\"isDarkMode\")) {\r\n                theme = 'dark';\r\n            } else {\r\n                theme = 'light';\r\n            }\r\n            console.log(theme)\r\n            if (res.data) {\r\n                //console.log(res.data)\r\n                this.setState({\r\n                    id : res.data._id,\r\n                    username : res.data.userName,\r\n                    email : res.data.userEmail,\r\n                    signUpDate : res.data.signUpDate.slice(0, 15),\r\n                    personalBestWPM : res.data.personalBestWPM,\r\n                    personalBestAcc : res.data.personalBestAcc,\r\n                    quoteIds : res.data.quotesAdded,\r\n                    WPMChartConfig : {\r\n                        theme : theme,\r\n                        type : 'line',\r\n                        title : {\r\n                            text : 'Words Per Minute',\r\n                        },\r\n                        height : '60%',\r\n                        legend : {},\r\n                        scaleX : {\r\n                            label : {\r\n                                text : 'Typing Tests'\r\n                            }\r\n                        },\r\n                        scaleY : {\r\n                            label : {\r\n                                text : 'WPM'\r\n                            },\r\n                            values: \"0:125:25\",\r\n                            'ref-value' : 40,\r\n                            'ref-line' : {\r\n                                'line-color' : 'red',\r\n                                'line-style' : 'solid'\r\n                            }\r\n                        },\r\n                        series: [{\r\n                            values : res.data.latestWPMScores,\r\n                            text : 'Your WPM'\r\n                        },{\r\n                            values : 40,\r\n                            text : 'Avg WPM'\r\n                        }\r\n                        ]\r\n                    },\r\n\r\n                    AccChartConfig : {\r\n                        theme : theme,\r\n                        type : 'line',\r\n                        title : {\r\n                            text : 'Typing Accuracy % ',\r\n                        },\r\n                        height : '70%',\r\n                        legend : {},\r\n                        scaleX : {\r\n                            label : {\r\n                                text : 'Typing Tests'\r\n                            }\r\n                        },\r\n                        scaleY : {\r\n                            label : {\r\n                                text : 'Accuracy % '\r\n                            },\r\n                            values: \"0:125:25\",\r\n                            'ref-value' : 92,\r\n                            'ref-line' : {\r\n                                'line-color' : 'red',\r\n                                'line-style' : 'solid'\r\n                            }\r\n                        },\r\n                        series: [{\r\n                            values : res.data.latestAccScores,\r\n                            text : 'Your Accuracy %'\r\n                        },{\r\n                            values : 92,\r\n                            text : 'Avg Accuracy %'\r\n                        }\r\n                        ]\r\n                    }\r\n\r\n                }, () => console.log(this.state.chartConfig))\r\n                this.getQuotes();\r\n            }\r\n        })\r\n\r\n        //get unapproved quotes\r\n        axios.get(APIURL + '/quotes/unapproved', {headers : {'auth-token' : token}})\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    this.setState({\r\n                    unapprovedQuotesCount : response.data.length\r\n                });\r\n                } else {\r\n                    this.setState({\r\n                        unapprovedQuotesCount : null\r\n                    })\r\n                }\r\n\r\n\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n   \r\n\r\n    //#region Quotes list\r\n    getQuotes() {\r\n        if (this.state.quoteIds.length > 0) {\r\n            this.state.quoteIds.forEach(Id => {\r\n                axios.get(this.state.APIURL + '/quotes/' + Id)\r\n                .then(res => {\r\n\r\n                    if (res.data) {\r\n                        this.setState({\r\n                            quotes : [...this.state.quotes, res.data]\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    quotesComponentsList () {\r\n        let edit = this.editQuote;\r\n        let del = this.deleteQuote;\r\n        if (this.state.quotes.length > 0)\r\n        {\r\n            return this.state.quotes.map(function(currentQuote, i) {\r\n                return <Quote quote={currentQuote} key={i} index={i} edit={() => edit(currentQuote)} delete={() => del(currentQuote)}/>\r\n            })\r\n        }\r\n        else {\r\n            return  <Link to='/createQuote'><Button> Add Some Quotes!</Button></Link>\r\n        }\r\n\r\n    }\r\n    //#endregion\r\n\r\n\r\n    // Function that lets users edit a quote\r\n    editQuote(quote) {\r\n        //console.log(quote)\r\n        this.setState({\r\n            editQuote : quote\r\n        }, () => this.handleEditQuoteClose())\r\n    }\r\n\r\n    // Function that lets users delete a quote\r\n    deleteQuote(quote) {\r\n        this.setState({\r\n            deletingQuote : quote\r\n        }, () => this.handleDeleteQuoteClose())\r\n    }\r\n\r\n    deleteThisQuote() {\r\n        const quote = this.state.deletingQuote;\r\n\r\n        let token = localStorage.getItem('beepboop');\r\n        axios.post(this.state.APIURL + '/quotes/delete',  quote , { headers: { 'auth-token' : token}})\r\n        .then(res => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                editQuoteModal : false\r\n            })\r\n            window.location.reload()\r\n        })\r\n        .catch(err => err)\r\n\r\n    }\r\n\r\n    //#region Edit Quote Modal Functions\r\n\r\n    onChangeQuoteTitle(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            editQuote : {\r\n                ...this.state.editQuote,\r\n                quoteTitle : e.target.value,\r\n            }\r\n        }, () => {this.validateField(fieldName, this.state.editQuote.quoteTitle)})\r\n    }\r\n\r\n    onChangeQuoteAuthor(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            editQuote : {\r\n                ...this.state.editQuote,\r\n                quoteAuthor : e.target.value\r\n            }\r\n        }, () => {this.validateField(fieldName, this.state.editQuote.quoteAuthor)})\r\n    }\r\n\r\n    onChangeQuoteBody(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            editQuote : {\r\n                ...this.state.editQuote,\r\n                quoteBody : e.target.value\r\n            }\r\n        }, () => {this.validateField(fieldName, this.state.editQuote.quoteBody)})\r\n    }\r\n\r\n    // Saves the new edited quote\r\n    saveQuote() {\r\n        let token = localStorage.getItem('beepboop');\r\n        let APIURL = ''\r\n       //console.log(token)\r\n        const editedQuote = this.state.editQuote;\r\n        console.log(editedQuote)\r\n        console.log(this.state.APIURL)\r\n        axios.post(this.state.APIURL + '/quotes/update', editedQuote, { headers: { 'auth-token' : token}})\r\n        .then(res => {\r\n            //onsole.log(res.data)\r\n            this.setState({\r\n                editQuoteModal : false\r\n            })\r\n            window.location.reload()\r\n        })\r\n        .catch(err => err)\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let quoteTitleValid = this.state.quoteTitleValid;\r\n        let quoteBodyValid = this.state.quoteBodyValid;\r\n        let quoteAuthorValid = this.state.quoteAuthorValid;\r\n\r\n        //console.log(value)\r\n        switch(fieldName) {\r\n            \r\n            case 'quoteTitle':\r\n                \r\n                quoteTitleValid = value.length >= 0 && value.length < 40;\r\n                fieldValidateErrors.quoteTitle = quoteTitleValid ? '' : 'Quote Title must not be empty or greater than 20 characters.';\r\n                break;\r\n            \r\n            case 'quoteBody':\r\n                \r\n                quoteBodyValid = value.length >= 200  && value.length <= 350 ;\r\n                fieldValidateErrors.quoteBody = quoteBodyValid ? '' : 'Quote Body is too short';\r\n                \r\n                break;\r\n\r\n            case 'quoteAuthor':\r\n\r\n                if (value.length === 0){\r\n                    quoteAuthorValid = true;\r\n                    this.setState((state) => ({\r\n                        quoteAuthor : state.username\r\n                    }), () => {fieldValidateErrors.quoteAuthor = quoteAuthorValid ? '' : ''})\r\n                    break;\r\n                }\r\n                else if (value.length <= 20) {\r\n                    quoteAuthorValid = true\r\n                    fieldValidateErrors.quoteAuthor = quoteAuthorValid ? '' : 'Quote Author is short long';\r\n                    break;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({\r\n            formErrors : fieldValidateErrors, \r\n            quoteTitleValid : quoteTitleValid, \r\n            quoteBodyValid : quoteBodyValid,\r\n            quoteAuthorValid : quoteAuthorValid,\r\n        },    \r\n            this.validateForm);\r\n        \r\n    }\r\n\r\n     // ValidaateForm function sets the current state of the fields of the form.\r\n    validateForm() {\r\n        console.log(this.state.quoteTitleValid, this.state.quoteAuthorValid, this.state.quoteBodyValid )\r\n\r\n        this.setState({\r\n            formValid:  this.state.quoteTitleValid &&\r\n                        this.state.quoteBodyValid && \r\n                        this.state.quoteAuthorValid,\r\n                    });\r\n\r\n    }\r\n\r\n    showEditErrors() {\r\n        if (!this.state.formValid) {\r\n            //console.log('showing')\r\n            //console.log(this.state.formValid)\r\n            return <Alert variant=\"danger\">{this.state.formErrors.quoteTitle} \r\n                                           {this.state.formErrors.quoteAuthor} \r\n                                           {this.state.formErrors.quoteBody}\r\n                    </Alert>\r\n        } \r\n    }\r\n\r\n\r\n    //#endregion\r\n\r\n    // deleteAccountModal() {\r\n    //    this.handleClose()\r\n    // }\r\n\r\n\r\n\r\n    //#region Modal Handlers\r\n        handleDeleteAccountClose (){\r\n                this.setState({\r\n                    deleteAccountModal : !this.state.deleteAccountModal\r\n                })\r\n            }\r\n\r\n        handleEditQuoteClose () {\r\n            this.setState({\r\n                editQuoteModal : !this.state.editQuoteModal\r\n            })\r\n        }\r\n\r\n        handleDeleteQuoteClose() {\r\n            this.setState({\r\n                deleteQuoteModal : !this.state.deleteQuoteModal\r\n            })\r\n        }\r\n    //#endregion\r\n\r\n\r\n    //#region Account Buttons\r\n    logout() {\r\n            localStorage.removeItem(\"beepboop\")\r\n            localStorage.removeItem('nimdAis')\r\n            this.props.history.push({\r\n                pathname : \"/login\",\r\n            })\r\n        }\r\n\r\n    deleteAccount() {\r\n        let token = localStorage.getItem('beepboop')\r\n        localStorage.removeItem('beepboop')\r\n\r\n        const user = {\r\n            userName : this.state.username,\r\n            userEmail : this.state.email\r\n        }\r\n        //console.log(user)\r\n        axios.post(this.state.APIURL + '/user/delete', user , {headers : {'auth-token' : token}})\r\n\r\n\r\n        this.props.history.push({\r\n            pathname : '/login'\r\n        });\r\n    }\r\n\r\n    editAccount() {\r\n        let token = localStorage.getItem('beepboop')\r\n\r\n        const user = {\r\n            userName : this.state.username,\r\n            userEmail : this.state.email,\r\n            userId : this.state.id,\r\n        }\r\n\r\n        this.props.history.push({\r\n            pathname : '/editAccount',\r\n            state : { id : this.state.id }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    approveButton () {\r\n        if (localStorage.getItem('nimdAis')) {\r\n        return <Link to='/approveQuote'>\r\n                    <Button variant=\"outline-success\" style={{marginLeft : 10}}>Approve Quotes\r\n                        <Badge  variant=\"danger\" style={{marginLeft : 5}}>{this.state.unapprovedQuotesCount}</Badge>\r\n                    </Button>\r\n                </Link>\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    handleSelect(selectedTab) {\r\n        // The active tab must be set into the state so that\r\n        // the Tabs component knows about the change and re-renders.\r\n        this.setState({\r\n          activeTab: selectedTab\r\n        });\r\n      }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                {/* Delete Account Modal */}\r\n                <Modal\r\n                    show={this.state.deleteAccountModal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                    <Modal.Title>Delete Account?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to delete your account? This is not reversable.\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleDeleteAccountClose}>\r\n                        Nevermind\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={this.deleteAccount}>Delete Account</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {/* Delete Quote Modal */}\r\n                <Modal\r\n                    show={this.state.deleteQuoteModal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                    <Modal.Title>Delete Quote?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to delete {this.state.deletingQuote.quoteTitle}? This is not reversable and will delete the quotes top score and WPM.\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleDeleteQuoteClose}>\r\n                        Nevermind\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={this.deleteThisQuote}>Delete Quote</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {/* Edit Quote Modal */}\r\n                <Modal\r\n                    show={this.state.editQuoteModal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    size='xl'\r\n                    centered\r\n\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Edit Quote</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <div>\r\n                        <Alert variant=\"secondary\">\r\n                            <Form>\r\n                                <Alert.Heading>\r\n                                        <Row>\r\n                                            <Col m=\"auto\">\r\n\r\n                                                <Form.Control\r\n\r\n                                                    value={this.state.editQuote.quoteTitle}\r\n                                                    type='text'\r\n                                                    size='lg'\r\n                                                    onChange={this.onChangeQuoteTitle}\r\n                                                    name = 'quoteTitle'\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs=\"auto\"> -</Col>\r\n                                            <Col xs=\"auto\">\r\n\r\n                                                <Form.Control\r\n                                                        value={this.state.editQuote.quoteAuthor}\r\n                                                        type='text'\r\n                                                        style={{width : String(this.state.editQuote.quoteAuthor.length)}}\r\n                                                        size='lg'\r\n                                                        onChange={this.onChangeQuoteAuthor}\r\n                                                        name = 'quoteAuthor'\r\n                                                    />\r\n                                            </Col>\r\n                                        </Row>\r\n                                </Alert.Heading>\r\n\r\n                                <Form.Control\r\n                                    value={this.state.editQuote.quoteBody}\r\n                                    id = \"quoteBody\"\r\n                                    name = \"quoteBody\"\r\n                                    as=\"textarea\" rows = \"4\"\r\n                                    onChange={this.onChangeQuoteBody}\r\n                                />\r\n                            </Form>\r\n                        </Alert>\r\n                        {this.showEditErrors()}\r\n                    </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleEditQuoteClose}>\r\n                            Nevermind\r\n                        </Button>\r\n                        <Button variant=\"success\" onClick={this.saveQuote} disabled={!this.state.formValid}>\r\n                            Save Quote\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={9}>\r\n                            <h3>{this.state.username}'s Profile</h3>\r\n                            <h5>Email:  {this.state.email}</h5>\r\n                            <h5>Date Joined:  {this.state.signUpDate}</h5>\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                            <h4>Personal Best:</h4>\r\n                            <Alert variant=\"info\">\r\n                                <span>\r\n                                    WPM : {this.state.personalBestWPM} <br></br>\r\n                                    Accuracy : {this.state.personalBestAcc}% <br></br>\r\n                                </span>\r\n                            </Alert>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col >\r\n                            <br/>\r\n                            <Link to='/editAccount'>\r\n                                <Button variant=\"outline-info\" onClick={this.editAccount} style={{marginRight : 10}} disabled={false}>\r\n                                    Edit Account\r\n                                </Button>\r\n                            </Link>\r\n\r\n                            <Button variant=\"outline-warning\" onClick={this.logout} style={{marginRight : 10}}>\r\n                                Logout\r\n                            </Button>\r\n                            <Button variant=\"outline-danger\" onClick={this.handleDeleteQuoteClose}>\r\n                                Delete Account\r\n                            </Button>                   \r\n\r\n                            {this.approveButton()}\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col>\r\n                            <Tabs className=\"tabClass\" activeKey={this.state.activeTab} onSelect={this.handleSelect}>\r\n                                <Tab eventKey={1} title='Your Quotes' >\r\n                                    <br />\r\n                                    <div>\r\n                                        {this.quotesComponentsList()}\r\n                                    </div>\r\n                                </Tab>\r\n                                <Tab eventKey={2} title='Your Scores'> \r\n                                    <br />\r\n                                    <ZingChart data={this.state.WPMChartConfig} />\r\n                                    \r\n                                    <ZingChart data={this.state.AccChartConfig} />\r\n                                </Tab>\r\n                                \r\n                            </Tabs>\r\n                                \r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Card>\r\n                <div style={{ height : 800 }}></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from \"./Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\n\r\nexport default class EditAccount extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.onChangeAccountUsername = this.onChangeAccountUsername.bind(this);\r\n        this.onChangeAccountEmail = this.onChangeAccountEmail.bind(this);\r\n        this.onChangeAccountPassword = this.onChangeAccountPassword.bind(this);\r\n        this.onChangeAccountConfirmPassword = this.onChangeAccountConfirmPassword.bind(this);\r\n        this.onChangeCurrentPassword = this.onChangeCurrentPassword.bind(this);\r\n        this.editAccount = this.editAccount.bind(this);\r\n        this.checkPassword = this.checkPassword.bind(this);\r\n        this.passwordsMatch = this.passwordsMatch.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n\r\n        this.state ={\r\n\r\n            oldUser : {\r\n                id : '',\r\n                userName : '',\r\n                email : '',\r\n                password : '',\r\n            },\r\n\r\n            newInput : {\r\n                userName : '',\r\n                email : '',\r\n                password : '',\r\n                confirmPassword : '',\r\n                id : ''\r\n            },\r\n\r\n            newUser : {\r\n                userName : '',\r\n                email : '',\r\n                password : '',\r\n            },\r\n\r\n            onChangeCurrentPassword : '',\r\n            Modal : true,\r\n\r\n            token : '',\r\n            authValid : false,\r\n           \r\n            emailValid : false,\r\n            passwordValid : false,\r\n            usernameValid : false,\r\n            formValid : false,\r\n            formErrors : { email : '', password : '' , username : ''}\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let token = localStorage.getItem('beepboop')\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n            this.setState({\r\n                APIURL : 'https://typingtest.jdoyle.ie'\r\n            })\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n            this.setState({\r\n                APIURL : 'http://localhost:8080'\r\n            })\r\n        }\r\n        axios.get(APIURL + '/user/profile',{ headers : { 'auth-token' : token}}  )\r\n        .then( res => {\r\n            //console.log(this.state)\r\n            if (res.data) {\r\n                this.setState({\r\n                    oldUser : {\r\n                        id : res.data._id,\r\n                        userName : res.data.userName,\r\n                        email : res.data.userEmail,\r\n                    },\r\n                    token : token\r\n                })\r\n\r\n            }\r\n        })\r\n    \r\n    }\r\n\r\n    editAccount() {\r\n\r\n        const tempUser = this.state.newInput\r\n        console.log(tempUser)\r\n        //console.log(this.state.oldUser.password)\r\n        // Check if user has entered a new passowrd\r\n        if (this.state.newInput.password === \"\" && this.passwordsMatch) {\r\n            tempUser.password  = this.state.oldUser.password   \r\n        }\r\n        \r\n        // check if user has entered a new username\r\n        if (this.state.newInput.userName === '') {\r\n            tempUser.userName = this.state.oldUser.userName\r\n        } \r\n\r\n        // check if users has enetered a new email\r\n        if (this.state.newInput.email === '') {\r\n            tempUser.email = this.state.oldUser.email\r\n        } \r\n            \r\n        tempUser.id = this.state.oldUser.id\r\n        console.log(tempUser)\r\n        // post req\r\n        axios.post(this.state.APIURL + '/user/update', tempUser, { headers : {'auth-token' : this.state.token }})\r\n        .then(res => {\r\n            console.log(res.data)\r\n        }).catch(err => err)\r\n    }\r\n\r\n\r\n    // Create Account inputs\r\n    onChangeAccountUsername(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            newInput : {\r\n                userName : e.target.value,\r\n                email : this.state.newInput.email,\r\n                password : this.state.newInput.password,\r\n                confirmPassword : this.state.newInput.confirmPassword,\r\n            }},\r\n            () => {this.validateField(fieldName, this.state.newInput.userName)} \r\n        );\r\n    }\r\n\r\n    onChangeAccountEmail(e) {\r\n        const fieldName = e.target.name;\r\n        //console.log(fieldName);\r\n        this.setState({\r\n            newInput : {\r\n\r\n               email: e.target.value,\r\n               userName : this.state.newInput.userName,\r\n               password : this.state.newInput.password,\r\n               confirmPassword : this.state.newInput.confirmPassword,\r\n            }},\r\n            () => {this.validateField(fieldName, this.state.newInput.email)}\r\n        );  \r\n    }\r\n\r\n    onChangeAccountPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            newInput : {\r\n                password: e.target.value,\r\n                confirmPassword : this.state.newInput.confirmPassword,\r\n                userName : this.state.newInput.userName,\r\n                email : this.state.newInput.email,\r\n            }},\r\n            () => {this.validateField(fieldName, this.state.newInput.password)}\r\n        );\r\n    }\r\n\r\n    onChangeAccountConfirmPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            newInput : {\r\n                confirmPassword: e.target.value,\r\n                userName : this.state.newInput.userName,\r\n                email : this.state.newInput.email,\r\n                passowrd : this.state.newInput.password,\r\n            }},\r\n           // () => {this.validateField(fieldName, this.state.newConfirmPassword)}\r\n        );\r\n    }\r\n\r\n    onChangeCurrentPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            onChangeCurrentPassword : e.target.value\r\n        })\r\n    }\r\n\r\n    //  Validate Field function takes name of field that is being validated and the value in that field\r\n    //  Check if Email is valid format using regex\r\n    //  Check if Password is longer than 6 characters\r\n    //  Check if Username is longer than 4 chacracters\r\n    validateField(fieldName, value) {\r\n        console.log(value)\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n        let usernameValid = this.state.usernameValid;\r\n\r\n      \r\n\r\n        switch(fieldName) {\r\n            case 'Email' :\r\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidateErrors.email = emailValid ? '' : ' is invalid';\r\n                break;\r\n            \r\n            case 'Password':\r\n                passwordValid = value.length >= 6;\r\n                fieldValidateErrors.password = passwordValid ? '' : ' is too short';\r\n                break;\r\n            \r\n            case 'Username':\r\n                usernameValid = value.length >=4;\r\n                fieldValidateErrors.username = usernameValid ? '' : ' is too short';\r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({formErrors : fieldValidateErrors, \r\n                        usernameValid : usernameValid,\r\n                        emailValid : emailValid, \r\n                        passwordValid : passwordValid\r\n                    },    \r\n                        this.validateForm);\r\n    }\r\n\r\n    // ValidaateForm function sets the current state of the fields of the form.\r\n    validateForm() {\r\n        this.setState({formValid:this.state.usernameValid && this.state.emailValid && this.state.passwordValid});\r\n    }\r\n\r\n    checkPassword (){\r\n        const loginAccount = {\r\n            userName : this.state.oldUser.userName,\r\n            userPassword : this.state.onChangeCurrentPassword\r\n        }\r\n\r\n        this.setState((state) => ({\r\n            oldUser : {\r\n                ...state.oldUser,\r\n                password : loginAccount.userPassword\r\n            }\r\n        })\r\n\r\n        )\r\n        //console.log(loginAccount)\r\n        axios.post(this.state.APIURL + '/user/login' , loginAccount, {withCredentials:true})\r\n        .then(res => {\r\n            \r\n            if (res.data) {\r\n                //console.log('beep')\r\n                this.setState({\r\n                    Modal : false\r\n                })\r\n            }\r\n            else {\r\n                console.log('error')\r\n            }\r\n        }).catch (err => {\r\n            this.setState({\r\n                authValid : true\r\n            })\r\n        }) \r\n    }\r\n\r\n\r\n\r\n    // check if both entries of passwords match returns true / false\r\n    passwordsMatch() {\r\n        if (this.state.newPassword === this.state.newConfirmPassowrd) {\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{height : window.innerHeight}}>\r\n\r\n                <Modal\r\n                    show={this.state.Modal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                       <Modal.Title>Enter your current Password</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Enter your current password to edit your Account.\r\n                        <Form>\r\n                            \r\n                            <Form.Control \r\n                                value={this.state.onChangeCurrentPassword}\r\n                                type = \"password\"\r\n                                id = \"inputUserName\"\r\n                                onChange = {this.onChangeCurrentPassword}\r\n                                name = \"Username\"\r\n                                isInvalid = {this.state.authValid}\r\n                           />\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Link to=\"/profile\">\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Nevermind\r\n                        </Button>\r\n                    </Link>\r\n                    \r\n                    <Button variant=\"danger\" onClick={this.checkPassword}>Edit Account</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={5}>\r\n                            <Form>\r\n                                <Form.Group>\r\n                                    <h4>Edit Account</h4>\r\n                                    <Form.Label>User Name:</Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.newInput.userName}\r\n                                        id = \"inputUserName\"\r\n                                        onChange = {this.onChangeAccountUsername}\r\n                                        name = \"Username\"\r\n                                        placeholder = {this.state.oldUser.userName}\r\n                                        isValid = {this.state.usernameValid}\r\n\r\n                                    /><br />\r\n\r\n                                    <Form.Label>Email: </Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.newInput.email}\r\n                                        id = \"inputUserEmail\"\r\n                                        onChange = {this.onChangeAccountEmail}\r\n                                        name = \"Email\"\r\n                                        placeholder = {this.state.oldUser.email}\r\n                                        isValid = {this.state.emailValid}\r\n                                    /><br />\r\n                                    \r\n                                    <Form.Label>Password: </Form.Label>\r\n                                    <Form.Control\r\n                                        type = \"password\"\r\n                                        value={this.state.newInput.password}\r\n                                        id = \"inputPassword\"\r\n                                        onChange = {this.onChangeAccountPassword}\r\n                                        name = \"Password\"\r\n                                        isValid = {this.state.passwordValid}\r\n                                    />\r\n                                    <Form.Label>Confirm Password: </Form.Label>\r\n                                    <Form.Control\r\n                                        type = \"password\"\r\n                                        value={this.state.newInput.confirmPassword}\r\n                                        id = \"inputConfirmPassword\"\r\n                                        onChange = {this.onChangeAccountConfirmPassword}\r\n                                        name = \"ConfirmPassword\"\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                 <Link to=\"/profile\">\r\n                                    <Button variant=\"secondary\" style={{ marginRight : 10}}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Link>\r\n\r\n                                <Button  variant=\"info\" onClick={this.editAccount}>\r\n                                    Save\r\n                                </Button>\r\n                                \r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst SearchInput = styled.input.attrs(props => ({\r\n    type : 'text',\r\n    placeholder : ' Search: Title, Author, User'\r\n    \r\n}))`\r\n    background: white;\r\n    border-radius: 5px;\r\n    border: 1px solid darkgray;\r\n    height : 35px;\r\n    margin-left : 80px;\r\n    width : 230px;\r\n    float: right;\r\n    :: disabled\r\n`\r\n\r\n// Quote component\r\nconst Quote = props => (\r\n    <div>\r\n        <Alert variant=\"secondary\">\r\n            <Link to={{ pathname : '/', state: { id : props.quote._id }}} style={{color : '#202326'}}>\r\n                <Alert.Heading>{props.quote.quoteTitle} -{props.quote.quoteAuthor}</Alert.Heading>\r\n            </Link>\r\n            <span>{props.quote.quoteBody}</span>\r\n            <hr />\r\n            <Row>\r\n                <Col sm={8}>\r\n                    <span>Added by: <Alert.Link>{props.quote.quoteUser}</Alert.Link></span>\r\n                    <span style={{marginLeft : 10}}>Approved : {String(props.quote.quoteApproved)}</span> \r\n                    <span style={{marginLeft : 10}}>Rating : {props.quote.quoteScore}</span> \r\n                    <span style={{marginLeft : 10}}>High Score : {props.quote.highWPMScore}WPM {props.quote.highAccScore}% Accuracy</span>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div style={{float : 'right'}}>\r\n\r\n                        <Button variant=\"success\" style={{ marginRight : 5}} onClick={props.approve}  >\r\n                            Approve\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={props.del}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>    \r\n        </Alert>\r\n        <br></br>\r\n    </div>  \r\n)\r\n\r\nexport default class QuoteList extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.search = this.search.bind(this);\r\n        this.quotesList = this.quotesList.bind(this);\r\n        this.approveQuote = this.approveQuote.bind(this);\r\n        this.deleteQuote = this.deleteQuote.bind(this);\r\n        this.noQuotes = this.noQuotes.bind(this);\r\n\r\n        this.state = {\r\n            quotes: [],\r\n            search : '',\r\n            token : '',\r\n            APIURL : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let token = localStorage.getItem('beepboop');\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n            this.setState({\r\n                APIURL : 'https://typingtest.jdoyle.ie'\r\n            })\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n            this.setState({\r\n                APIURL : 'http://localhost:8080'\r\n            })\r\n        }\r\n        axios.get(APIURL + '/quotes/unapproved', {headers : {'auth-token' : token}})\r\n            .then(response => {\r\n                this.setState({ \r\n                    quotes : response.data,\r\n                    token : localStorage.getItem('beepboop')\r\n                });\r\n\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    quotesList(quotesList) {\r\n        let approve = this.approveQuote;\r\n        let del = this.deleteQuote;\r\n        return quotesList.map(function(currentQuote, i, ){\r\n            return <Quote quote={currentQuote} key={i} index = {i}  approve={() => approve(currentQuote)} del={() => del(currentQuote)}/>\r\n        })\r\n    }\r\n\r\n    search() {\r\n        this.setState({\r\n            search : document.getElementById('searchBar').value\r\n        })\r\n        \r\n    }\r\n\r\n    approveQuote(currentQuote) {\r\n        console.log(currentQuote)\r\n        axios.post(this.state.APIURL + '/quotes/approve', currentQuote, { headers : {'auth-token' : this.state.token}})\r\n        .then(res => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                quotes : []\r\n            })\r\n        })\r\n        console.log(currentQuote.quoteApproved)\r\n\r\n    }\r\n\r\n    deleteQuote() {\r\n        console.log('Delete')\r\n    }\r\n\r\n    noQuotes() {\r\n        if (this.state.quotes.length === 0) {\r\n            return <span>No quotes to approve!</span> \r\n        }\r\n    }\r\n   \r\n\r\n    \r\n\r\n    render() {\r\n        // filter funtion that works so amazingly well without needing more requests\r\n        let filteredQuotes = this.state.quotes.filter(\r\n            (quote) => {\r\n                return  quote.quoteTitle.toLowerCase().indexOf(this.state.search) !== -1 ||\r\n                        quote.quoteAuthor.toLowerCase().indexOf(this.state.search) !== -1 || \r\n                        quote.quoteUser.indexOf(this.state.search) !== -1;\r\n            }\r\n        )\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={8}>\r\n                            <h4> Approve Quotes</h4>  \r\n                            \r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <SearchInput id=\"searchBar\"  onChange={this.search}></SearchInput>\r\n                        </Col>\r\n                        \r\n                    </Row><br/>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to='/profile'>\r\n                                <Button variant=\"info\">Back to Profile</Button>\r\n                            </Link>\r\n                        </Col> \r\n                    </Row><br/>\r\n                    <Row>\r\n                        <Col>\r\n                            {this.quotesList(filteredQuotes)}\r\n                            {this.noQuotes()}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Table from 'react-bootstrap/Table'\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SearchInput = styled.input.attrs(props => ({\r\n    type : 'text',\r\n    placeholder : ' Search: Title, Author, User'\r\n    \r\n}))`\r\n    background: white;\r\n    border-radius: 5px;\r\n    border: 1px solid darkgray;\r\n    height : 35px;\r\n    margin-left : 80px;\r\n    width : 230px;\r\n    float: right;\r\n    :: disabled\r\n`\r\n\r\n// ranking component\r\nconst Ranking = props => (\r\n    <tr>\r\n        <td>{props.index + 1}</td>\r\n        <td>{props.user.userName}</td>\r\n        <td>{props.user.personalBestWPM}</td>\r\n        <td>{props.user.personalBestAcc}%</td>\r\n    </tr>\r\n)\r\n\r\n// leader ranking component\r\nconst Leader = props => (\r\n    <tr>\r\n        <td>{props.index + 1}</td>\r\n        <td>{props.user.userName} <Badge variant=\"danger\">Fastest Fingers</Badge></td>\r\n        <td>{props.user.personalBestWPM}</td>\r\n        <td>{props.user.personalBestAcc}%</td>\r\n    </tr>\r\n)\r\n\r\n// leader ranking component\r\nconst BestAcc = props => (\r\n    <tr>\r\n        <td>{props.index + 1}</td>\r\n        <td>{props.user.userName} <Badge variant=\"warning\">Sharp Shooter</Badge></td>\r\n        <td>{props.user.personalBestWPM}</td>\r\n        <td>{props.user.personalBestAcc}%</td>\r\n    </tr>\r\n)\r\n\r\n// leader ranking component\r\nconst LeaderAcc = props => (\r\n    <tr>\r\n        <td>{props.index + 1}</td>\r\n        <td>\r\n            {props.user.userName} {'  '}\r\n            <Badge variant=\"danger\">Fastest Fingers</Badge>{'  '}\r\n            <Badge variant=\"warning\">Sharp Shooter</Badge>\r\n        </td>\r\n        <td>{props.user.personalBestWPM}</td>\r\n        <td>{props.user.personalBestAcc}%</td>\r\n    </tr>\r\n)\r\n\r\nexport default class QuoteList extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.search = this.search.bind(this);\r\n        this.userList = this.userList.bind(this);\r\n\r\n        this.state = {\r\n            users: [],\r\n            search : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        axios.get(APIURL + '/user/')\r\n            .then(response => {\r\n                \r\n                this.setState({ users : response.data});\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    userList(userList) {\r\n        let accList = userList\r\n        accList.sort((a, b) => ( a.personalBestAcc < b.personalBestAcc) ? 1 : -1)\r\n        \r\n        //console.log(accList)\r\n        let bestAcc = accList[0]\r\n        // sort user array by wpm, if they == sort by bigger Accuracy\r\n        userList.sort((a, b) => ( a.personalBestWPM < b.personalBestWPM) ? 1 : (a.personalBestWPM === b.personalBestWPM) ?\r\n        ((a.personalBestAcc < b.personalBestAcc) ? 1 : - 1) : -1)\r\n        let bestWPM = userList[0]\r\n        // get best accuracy\r\n  \r\n        // Return a differed row component for the leader\r\n        return userList.map(function(currentUser, i){\r\n            if (bestWPM === currentUser && bestAcc === currentUser) {\r\n               return <LeaderAcc user={currentUser} key={i} index={i}/> \r\n            } else if (bestWPM === currentUser) {\r\n                return <Leader user={currentUser} key={i} index={i}/>\r\n            } else if (bestAcc == currentUser) {\r\n                return <BestAcc user={currentUser} key={i} index={i}/>\r\n            }\r\n            return <Ranking user={currentUser} key={i} index={i} /> \r\n        })\r\n    }\r\n\r\n    search() {\r\n        this.setState({\r\n            search : document.getElementById('searchBar').value\r\n        }) \r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div className=\"container\" style={{height : window.innerHeight}}>\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={8}>\r\n                            <h4>Leaderboard</h4>  \r\n                        </Col>\r\n                        \r\n                        \r\n                    </Row><br/>\r\n                    <Row>\r\n                        <Col>\r\n                            <Table striped bordered hover responsive variant='dark'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Rank</th>\r\n                                        <th>User</th>\r\n                                        <th>WPM</th>\r\n                                        <th>Accuracy</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                   {this.userList(this.state.users)} \r\n                                </tbody>\r\n                                \r\n                            </Table>\r\n                            \r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAdmin } from '../utils/isAdmin';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isAdmin() ?\r\n                <Component {...props} />\r\n            : <Redirect to=\"/profile\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","\r\nexport const isAdmin  = () => {\r\n    if (localStorage.getItem('nimdAis')) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}","export default {\r\n    colors: {\r\n        background : \"white\",\r\n        cardBackground : \"#F5FFFA\",\r\n        buttonBackground : \"#5E81AC\",\r\n        textColor : \"black\",\r\n        buttonColor : \"ECEFF4\",\r\n    },\r\n};","export default {\r\n    colors: {\r\n      background: \"#343A40\",\r\n      cardBackground: \"#3B4252\",\r\n      buttonBackground: \"#d08770\",\r\n      textColor: \"#ECEFF4\",\r\n      buttonColor: \"#2E3440\",\r\n    },\r\n  };","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n    background: ${props => props.theme.colors.background};\r\n    color: ${props => props.theme.colors.textColor};\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 0px;\r\n\r\n`;\r\n","import styled from \"styled-components\";\r\nimport React from 'react';\r\n\r\n\r\nconst Svg = styled.svg`\r\n width : 30px;\r\n height : 30px;\r\n alt=\"Typing Test;\r\n`;\r\n\r\nexport default({ className }) => ( \r\n    <Svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-keyboard-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fillRule=\"evenodd\" d=\"M0 6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6zm13 .25a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zM2.25 8a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5A.25.25 0 0 0 3 8.75v-.5A.25.25 0 0 0 2.75 8h-.5zM4 8.25A.25.25 0 0 1 4.25 8h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 4 8.75v-.5zM6.25 8a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5A.25.25 0 0 0 7 8.75v-.5A.25.25 0 0 0 6.75 8h-.5zM8 8.25A.25.25 0 0 1 8.25 8h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 8 8.75v-.5zM13.25 8a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-.5zm0 2a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-.5zm-3-2a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h1.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-1.5zm.75 2.25a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zM11.25 6a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-.5zM9 6.25A.25.25 0 0 1 9.25 6h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 9 6.75v-.5zM7.25 6a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5A.25.25 0 0 0 8 6.75v-.5A.25.25 0 0 0 7.75 6h-.5zM5 6.25A.25.25 0 0 1 5.25 6h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 5 6.75v-.5zM2.25 6a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h1.5A.25.25 0 0 0 4 6.75v-.5A.25.25 0 0 0 3.75 6h-1.5zM2 10.25a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zM4.25 10a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h5.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-5.5z\"/>\r\n    </Svg>\r\n)","import React, { useState } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\"; \r\n\r\nimport TypingTest from './components/test.component';\r\nimport CreateQuote from './components/CreateQuote.component';\r\nimport Quotes from './components/quotes.component';\r\nimport Login from './components/login.component';\r\nimport Account from './components/account.component';\r\nimport Profile from './components/profile.component';\r\nimport EditAccount from './components/editAccount.component';\r\nimport ApproveQuote from './components/approveQuote.component';\r\nimport Leaderboard from './components/leaderboard.component';\r\n\r\nimport PrivateRoute from './components/privateRoute.component';\r\nimport './App.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavbarBrand from 'react-bootstrap/NavbarBrand';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport lightTheme from \"./themes/light\";\r\nimport darkTheme from \"./themes/dark\";\r\n\r\n\r\nimport Container from \"./components/Container\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavIcon from './components/NavIcon';\r\n\r\n\r\nconst App = () => {\r\n\r\n  const stored = localStorage.getItem(\"isDarkMode\");\r\n  \r\n  const [isDarkMode, setIsDarkMode] = useState( \r\n    stored === \"true\" ? true : false\r\n  );\r\n\r\n  \r\n\r\n  return (\r\n    <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\r\n      <Container>\r\n        \r\n        <Router>\r\n        <div className=\"container\">\r\n            <Navbar collapseOnSelect expand=\"lg\" bg={isDarkMode ? 'dark' : 'light'} variant={isDarkMode ? 'dark' : 'light'} sticky=\"top\">\r\n              <NavbarBrand>\r\n                <NavIcon></NavIcon>\r\n              </NavbarBrand>\r\n              <NavbarBrand>Typing Test</NavbarBrand>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  <Link to=\"/\" className=\"nav-link\" id=\"navBarText\">Test</Link>\r\n                  <Link to=\"/quotes\" className=\"nav-link\">Quotes</Link>\r\n                  <Link to=\"/createQuote\" className=\"nav-link\">Create Quote</Link>\r\n                  <Link to=\"/account\" className=\"nav-link\">Account</Link>\r\n                  <Link to=\"/leaderboard\" className=\"nav-link\">Leaderboard</Link>\r\n                </Nav>\r\n                <Nav>\r\n                  <Button variant=\"outline-secondary\" onClick={() => {\r\n                  setIsDarkMode(!isDarkMode);\r\n                  localStorage.setItem(\"isDarkMode\", !isDarkMode);\r\n                  }}>\r\n                  <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" className=\"bi bi-circle-half\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" d=\"M8 15V1a7 7 0 1 1 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z\"/>\r\n                  </svg>\r\n                </Button>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n\r\n          <Route path=\"/\" exact component={TypingTest} />\r\n          <Route path=\"/createQuote\" component={CreateQuote} />\r\n          <Route path=\"/quotes\" component={Quotes} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/account\"exact component={Account} />\r\n          <Route path=\"/profile\" component={Profile} />\r\n          <Route path=\"/editAccount\" component={EditAccount} />\r\n          <Route path=\"/leaderboard\" component={Leaderboard}/>\r\n          <PrivateRoute path=\"/approveQuote\" component={ApproveQuote} exact/>\r\n      \r\n        </Router>  \r\n      </Container>\r\n        \r\n    </ThemeProvider>\r\n   \r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}