{"version":3,"sources":["components/Card.js","components/test.component.js","components/CreateQuote.component.js","components/quotes.component.js","components/login.component.js","components/account.component.js","components/profile.component.js","components/editAccount.component.js","components/approveQuote.component.js","components/privateRoute.component.js","utils/isAdmin.js","themes/light.js","themes/dark.js","components/Container.js","components/NavIcon.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","props","theme","colors","cardBackground","TestInput","input","attrs","type","TypingTest","onInputChange","bind","compare","resetTest","endTest","startTimer","calculateWPM","calculateHighScore","backspace","escFunction","debugToggle","renderTooltip","newTest","sendHighscores","state","quote","quote_Title","quote_body","quote_author","user_input","quote_words","char_array","current_quote_char","typed_chars","current_quote_word","count","error_count","total_error_count","input_disabled","quote_left","quote_right","quote_error","quote_start","err_arr","quote_class","tInterval","seconds","netWPM","accuracy","highestAcc","highestWPM","quote_score","quoteWPM","quoteAcc","quoteID","apiUrl","token","user","debug","query","this","location","id","APIURL","setState","axios","get","then","response","data","quoteTitle","quoteBody","Array","from","quoteAuthor","quoteScore","highWPMScore","highAccScore","_id","catch","err","console","log","localStorage","getItem","headers","res","document","addEventListener","removeEventListener","event","keyCode","e","length","interval","setInterval","key","slice","current_char","getElementById","value","words","chars","body","split","clearInterval","focus","correctChars","lastWPM","lastAccuracy","activeElement","blur","Math","ceil","latestAccuracy","latestWPM","personalBestWPM","personalBestAcc","sendQuoteScores","post","scores","minutes","errors","popper","elements","reference","Tooltip","className","Card","Row","Col","sm","Alert","variant","onKeyDown","disabled","OverlayTrigger","placement","delay","show","hide","overlay","name","Button","onClick","style","marginLeft","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","float","Collapse","in","Heading","Component","CreateQuote","checkLogin","onChangeQuoteTitle","onChangeQuoteBody","onChangeQuoteAuthor","validateField","validateForm","addQuote","loggedIn","quoteTitleValid","quoteBodyValid","quoteAuthorValid","formValid","formErrors","formValidAndUser","userName","preventDefault","quoteUser","reqObj","userId","quoteId","history","push","pathname","fieldName","target","fieldValidateErrors","username","Form","m","Control","size","onChange","placeholder","xs","Text","as","rows","SearchInput","Quote","to","color","Link","QuoteList","search","quotesList","quotes","map","currentQuote","i","index","filteredQuotes","filter","toLowerCase","indexOf","Login","login","onChangeLoginUsername","onChangeLoginPassword","inputEmail","inputUsername","inputPassword","isEmail","email","password","usernameValid","emailValid","passwordValid","loggedInUser","error","loginAccount","userPassword","withCredentials","setItem","Group","Label","account_username","account_password","Account","onChangeAccountUsername","onChangeAccountEmail","onChangeAccountPassword","onSubmit","account_email","account_favourties","loggedUser","inputLoginPassword","inputLoginUserName","match","newAccount","userEmail","status","String","quoteApproved","marginRight","edit","delete","Profile","logout","getQuotes","deleteAccount","editAccount","approveButton","editQuote","deleteQuote","deleteThisQuote","handleDeleteAccountClose","handleDeleteQuoteClose","handleEditQuoteClose","saveQuote","signUpDate","quoteIds","unapprovedQuotesCount","deleteAccountModal","deleteQuoteModal","editQuoteModal","deletingQuote","isAdmin","quotesAdded","forEach","Id","del","window","reload","editedQuote","removeItem","Badge","Modal","backdrop","keyboard","centered","Header","Title","Body","Footer","quotesComponentsList","EditAccount","onChangeAccountConfirmPassword","onChangeCurrentPassword","checkPassword","passwordsMatch","oldUser","newInput","confirmPassword","newUser","tempUser","passowrd","newPassword","newConfirmPassowrd","handleClose","approve","approveQuote","noQuotes","PrivateRoute","component","rest","render","background","buttonBackground","textColor","buttonColor","Svg","svg","App","stored","useState","isDarkMode","setIsDarkMode","darkTheme","lightTheme","Container","Navbar","collapseOnSelect","expand","bg","sticky","NavbarBrand","NavIcon","Toggle","aria-controls","Nav","path","exact","Quotes","ApproveQuote","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.77efe88a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  background: ${props => props.theme.colors.cardBackground};\r\n  padding: 24px;\r\n  border-radius: 5px;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100px;\r\n`;","import React, { Component } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Button from 'react-bootstrap/Button';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport Card from './Card'\r\n\r\n\r\nconst TestInput = styled.input.attrs(props => ({\r\n    type : 'text',\r\n    \r\n}))`\r\n    background: white;\r\n    border-radius: 5px;\r\n    border: 1px solid darkgray;\r\n\r\n    :: disabled\r\n`\r\n\r\nexport default class TypingTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.compare = this.compare.bind(this);\r\n        this.resetTest = this.resetTest.bind(this);\r\n        this.endTest = this.endTest.bind(this);\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.calculateWPM = this.calculateWPM.bind(this);\r\n        this.calculateHighScore = this.calculateHighScore.bind(this);\r\n        this.backspace = this.backspace.bind(this);\r\n        this.escFunction = this.escFunction.bind(this);\r\n        this.debugToggle = this.debugToggle.bind(this);\r\n        this.renderTooltip = this.renderTooltip.bind(this);\r\n        this.newTest = this.newTest.bind(this);\r\n        this.sendHighscores = this.sendHighscores.bind(this);\r\n\r\n\r\n        this.state = {\r\n            quote: [],\r\n            //The name of the quote\r\n            quote_Title: '',\r\n            // The text body of the quote\r\n            quote_body : '',\r\n            quote_author : '',\r\n            user_input : '',\r\n            // An array of every word in the quote not currently used but might be useful later\r\n            quote_words: [],\r\n            // An array of every character in the quote including spaces\r\n            char_array: [],\r\n            // String that contains the next character to be typed\r\n            current_quote_char: '',\r\n            // String that holds what the user types if they are correct but if it is not correct it is filled correctly by char_array\r\n            typed_chars: '',\r\n            // string that contains the current work to be typed not currently used but might be useful later\r\n            current_quote_word: '',\r\n            // counter that keeps track of the number of user inputs excluding backspace\r\n            count: 0,\r\n            // counter that keeps track of errors, can be decremented if the user corrects their error\r\n            error_count : 0,\r\n            // a total error counter that does not decrement\r\n            total_error_count : 0,\r\n            // boolean to disable input to the text box and display results when the test is over, false == test not over, true == test over\r\n            input_disabled : false,\r\n            // String that contains every thing that has been typed or that the user has passed\r\n            quote_left : '',\r\n            // String that contains everything the user has left to type\r\n            quote_right : '',\r\n            // String that contains correct characters that the user has gotten wrong errors the user has typed\r\n            quote_error : '',\r\n            // The quote placeholder for before the test starts is emptied after the test starts\r\n            quote_start : '',\r\n            // error array that conatins the errors the user has typed\r\n            err_arr : '',\r\n            // string that contains the css class of the current character span so it can be change when there is an error or not\r\n            quote_class : 'quote-current',\r\n            // Interval to time the user\r\n            tInterval : '', \r\n            // number that keeps track of the seconds that have passed since the test started\r\n            seconds : 0,\r\n            // The net words per minute\r\n            netWPM : 0,\r\n            // Accuracy %\r\n            accuracy : 0,\r\n            // Highscores\r\n            highestAcc : 0, \r\n            highestWPM : 0,\r\n            quote_score : 0,\r\n            quoteWPM : 0,\r\n            quoteAcc : 0,\r\n            quoteID : 0,\r\n\r\n            //api url\r\n            apiUrl : '',\r\n            token : '',\r\n\r\n            user : {},\r\n            debug : false\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        let query = '';\r\n        if (this.props.location.state != null) {\r\n            query = this.props.location.state.id\r\n        }\r\n        else {\r\n            query = 'random';\r\n        }\r\n        let APIURL = ''\r\n        // Check if in dev or production environment\r\n        if (process.env.NODE_ENV === 'production') {\r\n            this.setState((state) => ({\r\n                apiUrl : 'https://typingtest.jdoyle.ie',\r\n            }))\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') {\r\n            this.setState((state) => ({\r\n               apiUrl : 'http://localhost:8080',\r\n            }))\r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        // get quote from database and update state\r\n        axios.get(APIURL +'/quotes/'+query)\r\n            .then(response => {\r\n                this.setState((state) => ({ \r\n                    quote_Title : response.data.quoteTitle,\r\n                    quote_body : response.data.quoteBody,\r\n                    char_array : Array.from(response.data.quoteBody),\r\n                    current_quote_char : Array.from(response.data.quoteBody)[0],\r\n                    quote_start : response.data.quoteBody,\r\n                    quote_author : response.data.quoteAuthor,\r\n                    quote_score : response.data.quoteScore,\r\n                    quoteWPM : response.data.highWPMScore,\r\n                    quoteAcc : response.data.highAccScore,\r\n                    quoteID : response.data._id\r\n                }))\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            })\r\n\r\n        //if there is a use logged in get their account info\r\n        if (localStorage.getItem('beepboop')) {\r\n            let token = localStorage.getItem('beepboop')\r\n            this.setState({\r\n                token : token\r\n            })\r\n\r\n            axios.get( APIURL + '/user/profile', { headers : { 'auth-token' : token }})\r\n            .then(res => {\r\n               // console.log(res.data)\r\n               this.setState({\r\n                   user : res.data\r\n               })\r\n            })\r\n        }\r\n        // add eventListener that checks if the esc key has been pressed on every keydown\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n        \r\n    }\r\n\r\n\r\n     \r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    // startTimer function that is called every second by setInterval in onInputChance() \r\n    // increments seconds by 1 and sets the state.\r\n    startTimer () {\r\n        let seconds = this.state.seconds + 1;\r\n        this.setState((state) => ({\r\n            seconds : seconds,\r\n        }))\r\n    }\r\n\r\n    // escFunction that handles when the escape key is pressed\r\n    escFunction(event){\r\n        if(event.keyCode === 27) {\r\n            \r\n          this.resetTest();\r\n        }\r\n    }\r\n\r\n    // Function that toggles the debug output\r\n    debugToggle() {\r\n        this.setState((state) => ({\r\n            debug : !state.debug\r\n        })) \r\n    }\r\n\r\n    // Called whenever the user input is changed\r\n    // Sets the state of user_input to the user's input and calls compare with the current word from state.\r\n    onInputChange (e) {\r\n        // edge case if user ends test with error to just end the test if the total number of entries == the quote len.\r\n        if (this.state.count === this.state.char_array.length) {\r\n            this.endTest();\r\n            console.log('testing jenkins')\r\n            return\r\n        }\r\n\r\n        // if the key pressed is not backspace and is in the general keys location 0\r\n        if (e.keyCode !== 8 && e.location === 0) {\r\n\r\n            // if the user has started typing yet\r\n            if (this.state.count === 0) {\r\n                //Start timer\r\n                let interval = setInterval(this.startTimer, 1000)\r\n                this.setState ((state) => ({\r\n                    quote_start : '',\r\n                    seconds : 0,\r\n                    tInterval : interval      \r\n                }))\r\n            }\r\n            // update the current user_input state and call compare function\r\n            this.setState({\r\n                user_input : e.key\r\n            }, () => this.compare(this.state.current_quote_char))\r\n        }\r\n        // Backspace conditions for changing the current char, left and right spans     \r\n        else if (e.keyCode === 8 && this.state.err_arr !== '' && this.state.error_count  > 0) {\r\n            // if there are errors and the user presses backspace reduce the error count\r\n            if (this.state.error_count > 0) {\r\n                this.setState ((state) => ({\r\n                    error_count : state.error_count -1,\r\n                }), () => this.backspace())      \r\n            }\r\n            else {\r\n                this.backspace();\r\n            }\r\n        }\r\n    }\r\n\r\n    // backspace function that handles when the user enters a backspace into the input box\r\n    backspace () {\r\n        this.setState ((state) => ({\r\n            err_arr : state.err_arr.slice(0, state.err_arr.length-1),\r\n            count : state.count - 1,\r\n            current_quote_char : state.char_array[state.count -1],\r\n            quote_left : state.typed_chars.slice(0, state.typed_chars.length - state.err_arr.length),\r\n            typed_chars : state.typed_chars.slice(0, -1),\r\n            quote_right :  state.char_array.slice(state.count , state.char_array.length)\r\n        }))      \r\n    }\r\n\r\n    // Called in onInputChange\r\n    // Takes the current word to be typed from state\r\n    // Compares it to the user input\r\n    // Checks the if the word count is equal to the length of the quote_words array; if it is the test is over and endTest() is called.\r\n    // If it is not the state of the current word is changed, the count is incremented and the user_input is set back to empty\r\n    compare (current_char) {\r\n        if (current_char === this.state.user_input) {\r\n            console.log(\"match\");\r\n            if (this.state.count >= this.state.char_array.length -1) {\r\n                this.setState((state) => ({\r\n                    typed_chars: state.typed_chars + state.user_input\r\n                }), () => this.endTest())\r\n            }\r\n            else {\r\n                this.setState((state) => ({\r\n                    current_quote_char : state.char_array[state.count + 1],\r\n                    count: state.count + 1,\r\n                    typed_chars: state.typed_chars + state.user_input,\r\n                    quote_right : state.char_array.slice(state.count+2, state.char_array.length),\r\n                    user_input : '',\r\n                    quote_left : state.typed_chars + state.user_input,\r\n                    err_arr : '',\r\n                    quote_class : 'quote-current',\r\n                }));  \r\n            }\r\n            document.getElementById('input').value = '';\r\n        }\r\n        else {\r\n            this.setState((state) => ({\r\n                err_arr : state.err_arr + state.char_array[state.count],\r\n                current_quote_char : state.char_array[state.count + 1],\r\n                count: state.count + 1,\r\n                quote_class : 'quote-warning',\r\n                typed_chars : state.typed_chars + state.char_array[state.count],\r\n                quote_error :  state.err_arr,\r\n                quote_right : state.char_array.slice(state.count +2, state.char_array.length),\r\n                error_count : state.error_count + 1,\r\n                total_error_count : state.total_error_count + 1,\r\n            }))\r\n        }\r\n    }\r\n\r\n    // Called by newTestBtn \r\n    // queries the db for a random quote and updates the state\r\n    // then calls resettest to reset other counters and timers\r\n    newTest () {\r\n        // get quote from database and update state\r\n        axios.get(this.state.apiUrl + '/quotes/random')\r\n            .then(response => {\r\n                this.setState((state) => ({ \r\n                    quote_Title : response.data.quoteTitle,\r\n                    quote_body : response.data.quoteBody,\r\n                    char_array : Array.from(response.data.quoteBody),\r\n                    current_quote_char : Array.from(response.data.quoteBody)[0],\r\n                    quote_start : response.data.quoteBody,\r\n                    quote_author : response.data.quoteAuthor\r\n                }))\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            })\r\n        this.resetTest()\r\n    }\r\n\r\n    //Called whenever the reset button is pressed\r\n    //Resets the test by resetting the state to default.\r\n    resetTest () {\r\n        let body = this.state.quote_body;\r\n        let words = [];\r\n        let chars = [];\r\n        words = body.split(\" \");\r\n        chars = Array.from(body);\r\n        clearInterval(this.state.tInterval);\r\n        document.getElementById('input').value = '';\r\n        document.getElementById('input').focus();\r\n\r\n        this.setState((state) => ({\r\n            quote_Title: state.quote_Title,\r\n            quote_body : state.quote_body, \r\n            quote_words : words,\r\n            current_quote_word : words[0],\r\n            char_array : chars,\r\n            quote_start : state.quote_body,\r\n            current_quote_char : state.char_array[0],\r\n            err_arr : '',\r\n            user_input : '',\r\n            quote_left : '',\r\n            quote_right : '',\r\n            typed_chars : '',\r\n            error_count : 0,\r\n            quote_class : 'quote_current',\r\n            quote_error : '',\r\n            total_error_count : 0,\r\n            count: 0,\r\n            seconds : 0,\r\n            input_disabled : false,\r\n        }))\r\n    }\r\n\r\n    // Called when the end of the test is reached in compare()\r\n    // Calculates word per minute\r\n    endTest () {\r\n        clearInterval(this.state.tInterval);\r\n        let correctChars = this.state.char_array.length - this.state.total_error_count;\r\n\r\n        let lastWPM = this.state.netWPM;\r\n        let lastAccuracy = this.state.accuracy;\r\n        \r\n        document.activeElement.blur();\r\n        document.getElementById('input').focus();\r\n        this.setState((state) => ({\r\n            error_count : state.error_count,\r\n            accuracy : Math.ceil((correctChars / state.char_array.length)*100),\r\n            input_disabled : true,\r\n            current_quote_char : '',\r\n            quote_left : state.quote_body,\r\n            seconds : 0,\r\n            err_arr : '',\r\n            netWPM : Math.ceil(this.calculateWPM()),\r\n        }), () => this.calculateHighScore(lastAccuracy, lastWPM))\r\n    }\r\n\r\n    // Function that updates the user's high score is the latest score was better than the last replace the scores\r\n    calculateHighScore (lastAccuracy, lastWPM) {\r\n        let latestAccuracy = this.state.accuracy;\r\n        let latestWPM = this.state.netWPM;\r\n        let highestWPM = 0;\r\n        let highestAcc = 0;\r\n\r\n        console.log(lastWPM, this.state.quoteWPM)\r\n        \r\n\r\n        if (latestWPM > lastWPM) {\r\n            this.setState({\r\n                highestAcc : latestAccuracy,\r\n                highestWPM : latestWPM,\r\n                \r\n            })\r\n\r\n            highestWPM = latestWPM;\r\n            highestAcc = latestAccuracy\r\n            if (this.state.token !== '') {\r\n\r\n                console.log(highestWPM)\r\n                console.log(highestAcc)\r\n                if(highestWPM > this.state.user.personalBestWPM ) {\r\n                    console.log('you were better')\r\n                    this.setState(state => ({\r\n                        user : {\r\n                            ...this.state.user,\r\n                            \r\n                            personalBestAcc : highestAcc,\r\n                            personalBestWPM : highestWPM,\r\n                        }\r\n                    }), () => this.sendHighscores(this.state.user))\r\n                }\r\n\r\n                if (lastWPM >= this.state.quoteWPM) {\r\n                    console.log('calling')\r\n                    this.setState({\r\n                        quoteWPM : highestWPM,\r\n                        quoteAcc : highestAcc\r\n                    }, () => this.sendQuoteScores())\r\n                }\r\n                \r\n                \r\n            }\r\n\r\n        }\r\n    \r\n    }\r\n\r\n    sendHighscores(user) {\r\n        console.log(user)\r\n        axios.post(this.state.apiUrl + '/user/updateHS', user , { headers : {'auth-token' : this.state.token}})\r\n        .then(res =>\r\n            console.log(res.data)    \r\n        ) .catch(err => err)\r\n    }\r\n\r\n    sendQuoteScores() {\r\n        const scores = {\r\n            quoteWPM : this.state.quoteWPM,\r\n            quoteAcc : this.state.quoteAcc,\r\n            _id : this.state.quoteID\r\n        }\r\n\r\n        axios.post(this.state.apiUrl + '/quotes/updateHS', scores, {headers : {'auth-token' : this.state.token}})\r\n        .then(res => \r\n            console.log(res.data)\r\n        ) .catch(err => err)\r\n    }\r\n\r\n\r\n\r\n    // calculateWPM function calculates the user's WPM and returns the netWPM\r\n    calculateWPM () {\r\n        let seconds = this.state.seconds;\r\n        let minutes = seconds/60;\r\n        let errors = this.state.error_count;\r\n        let typedEntries = this.state.typed_chars.length;\r\n        let grossWPM = (typedEntries/5) / minutes;\r\n        let netWPM = grossWPM - (errors/minutes);\r\n        // Now do it all in one line for Duggan\r\n        //netWPM = ((this.state.typed_chars.length/5) / (this.state.seconds/60)) - (this.state.error_count/(this.state.seconds/60))\r\n        return netWPM\r\n    }\r\n\r\n\r\n\r\n    // function to render button tooltips\r\n    renderTooltip(props) {\r\n        if (props.popper.state != null) {\r\n            //console.log(props.popper.state.elements)\r\n\r\n            if (props.popper.state.elements.reference.id === 'restartBtn') {\r\n                return (\r\n                    <Tooltip id=\"button-tooltip\" {...props}>\r\n                        Restart Test\r\n                    </Tooltip>\r\n                );\r\n            } else if (props.popper.state.elements.reference.id === 'newTestBtn') {\r\n                return (\r\n                    <Tooltip id=\"button-tooltip\" {...props}>\r\n                        Start New Test\r\n                    </Tooltip>\r\n                );\r\n            } else if (props.popper.state.elements.reference.id === 'debugBtn') {\r\n                return (\r\n                    <Tooltip id=\"button-tooltip\" {...props}>\r\n                        Show debug Info\r\n                    </Tooltip>\r\n                )\r\n            } \r\n        }\r\n        return  (\r\n            <Tooltip {...props}>\r\n                tes\r\n            </Tooltip>\r\n        )     \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                   \r\n                    \r\n                        <Row>\r\n                            <Col sm={8}>\r\n                                <h4>{this.state.quote_Title} - {this.state.quote_author}</h4>\r\n                                <Alert variant=\"secondary\">       \r\n                                    <span className=\"quote-left\">{this.state.quote_left}</span>\r\n                                    <span className=\"quote-error\">{this.state.err_arr}</span>\r\n                                    <span className={this.state.quote_class}>{this.state.current_quote_char}</span>\r\n                                    <span className=\"quote-start\">{this.state.quote_start.slice(1)}</span>\r\n                                    <span className=\"quote-right\">{this.state.quote_right}</span>\r\n                                    <hr/>\r\n                                    <span>Best Score: {this.state.quoteWPM}WPM {this.state.quoteAcc}% Accuracy</span>\r\n                                </Alert>    \r\n                            </Col>\r\n                            <Col sm={4}>\r\n                                <h4>High Scores</h4>\r\n                                <Alert variant=\"info\">\r\n                                    <span>\r\n                                        WPM : {this.state.highestWPM} <br></br>\r\n                                        Accuracy : {this.state.highestAcc}% <br></br>\r\n                                    </span>       \r\n                                </Alert>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h5>Current Character: {this.state.current_quote_char}</h5>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col sm={8}>\r\n                                <TestInput  onKeyDown={this.onInputChange} id='input' disabled={this.state.input_disabled}/>\r\n                                <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={this.renderTooltip} name=\"restartOverlay\">\r\n                                    <Button onClick={this.resetTest} style={{marginLeft: 10}} variant=\"secondary\" id=\"restartBtn\">\r\n                                        <svg className=\"bi bi-arrow-repeat\" width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fillRule=\"evenodd\" d=\"M2.854 7.146a.5.5 0 00-.708 0l-2 2a.5.5 0 10.708.708L2.5 8.207l1.646 1.647a.5.5 0 00.708-.708l-2-2zm13-1a.5.5 0 00-.708 0L13.5 7.793l-1.646-1.647a.5.5 0 00-.708.708l2 2a.5.5 0 00.708 0l2-2a.5.5 0 000-.708z\" clipRule=\"evenodd\"/>\r\n                                            <path fillRule=\"evenodd\" d=\"M8 3a4.995 4.995 0 00-4.192 2.273.5.5 0 01-.837-.546A6 6 0 0114 8a.5.5 0 01-1.001 0 5 5 0 00-5-5zM2.5 7.5A.5.5 0 013 8a5 5 0 009.192 2.727.5.5 0 11.837.546A6 6 0 012 8a.5.5 0 01.501-.5z\" clipRule=\"evenodd\"/>\r\n                                        </svg>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={this.renderTooltip}>\r\n                                    <Button onClick={this.newTest} variant=\"info\" style={{marginLeft : 10}} id=\"newTestBtn\" name=\"newTestBtn\">\r\n                                        <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" className=\"bi bi-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fillRule=\"evenodd\" d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\"/>\r\n                                            <path fillRule=\"evenodd\" d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\"/>\r\n                                        </svg>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                                \r\n                            </Col>\r\n                            <Col sm={4}>\r\n                                <OverlayTrigger placement=\"left\" delay={{ show: 250, hide: 400 }} overlay={this.renderTooltip}>\r\n                                    <Button onClick={this.debugToggle} variant=\"outline-warning\" style={{float : \"right\"}} id=\"debugBtn\" name=\"debugBtn\">\r\n                                        <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" className=\"bi bi-bug\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                                            <path fillRule=\"evenodd\" d=\"M4.355.522a.5.5 0 0 1 .623.333l.291.956A4.979 4.979 0 0 1 8 1c1.007 0 1.946.298 2.731.811l.29-.956a.5.5 0 1 1 .957.29l-.41 1.352A4.985 4.985 0 0 1 13 6h.5a.5.5 0 0 0 .5-.5V5a.5.5 0 0 1 1 0v.5A1.5 1.5 0 0 1 13.5 7H13v1h1.5a.5.5 0 0 1 0 1H13v1h.5a1.5 1.5 0 0 1 1.5 1.5v.5a.5.5 0 1 1-1 0v-.5a.5.5 0 0 0-.5-.5H13a5 5 0 0 1-10 0h-.5a.5.5 0 0 0-.5.5v.5a.5.5 0 1 1-1 0v-.5A1.5 1.5 0 0 1 2.5 10H3V9H1.5a.5.5 0 0 1 0-1H3V7h-.5A1.5 1.5 0 0 1 1 5.5V5a.5.5 0 0 1 1 0v.5a.5.5 0 0 0 .5.5H3c0-1.364.547-2.601 1.432-3.503l-.41-1.352a.5.5 0 0 1 .333-.623zM4 7v4a4 4 0 0 0 3.5 3.97V7H4zm4.5 0v7.97A4 4 0 0 0 12 11V7H8.5zM12 6H4a3.99 3.99 0 0 1 1.333-2.982A3.983 3.983 0 0 1 8 2c1.025 0 1.959.385 2.666 1.018A3.989 3.989 0 0 1 12 6z\"/>\r\n                                        </svg>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                            </Col>\r\n                        </Row><br></br>\r\n                        \r\n                        <Row> \r\n                            <Col sm={8}>\r\n                                <Collapse in={this.state.input_disabled}>\r\n                                    <div id=\"results\">\r\n                                        <Alert variant=\"success\">\r\n                                            <Alert.Heading>Well Done!</Alert.Heading>\r\n                                                <p>\r\n                                                    Here are your results:<br></br>\r\n                                                    WPM : {this.state.netWPM} <br></br>\r\n                                                    Accuracy : {this.state.accuracy}% <br></br>\r\n                                                    Errors : {this.state.total_error_count}<br></br>\r\n                                                    Corrected Errors : {this.state.error_count}\r\n                                                </p>\r\n                                        </Alert>\r\n                                    </div>          \r\n                                </Collapse>\r\n                            </Col>\r\n                            <Col sm={4}>\r\n                                <Collapse in={this.state.debug}>\r\n                                    <div>\r\n                                        <Alert variant=\"warning\">\r\n                                            <Alert.Heading>Debug</Alert.Heading>\r\n                                            <p>\r\n                                                Error array : {this.state.err_arr}<br></br>\r\n                                                quote length : {this.state.char_array.length}<br></br>\r\n                                                Input count : {this.state.count}<br></br>\r\n                                                Error Count : {this.state.error_count}<br></br>\r\n                                                Total Error Count : {this.state.total_error_count}<br></br>\r\n                                                Previous character : {this.state.char_array[this.state.count-1]}<br></br>\r\n                                                Current character : {this.state.char_array[this.state.count]}<br></br>\r\n                                                Next character : {this.state.char_array[this.state.count+1]}<br></br> \r\n                                                Quote left : {this.state.quote_left}<br></br>\r\n                                                Quote green : {this.state.current_quote_char}<br></br>\r\n                                                Quote right : {this.state.quote_right}<br></br>\r\n                                                Quote error : {this.state.quote_error}\r\n                                            </p>\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Collapse>      \r\n                            </Col>\r\n                        </Row> \r\n                </Card>    \r\n                <div style={{ height : 800}}></div>\r\n            </div>  \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\"\r\nimport Card from \"./Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport axios from \"axios\";\r\n\r\nexport default class CreateQuote extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.onChangeQuoteTitle = this.onChangeQuoteTitle.bind(this);\r\n        this.onChangeQuoteBody = this.onChangeQuoteBody.bind(this);\r\n        this.onChangeQuoteAuthor = this.onChangeQuoteAuthor.bind(this);\r\n\r\n        this.validateField = this.validateField.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n\r\n        this.addQuote = this.addQuote.bind(this);\r\n\r\n        this.state = {\r\n            // validation\r\n            loggedIn : false,\r\n            quoteTitleValid : false,\r\n            quoteBodyValid : false,\r\n            quoteAuthorValid : false,\r\n            formValid : false, \r\n            formErrors : {quoteTitle: '', quoteBody : '', quoteAuthor : ''},\r\n\r\n            formValidAndUser : false,\r\n\r\n            // user\r\n            userName : '',\r\n            id : '',\r\n\r\n            // Quote state\r\n            quoteTitle : '',\r\n            quoteBody : '',\r\n            quoteAuthor : ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        if (localStorage.getItem('beepboop')) {\r\n            this.checkLogin()\r\n\r\n            let token = localStorage.getItem('beepboop')\r\n             let APIURL = ''\r\n            if (process.env.NODE_ENV === 'production') {\r\n                APIURL = 'https://typingtest.jdoyle.ie'\r\n            } else if (process.env.NODE_ENV === 'development') { \r\n                APIURL = 'http://localhost:8080'\r\n            }\r\n            axios.get(APIURL + '/user/profile',{ headers : { 'auth-token' : token}}  )\r\n            .then( res => {\r\n                console.log(this.state)\r\n                if (res.data) {\r\n                    this.setState({\r\n                        userName : res.data.userName,\r\n                        id : res.data._id\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    addQuote(e) {\r\n        e.preventDefault();\r\n\r\n        const quote = {\r\n            quoteTitle : this.state.quoteTitle,\r\n            quoteBody : this.state.quoteBody,\r\n            quoteAuthor : this.state.quoteAuthor,\r\n            quoteUser : this.state.userName\r\n        }\r\n        //console.log(quote)\r\n        let token = localStorage.getItem('beepboop');\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        \r\n        axios.post(APIURL + '/quotes/add', quote, { headers : { 'auth-token' : token}})\r\n        .then(res => {\r\n\r\n            const reqObj = {\r\n                userId : this.state.id,\r\n                quoteId : res.data\r\n            }\r\n            axios.post(APIURL + '/user/addQuote', reqObj, {headers : {'auth-token' : token}})\r\n\r\n            this.props.history.push({\r\n                pathname : '/profile' \r\n                \r\n            })\r\n        }).catch (err => err)\r\n        \r\n    }\r\n\r\n    // Check if user is logged in\r\n    checkLogin() {\r\n        this.setState({\r\n            loggedIn : true,\r\n        })\r\n    }\r\n\r\n    onChangeQuoteTitle(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            quoteTitle : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.quoteTitle)\r\n        })\r\n    }\r\n\r\n    onChangeQuoteBody(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            quoteBody : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.quoteBody)\r\n        })\r\n    }\r\n\r\n    onChangeQuoteAuthor(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            quoteAuthor : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.quoteAuthor)\r\n        })\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let quoteTitleValid = this.state.quoteTitleValid;\r\n        let quoteBodyValid = this.state.quoteBodyValid;\r\n        let quoteAuthorValid = this.state.quoteAuthorValid;\r\n\r\n        switch(fieldName) {\r\n            \r\n            case 'quoteTitle':\r\n                \r\n                quoteTitleValid = value.length >= 0 && value.length < 40;\r\n                fieldValidateErrors.quoteTitle = quoteTitleValid ? '' : ' must not be empty or greater than 20 characters.';\r\n                break;\r\n            \r\n            case 'quoteBody':\r\n                \r\n                quoteBodyValid = value.length >= 200  && value.length <= 350 ;\r\n                fieldValidateErrors.quoteBody = quoteBodyValid ? '' : ' is too short';\r\n                \r\n                break;\r\n\r\n            case 'quoteAuthor':\r\n\r\n                if (value.length === 0){\r\n                    quoteAuthorValid = true;\r\n                    this.setState((state) => ({\r\n                        quoteAuthor : state.username\r\n                    }), () => {fieldValidateErrors.quoteAuthor = quoteAuthorValid ? '' : ''})\r\n                    break;\r\n                }\r\n                else if (value.length <= 10) {\r\n                    quoteAuthorValid = true\r\n                    fieldValidateErrors.quoteAuthor = quoteAuthorValid ? '' : ' is short long';\r\n                    break;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({\r\n            formErrors : fieldValidateErrors, \r\n            quoteTitleValid : quoteTitleValid, \r\n            quoteBodyValid : quoteBodyValid,\r\n            quoteAuthorValid : quoteAuthorValid\r\n        },    \r\n            this.validateForm);\r\n        \r\n    }\r\n\r\n     // ValidaateForm function sets the current state of the fields of the form.\r\n     validateForm() {\r\n         \r\n        this.setState({\r\n            formValid:  this.state.quoteTitleValid &&\r\n                        this.state.quoteBodyValid && \r\n                        this.state.quoteAuthorValid,\r\n            formValidAndUser : this.state.formValid && this.state.loggedIn\r\n                    });\r\n\r\n        \r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n               <Card>\r\n                    <Row>  \r\n                        <Col>\r\n                            \r\n                        <h4>Create Quote</h4>\r\n                        <br />\r\n                            <Alert variant=\"secondary\">\r\n                                <Form>\r\n                                    \r\n                                    <Alert.Heading>\r\n                                            <Row>\r\n                                                <Col m=\"auto\">\r\n                                                    <Form.Control\r\n                                                        value={this.state.quoteTitle}\r\n                                                        type='text'\r\n                                                        size='lg'\r\n                                                        onChange={this.onChangeQuoteTitle}\r\n                                                        name = 'quoteTitle'\r\n                                                        placeholder = \"Quote Title\"\r\n                                                    />\r\n                                                    \r\n                                                </Col>\r\n                                                <Col xs=\"auto\"> -</Col>\r\n                                                <Col xs=\"auto\">\r\n\r\n                                                    <Form.Control\r\n                                                            value={this.state.quoteAuthor}\r\n                                                            type='text'\r\n                                                            // style={{width : String(this.state.quoteAuthor.length)}}\r\n                                                            size='lg'\r\n                                                            onChange={this.onChangeQuoteAuthor}\r\n                                                            name = 'quoteAuthor'\r\n                                                            placeholder = 'Quote Author'\r\n                                                    />\r\n                                                    \r\n                                                </Col>\r\n                                            </Row>\r\n                                    </Alert.Heading>\r\n                                    <Form.Text className=\"text-muted\" style={{ float : \"left\"}}>\r\n                                        Quote titles must be shorter than 40 characters.\r\n                                    </Form.Text>\r\n                                    <Form.Text className=\"text-muted\" style={{float : \"right\"}}>\r\n                                        Add the original Author of the Quote.\r\n                                    </Form.Text>\r\n\r\n                                    <Form.Control\r\n                                        value={this.state.quoteBody}\r\n                                        id = \"quoteBody\"\r\n                                        name = \"quoteBody\"\r\n                                        as=\"textarea\" rows = \"4\"\r\n                                        onChange={this.onChangeQuoteBody}\r\n                                        placeholder = 'Main Body of Quote'\r\n                                    />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    Main text of the Quote must be between 200 and 350 characters.\r\n                                    </Form.Text>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                All Quotes will be approved by an admin before they can be used for testing. \r\n                            </Form.Text>\r\n\r\n                                </Form>\r\n                                \r\n                            </Alert>\r\n                            \r\n                            \r\n                            <Button type=\"submit\" variant=\"info\" onClick={this.addQuote} disabled={!this.state.formValidAndUser}>\r\n                                    Create Quote\r\n                            </Button>\r\n                            <Form.Text className=\"text-muted\">\r\n                                You must be logged in to add a Quote.\r\n                            </Form.Text>\r\n                   \r\n                        </Col> \r\n                    </Row>\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SearchInput = styled.input.attrs(props => ({\r\n    type : 'text',\r\n    placeholder : ' Search: Title, Author, User'\r\n    \r\n}))`\r\n    background: white;\r\n    border-radius: 5px;\r\n    border: 1px solid darkgray;\r\n    height : 35px;\r\n    margin-left : 80px;\r\n    width : 230px;\r\n    float: right;\r\n    :: disabled\r\n`\r\n\r\n// Quote component\r\nconst Quote = props => (\r\n    <div>\r\n        <Alert variant=\"secondary\">\r\n            <Link to={{ pathname : '/', state: { id : props.quote._id }}} style={{color : '#202326'}}>\r\n                <Alert.Heading>{props.quote.quoteTitle} -{props.quote.quoteAuthor}</Alert.Heading>\r\n            </Link>\r\n            <span>{props.quote.quoteBody}</span>\r\n            <hr />\r\n            <Row>\r\n                <Col sm={8}>\r\n                    <span>Added by: <Alert.Link>{props.quote.quoteUser}</Alert.Link></span>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div style={{float : 'right'}}>\r\n                        <Alert.Link  variant=\"outline-seconary\">\r\n                            Suggest Edit\r\n                        </Alert.Link>\r\n                    </div>\r\n                </Col>\r\n            </Row>    \r\n        </Alert>\r\n        <br></br>\r\n    </div>  \r\n)\r\n\r\nexport default class QuoteList extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.search = this.search.bind(this);\r\n        this.quotesList = this.quotesList.bind(this);\r\n\r\n        this.state = {\r\n            quotes: [],\r\n            search : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        axios.get(APIURL + '/quotes/approved')\r\n            .then(response => {\r\n                this.setState({ quotes : response.data});\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    quotesList(quotesList) {\r\n        return quotesList.map(function(currentQuote, i){\r\n            return <Quote quote={currentQuote} key={i} index = {i}  />\r\n        })\r\n    }\r\n\r\n    search() {\r\n        this.setState({\r\n            search : document.getElementById('searchBar').value\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        // filter funtion that works so amazingly well without needing more requests\r\n        let filteredQuotes = this.state.quotes.filter(\r\n            (quote) => {\r\n                return  quote.quoteTitle.toLowerCase().indexOf(this.state.search) !== -1 ||\r\n                        quote.quoteAuthor.toLowerCase().indexOf(this.state.search) !== -1 || \r\n                        quote.quoteUser.indexOf(this.state.search) !== -1;\r\n            }\r\n        )\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={8}>\r\n                            <h4>Quotes</h4>  \r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <SearchInput id=\"searchBar\"  onChange={this.search}></SearchInput>\r\n                        </Col>\r\n                        \r\n                    </Row><br/>\r\n                    <Row>\r\n                        <Col>\r\n                            {this.quotesList(filteredQuotes)}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form  from \"react-bootstrap/Form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Alert from \"react-bootstrap/Alert\"\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.login = this.login.bind(this);\r\n        this.onChangeLoginUsername = this.onChangeLoginUsername.bind(this);\r\n        this.onChangeLoginPassword = this.onChangeLoginPassword.bind(this);\r\n\r\n        this.state = {\r\n\r\n            inputEmail : '',\r\n            inputUsername : '',\r\n            inputPassword : '',\r\n            isEmail : false,\r\n\r\n            formErrors: {username: '', email: '', password: ''},\r\n            usernameValid : false,\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            formValid: false,\r\n            loggedInUser : {},\r\n\r\n            error : false,\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n\r\n\r\n    }\r\n\r\n    onChangeLoginUsername(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            inputUsername : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.inputUsername)\r\n        });\r\n    }\r\n\r\n    onChangeLoginPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            inputPassword : e.target.value},\r\n            () => {this.validateField(fieldName, this.state.inputPassword)\r\n        });\r\n    }\r\n\r\n    //  Validate Field function takes name of field that is being validated and the value in that field\r\n    //  Check if Email is valid format using regex\r\n    //  Check if Password is longer than 6 characters\r\n    //  Check if Username is longer than 4 chacracters\r\n    validateField(fieldName, value) {\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let passwordValid = this.state.passwordValid;\r\n        let usernameValid = this.state.usernameValid;\r\n\r\n        switch(fieldName) {\r\n            \r\n            case 'Password':\r\n                passwordValid = value.length >= 6;\r\n                fieldValidateErrors.password = passwordValid ? '' : ' is too short';\r\n                break;\r\n            \r\n            case 'Username':\r\n                \r\n                usernameValid = value.length >=4;\r\n                fieldValidateErrors.username = usernameValid ? '' : ' is too short';\r\n                \r\n                \r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({formErrors : fieldValidateErrors, \r\n                        usernameValid : usernameValid, \r\n                        passwordValid : passwordValid\r\n                    },    \r\n                        this.validateForm);\r\n    }\r\n\r\n\r\n    login(e) {\r\n        e.preventDefault();\r\n\r\n        const loginAccount = {\r\n            userName : this.state.inputUsername,\r\n            userPassword : this.state.inputPassword,\r\n        }\r\n\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        \r\n        axios.post(APIURL + '/user/login' , loginAccount, {withCredentials:true})\r\n        .then(res => {\r\n            console.log(res.data)\r\n            localStorage.setItem(\"beepboop\", res.data);\r\n            \r\n            this.props.history.push({\r\n                             pathname : \"/profile\",\r\n                             \r\n            });\r\n        })\r\n        .catch(err => {\r\n            this.setState({\r\n                error : true\r\n            })\r\n        });\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                    <Row>  \r\n                        <Col sm={5}>\r\n                            <Form>\r\n                                <Form.Group >\r\n                                    <h4>Login</h4>\r\n                                    <Form.Label>User Name: </Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.account_username}\r\n                                        id = \"inputLoginUserName\"\r\n                                        onChange = {this.onChangeLoginUsername}\r\n                                        name =\"Username\"\r\n                                    /><br />\r\n                                    \r\n                                    <Form.Label>Password: </Form.Label>\r\n                                    <Form.Control\r\n                                        type = \"password\"\r\n                                        value={this.state.account_password}\r\n                                        id = \"inputLoginPassword\"\r\n                                        onChange = {this.onChangeLoginPassword}\r\n                                        name = \"Password\"\r\n                                    />\r\n                                      \r\n                                </Form.Group>\r\n                                <Button type=\"submit\" variant=\"info\" onClick={this.login} >\r\n                                    Login\r\n                                </Button>\r\n\r\n                                <Link to=\"/account\">\r\n                                    <Button variant=\"secondary\" style={{ marginLeft : 10}}>\r\n                                        Create Account\r\n                                    </Button>\r\n                                </Link>\r\n                            </Form>\r\n                        </Col> \r\n                    </Row>\r\n                    <br></br>\r\n                    <Row>\r\n                        <Col sm={5}>\r\n                            <Collapse in={this.state.error}>\r\n                                <div>\r\n                                     <Alert variant={'danger'}>\r\n                                    <p>Username or Password Incorrect</p>\r\n                                </Alert>\r\n                                </div>\r\n                               \r\n                            </Collapse>\r\n                        </Col>\r\n                        \r\n                        \r\n                    </Row>\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from \"./Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n\r\n//import { FormErrors } from './FormErrors';\r\n\r\n\r\n// Account component for creating accounts\r\n// Includes clients side validation of credentials.\r\n\r\nexport default class Account extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.onChangeAccountUsername = this.onChangeAccountUsername.bind(this);\r\n        this.onChangeAccountEmail = this.onChangeAccountEmail.bind(this);\r\n        this.onChangeAccountPassword = this.onChangeAccountPassword.bind(this);\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n\r\n            account_username:'',\r\n            account_email:'',\r\n            account_password:'',\r\n            account_favourties: [],\r\n            formErrors: {username: '', email: '', password: ''},\r\n            usernameValid : false,\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            formValid: false,\r\n            loggedUser : {},\r\n\r\n            inputLoginPassword: '',\r\n            inputLoginUserName: ''\r\n        }\r\n    }\r\n\r\n    // Create Account inputs\r\n    onChangeAccountUsername(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            account_username: e.target.value},\r\n            () => {this.validateField(fieldName, this.state.account_username)           \r\n        });\r\n    }\r\n\r\n    onChangeAccountEmail(e) {\r\n        const fieldName = e.target.name;\r\n        //console.log(fieldName);\r\n        this.setState({\r\n            account_email: e.target.value},\r\n            () => {this.validateField(fieldName, this.state.account_email)\r\n        });  \r\n    }\r\n\r\n    onChangeAccountPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            account_password: e.target.value},\r\n            () => {this.validateField(fieldName, this.state.account_password)\r\n        });\r\n    }\r\n\r\n    //  Validate Field function takes name of field that is being validated and the value in that field\r\n    //  Check if Email is valid format using regex\r\n    //  Check if Password is longer than 6 characters\r\n    //  Check if Username is longer than 4 chacracters\r\n    validateField(fieldName, value) {\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n        let usernameValid = this.state.usernameValid;\r\n\r\n        switch(fieldName) {\r\n            case 'Email' :\r\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidateErrors.email = emailValid ? '' : ' is invalid';\r\n                break;\r\n            \r\n            case 'Password':\r\n                passwordValid = value.length >= 6;\r\n                fieldValidateErrors.password = passwordValid ? '' : ' is too short';\r\n                break;\r\n            \r\n            case 'Username':\r\n                usernameValid = value.length >=4;\r\n                fieldValidateErrors.username = usernameValid ? '' : ' is too short';\r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({formErrors : fieldValidateErrors, \r\n                        usernameValid : usernameValid,\r\n                        emailValid : emailValid, \r\n                        passwordValid : passwordValid\r\n                    },    \r\n                        this.validateForm);\r\n    }\r\n\r\n    // ValidaateForm function sets the current state of the fields of the form.\r\n    validateForm() {\r\n        this.setState({formValid:this.state.usernameValid && this.state.emailValid && this.state.passwordValid});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newAccount = {\r\n            userName: this.state.account_username,\r\n            userEmail : this.state.account_email,\r\n            userPassword : this.state.account_password,\r\n            \r\n        }\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n        }\r\n        \r\n        axios.post( APIURL + '/user/register', newAccount, {withCredentials:true})\r\n        .then(res => {\r\n            if(res.status(400)){\r\n                console.log('email in use')\r\n            }\r\n        })\r\n            \r\n        this.setState = ({\r\n            account_username:'',\r\n            account_email:'',\r\n            account_password:'',\r\n        });\r\n\r\n        this.props.history.push({\r\n            pathname : \"/login\",\r\n            \r\n            });\r\n    }\r\n\r\n  \r\n    componentDidMount() {\r\n\r\n        if (localStorage.getItem('beepboop')) {\r\n            this.props.history.push({\r\n                pathname : \"/profile\",\r\n                \r\n});\r\n        }\r\n\r\n        // axios.get('http://localhost:8080/user/',{withCredentials:true})\r\n        // .then(res => {\r\n        //     console.log(res.data)\r\n        //     if (res.data)\r\n        //     {\r\n        //         this.props.history.push({\r\n        //             pathname : \"/account/user\",\r\n        //             state : { loggedInUser : res.data}\r\n        //             });\r\n        //     }\r\n            \r\n        // })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                    <Row>  \r\n                           \r\n                        <Col sm={5}>\r\n                            <Form>\r\n                                <Form.Group >\r\n                                    <h4>Create Account</h4>\r\n                                    <Form.Label>User Name: </Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.account_username}\r\n                                        id = \"inputUserName\"\r\n                                        onChange = {this.onChangeAccountUsername}\r\n                                        name = \"Username\"\r\n                                    /><br />\r\n\r\n                                    <Form.Label>Email: </Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.account_email}\r\n                                        id = \"inputUserEmail\"\r\n                                        onChange = {this.onChangeAccountEmail}\r\n                                        name = \"Email\"\r\n                                    /><br />\r\n                                    \r\n                                    <Form.Label>Password: </Form.Label>\r\n                                    <Form.Control\r\n                                        type = \"password\"\r\n                                        value={this.state.account_password}\r\n                                        id = \"inputPassword\"\r\n                                        onChange = {this.onChangeAccountPassword}\r\n                                        name = \"Password\"\r\n                                    />\r\n                                      \r\n                                </Form.Group>\r\n                                <Button type=\"submit\" variant=\"info\" onClick={this.onSubmit} disabled={!this.state.formValid}>\r\n                                    Create Account\r\n                                </Button>\r\n                                \r\n                                <Link to=\"/login\">\r\n                                    <Button variant=\"secondary\" style={{ marginLeft : 10}}>\r\n                                        Login\r\n                                    </Button>\r\n                                </Link>\r\n                                \r\n                            </Form>\r\n                        </Col>\r\n                        <Col sm={2}></Col>\r\n                        \r\n                        \r\n                    </Row>\r\n\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport AutosizeInput from 'react-input-autosize'\r\n\r\n// Quote component\r\nconst Quote = props => (\r\n    <div>\r\n        <Alert variant=\"secondary\">\r\n            <Link to={{ pathname : '/', state: { id : props.quote._id }}} style={{color : '#202326'}}>\r\n                <Alert.Heading>{props.quote.quoteTitle} -{props.quote.quoteAuthor}</Alert.Heading>\r\n            </Link>\r\n            <span>{props.quote.quoteBody}</span>\r\n            <hr />\r\n            <Row>\r\n                <Col sm={8}>\r\n                    <span style={{marginLeft : 10}}>Approved : {String(props.quote.quoteApproved)}</span>\r\n                    <span style={{marginLeft : 10}}>Rating : {props.quote.quoteScore}</span>\r\n                    <span style={{marginLeft : 10}}>High Score : {props.quote.highWPMScore}WPM {props.quote.highAccScore}% Accuracy</span>\r\n\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div style={{float : 'right'}}>\r\n                        <Alert.Link style={{marginRight : 10}} onClick={props.edit}>\r\n                            Edit\r\n                        </Alert.Link>\r\n                        <Alert.Link onClick={props.delete}>\r\n                            Delete\r\n                        </Alert.Link>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Alert>\r\n        <br></br>\r\n    </div>\r\n)\r\n\r\nexport default class Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.logout = this.logout.bind(this);\r\n        this.getQuotes = this.getQuotes.bind(this);\r\n        this.deleteAccount = this.deleteAccount.bind(this);\r\n        \r\n        this.editAccount = this.editAccount.bind(this);\r\n        this.approveButton = this.approveButton.bind(this);\r\n        this.editQuote = this.editQuote.bind(this);\r\n        this.deleteQuote = this.deleteQuote.bind(this);\r\n        this.deleteThisQuote = this.deleteThisQuote.bind(this);\r\n\r\n        this.handleDeleteAccountClose = this.handleDeleteAccountClose.bind(this);\r\n        this.handleDeleteQuoteClose = this.handleDeleteQuoteClose.bind(this);\r\n        this.handleEditQuoteClose = this.handleEditQuoteClose.bind(this);\r\n        this.saveQuote = this.saveQuote.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n\r\n        this.onChangeQuoteTitle = this.onChangeQuoteTitle.bind(this);\r\n        this.onChangeQuoteAuthor = this.onChangeQuoteAuthor.bind(this);\r\n        this.onChangeQuoteBody = this.onChangeQuoteBody.bind(this);\r\n\r\n        this.state = {\r\n\r\n            id: '',\r\n            username : '',\r\n            email : '',\r\n            signUpDate : '',\r\n            personalBestWPM : 0,\r\n            personalBestAcc : 0,\r\n            quoteIds : [],\r\n            quotes : [],\r\n            APIURL : '',\r\n            unapprovedQuotesCount : 0,\r\n\r\n            deleteAccountModal : false,\r\n            deleteQuoteModal : false,\r\n            editQuoteModal : false,\r\n\r\n\r\n            quoteTitleValid : false,\r\n            quoteBodyValid : false,\r\n            quoteAuthorValid : false,\r\n            formValid : false, \r\n            formErrors : {quoteTitle: '', quoteBody : '', quoteAuthor : ''},\r\n\r\n            editQuote : {\r\n                quoteTitle : '',\r\n                quoteAuthor : '',\r\n                quoteBody : '',\r\n            },\r\n\r\n            deletingQuote : {\r\n                quoteTitle : '',\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let token = localStorage.getItem('beepboop')\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n            this.setState({\r\n                APIURL : 'https://typingtest.jdoyle.ie'\r\n            })\r\n        } else if (process.env.NODE_ENV === 'development') {\r\n            APIURL = 'http://localhost:8080'\r\n            this.setState({\r\n                APIURL : 'http://localhost:8080'\r\n            })\r\n        }\r\n        axios.get(APIURL + '/user/profile',{ headers : { 'auth-token' : token}}  )\r\n        .then( res => {\r\n\r\n            //console.log(this.state)\r\n            if (res.data.isAdmin) {\r\n                localStorage.setItem(\"nimdAis\", res.data.isAdmin)\r\n            }\r\n\r\n            if (res.data) {\r\n                console.log(res.data)\r\n                this.setState({\r\n                    id : res.data._id,\r\n                    username : res.data.userName,\r\n                    email : res.data.userEmail,\r\n                    signUpDate : res.data.signUpDate.slice(0, 15),\r\n                    personalBestWPM : res.data.personalBestWPM,\r\n                    personalBestAcc : res.data.personalBestAcc,\r\n                    quoteIds : res.data.quotesAdded\r\n                })\r\n                this.getQuotes();\r\n            }\r\n        })\r\n\r\n        //get unapproved quotes\r\n        axios.get(APIURL + '/quotes/unapproved', {headers : {'auth-token' : token}})\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    this.setState({\r\n                    unapprovedQuotesCount : response.data.length\r\n                });\r\n                } else {\r\n                    this.setState({\r\n                        unapprovedQuotesCount : null\r\n                    })\r\n                }\r\n\r\n\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    //#region Quotes list\r\n    getQuotes() {\r\n        if (this.state.quoteIds.length > 0) {\r\n            this.state.quoteIds.forEach(Id => {\r\n                axios.get(this.state.APIURL + '/quotes/' + Id)\r\n                .then(res => {\r\n\r\n                    if (res.data) {\r\n                        this.setState({\r\n                            quotes : [...this.state.quotes, res.data]\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    quotesComponentsList () {\r\n        let edit = this.editQuote;\r\n        let del = this.deleteQuote;\r\n        if (this.state.quotes.length > 0)\r\n        {\r\n            return this.state.quotes.map(function(currentQuote, i) {\r\n                return <Quote quote={currentQuote} key={i} index={i} edit={() => edit(currentQuote)} delete={() => del(currentQuote)}/>\r\n            })\r\n        }\r\n        else {\r\n            return  <Link to='/createQuote'><Button> Add Some Quotes!</Button></Link>\r\n        }\r\n\r\n    }\r\n    //#endregion\r\n\r\n\r\n    // Function that lets users edit a quote\r\n    editQuote(quote) {\r\n        //console.log(quote)\r\n        this.setState({\r\n            editQuote : quote\r\n        }, () => this.handleEditQuoteClose())\r\n    }\r\n\r\n    // Function that lets users delete a quote\r\n    deleteQuote(quote) {\r\n        this.setState({\r\n            deletingQuote : quote\r\n        }, () => this.handleDeleteQuoteClose())\r\n    }\r\n\r\n    deleteThisQuote() {\r\n        const quote = this.state.deletingQuote;\r\n\r\n        let token = localStorage.getItem('beepboop');\r\n        axios.post(this.state.APIURL + '/quotes/delete',  quote , { headers: { 'auth-token' : token}})\r\n        .then(res => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                editQuoteModal : false\r\n            })\r\n            window.location.reload()\r\n        })\r\n        .catch(err => err)\r\n\r\n    }\r\n\r\n    //#region Edit Quote Modal Functions\r\n\r\n    onChangeQuoteTitle(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            editQuote : {\r\n                ...this.state.editQuote,\r\n                quoteTitle : e.target.value,\r\n            }\r\n        }, () => {this.validateField(fieldName, this.state.editQuote.quoteTitle)})\r\n    }\r\n\r\n    onChangeQuoteAuthor(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            editQuote : {\r\n                ...this.state.editQuote,\r\n                quoteAuthor : e.target.value\r\n            }\r\n        }, () => {this.validateField(fieldName, this.state.editQuote.quoteAuthor)})\r\n    }\r\n\r\n    onChangeQuoteBody(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            editQuote : {\r\n                ...this.state.editQuote,\r\n                quoteBody : e.target.value\r\n            }\r\n        }, () => {this.validateField(fieldName, this.state.editQuote.quoteBody)})\r\n    }\r\n\r\n    // Saves the new edited quote\r\n    saveQuote() {\r\n        let token = localStorage.getItem('beepboop');\r\n        let APIURL = ''\r\n       console.log(token)\r\n        const editedQuote = this.state.editQuote;\r\n        console.log(editedQuote)\r\n        console.log(this.state.APIURL)\r\n        axios.post(this.state.APIURL + '/quotes/update', editedQuote, { headers: { 'auth-token' : token}})\r\n        .then(res => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                editQuoteModal : false\r\n            })\r\n            window.location.reload()\r\n        })\r\n        .catch(err => err)\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n        let fieldValidateErrors = this.state.formErrors;\r\n        let quoteTitleValid = this.state.quoteTitleValid;\r\n        let quoteBodyValid = this.state.quoteBodyValid;\r\n        let quoteAuthorValid = this.state.quoteAuthorValid;\r\n\r\n        console.log(value)\r\n        switch(fieldName) {\r\n            \r\n            case 'quoteTitle':\r\n                \r\n                quoteTitleValid = value.length >= 0 && value.length < 40;\r\n                fieldValidateErrors.quoteTitle = quoteTitleValid ? '' : ' must not be empty or greater than 20 characters.';\r\n                break;\r\n            \r\n            case 'quoteBody':\r\n                \r\n                quoteBodyValid = value.length >= 200  && value.length <= 350 ;\r\n                fieldValidateErrors.quoteBody = quoteBodyValid ? '' : ' is too short';\r\n                \r\n                break;\r\n\r\n            case 'quoteAuthor':\r\n\r\n                if (value.length === 0){\r\n                    quoteAuthorValid = true;\r\n                    this.setState((state) => ({\r\n                        quoteAuthor : state.username\r\n                    }), () => {fieldValidateErrors.quoteAuthor = quoteAuthorValid ? '' : ''})\r\n                    break;\r\n                }\r\n                else if (value.length <= 10) {\r\n                    quoteAuthorValid = true\r\n                    fieldValidateErrors.quoteAuthor = quoteAuthorValid ? '' : ' is short long';\r\n                    break;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({\r\n            formErrors : fieldValidateErrors, \r\n            quoteTitleValid : quoteTitleValid, \r\n            quoteBodyValid : quoteBodyValid,\r\n            quoteAuthorValid : quoteAuthorValid\r\n        },    \r\n            this.validateForm);\r\n        \r\n    }\r\n\r\n     // ValidaateForm function sets the current state of the fields of the form.\r\n     validateForm() {\r\n        console.log(this.state.quoteTitleValid, this.state.quoteBodyValid, this.state.quoteAuthorValid)\r\n        this.setState({\r\n            formValid:  this.state.quoteTitleValid &&\r\n                        this.state.quoteBodyValid && \r\n                        this.state.quoteAuthorValid,\r\n                    });\r\n\r\n    }\r\n\r\n\r\n    //#endregion\r\n\r\n    // deleteAccountModal() {\r\n    //    this.handleClose()\r\n    // }\r\n\r\n\r\n\r\n    //#region Modal Handlers\r\n        handleDeleteAccountClose (){\r\n                this.setState({\r\n                    deleteAccountModal : !this.state.deleteAccountModal\r\n                })\r\n            }\r\n\r\n        handleEditQuoteClose () {\r\n            this.setState({\r\n                editQuoteModal : !this.state.editQuoteModal\r\n            })\r\n        }\r\n\r\n        handleDeleteQuoteClose() {\r\n            this.setState({\r\n                deleteQuoteModal : !this.state.deleteQuoteModal\r\n            })\r\n        }\r\n    //#endregion\r\n\r\n\r\n    //#region Account Buttons\r\n    logout() {\r\n            localStorage.removeItem(\"beepboop\")\r\n            localStorage.removeItem('nimdAis')\r\n            this.props.history.push({\r\n                pathname : \"/login\",\r\n            })\r\n        }\r\n\r\n    deleteAccount() {\r\n        let token = localStorage.getItem('beepboop')\r\n        localStorage.removeItem('beepboop')\r\n\r\n        const user = {\r\n            userName : this.state.username,\r\n            userEmail : this.state.email\r\n        }\r\n        //console.log(user)\r\n        axios.post(this.state.APIURL + '/user/delete', user , {headers : {'auth-token' : token}})\r\n\r\n\r\n        this.props.history.push({\r\n            pathname : '/login'\r\n        });\r\n    }\r\n\r\n    editAccount() {\r\n        let token = localStorage.getItem('beepboop')\r\n\r\n        const user = {\r\n            userName : this.state.username,\r\n            userEmail : this.state.email,\r\n            userId : this.state.id,\r\n        }\r\n\r\n        this.props.history.push({\r\n            pathname : '/editAccount',\r\n            state : { id : this.state.id }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    approveButton () {\r\n        if (localStorage.getItem('nimdAis')) {\r\n        return <Link to='/approveQuote'>\r\n                    <Button variant=\"outline-success\" style={{marginLeft : 10}}>Approve Quotes\r\n                        <Badge  variant=\"danger\" style={{marginLeft : 5}}>{this.state.unapprovedQuotesCount}</Badge>\r\n                    </Button>\r\n                </Link>\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                {/* Delete Account Modal */}\r\n                <Modal\r\n                    show={this.state.deleteAccountModal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                    <Modal.Title>Delete Account?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to delete your account? This is not reversable.\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleDeleteAccountClose}>\r\n                        Nevermind\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={this.deleteAccount}>Delete Account</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {/* Delete Quote Modal */}\r\n                <Modal\r\n                    show={this.state.deleteQuoteModal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                    <Modal.Title>Delete Quote?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to delete {this.state.deletingQuote.quoteTitle}? This is not reversable and will delete the quotes top score and WPM.\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleDeleteQuoteClose}>\r\n                        Nevermind\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={this.deleteThisQuote}>Delete Quote</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {/* Edit Quote Modal */}\r\n                <Modal\r\n                    show={this.state.editQuoteModal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    size='xl'\r\n                    centered\r\n\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Edit Quote</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <div>\r\n                        <Alert variant=\"secondary\">\r\n                            <Form>\r\n                                <Alert.Heading>\r\n                                        <Row>\r\n                                            <Col m=\"auto\">\r\n\r\n                                                <Form.Control\r\n\r\n                                                    value={this.state.editQuote.quoteTitle}\r\n                                                    type='text'\r\n                                                    size='lg'\r\n                                                    onChange={this.onChangeQuoteTitle}\r\n                                                    name = 'quoteTitle'\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs=\"auto\"> -</Col>\r\n                                            <Col xs=\"auto\">\r\n\r\n                                                <Form.Control\r\n                                                        value={this.state.editQuote.quoteAuthor}\r\n                                                        type='text'\r\n                                                        style={{width : String(this.state.editQuote.quoteAuthor.length)}}\r\n                                                        size='lg'\r\n                                                        onChange={this.onChangeQuoteAuthor}\r\n                                                        name = 'quoteAuthor'\r\n                                                    />\r\n                                            </Col>\r\n                                        </Row>\r\n                                </Alert.Heading>\r\n\r\n                                <Form.Control\r\n                                    value={this.state.editQuote.quoteBody}\r\n                                    id = \"quoteBody\"\r\n                                    name = \"quoteBody\"\r\n                                    as=\"textarea\" rows = \"4\"\r\n                                    onChange={this.onChangeQuoteBody}\r\n                                />\r\n                            </Form>\r\n                        </Alert>\r\n                    </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleEditQuoteClose}>\r\n                            Nevermind\r\n                        </Button>\r\n                        <Button variant=\"success\" onClick={this.saveQuote} disabled={!this.state.formValid}>\r\n                            Save Quote\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={9}>\r\n                            <h3>{this.state.username}'s Profile</h3>\r\n                            <h5>Email:  {this.state.email}</h5>\r\n                            <h5>Date Joined:  {this.state.signUpDate}</h5>\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                            <h4>Personal Best:</h4>\r\n                            <Alert variant=\"info\">\r\n                                <span>\r\n                                    WPM : {this.state.personalBestWPM} <br></br>\r\n                                    Accuracy : {this.state.personalBestAcc}% <br></br>\r\n                                </span>\r\n                            </Alert>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col >\r\n                            <br/>\r\n                            <Link to='/editAccount'>\r\n                                <Button variant=\"outline-info\" onClick={this.editAccount} style={{marginRight : 10}} disabled={false}>\r\n                                    Edit Account\r\n                                </Button>\r\n                            </Link>\r\n\r\n                            <Button variant=\"outline-warning\" onClick={this.logout} style={{marginRight : 10}}>\r\n                                Logout\r\n                            </Button>\r\n                            <Button variant=\"outline-danger\" onClick={this.handleDeleteQuoteClose}>\r\n                                Delete Account\r\n                            </Button>\r\n\r\n                            {this.approveButton()}\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Your Quotes:</h4>\r\n                            <div>\r\n                                {this.quotesComponentsList()}\r\n\r\n                            </div>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from \"./Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\n\r\nexport default class EditAccount extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.onChangeAccountUsername = this.onChangeAccountUsername.bind(this);\r\n        this.onChangeAccountEmail = this.onChangeAccountEmail.bind(this);\r\n        this.onChangeAccountPassword = this.onChangeAccountPassword.bind(this);\r\n        this.onChangeAccountConfirmPassword = this.onChangeAccountConfirmPassword.bind(this);\r\n        this.onChangeCurrentPassword = this.onChangeCurrentPassword.bind(this);\r\n        this.editAccount = this.editAccount.bind(this);\r\n        this.checkPassword = this.checkPassword.bind(this);\r\n        this.passwordsMatch = this.passwordsMatch.bind(this);\r\n\r\n        this.state ={\r\n\r\n            oldUser : {\r\n                id : '',\r\n                userName : '',\r\n                email : '',\r\n                password : '',\r\n            },\r\n\r\n            newInput : {\r\n                userName : '',\r\n                email : '',\r\n                password : '',\r\n                confirmPassword : '',\r\n                id : ''\r\n            },\r\n\r\n            newUser : {\r\n                userName : '',\r\n                email : '',\r\n                password : '',\r\n            },\r\n\r\n            onChangeCurrentPassword : '',\r\n            Modal : true,\r\n\r\n           token : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let token = localStorage.getItem('beepboop')\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n            this.setState({\r\n                APIURL : 'https://typingtest.jdoyle.ie'\r\n            })\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n            this.setState({\r\n                APIURL : 'http://localhost:8080'\r\n            })\r\n        }\r\n        axios.get(APIURL + '/user/profile',{ headers : { 'auth-token' : token}}  )\r\n        .then( res => {\r\n            //console.log(this.state)\r\n            if (res.data) {\r\n                this.setState({\r\n                    oldUser : {\r\n                        id : res.data._id,\r\n                        userName : res.data.userName,\r\n                        email : res.data.userEmail,\r\n                    },\r\n                    token : token\r\n                })\r\n\r\n            }\r\n        })\r\n    \r\n    }\r\n\r\n    editAccount() {\r\n\r\n        const tempUser = this.state.newInput\r\n        console.log(tempUser)\r\n        //console.log(this.state.oldUser.password)\r\n        // Check if user has entered a new passowrd\r\n        if (this.state.newInput.password === \"\" && this.passwordsMatch) {\r\n            tempUser.password  = this.state.oldUser.password   \r\n        }\r\n        \r\n        // check if user has entered a new username\r\n        if (this.state.newInput.userName === '') {\r\n            tempUser.userName = this.state.oldUser.userName\r\n        } \r\n\r\n        // check if users has enetered a new email\r\n        if (this.state.newInput.email === '') {\r\n            tempUser.email = this.state.oldUser.email\r\n        } \r\n            \r\n        tempUser.id = this.state.oldUser.id\r\n        console.log(tempUser)\r\n        // post req\r\n        axios.post(this.state.APIURL + '/user/update', tempUser, { headers : {'auth-token' : this.state.token }})\r\n        .then(res => {\r\n            console.log(res.data)\r\n        }).catch(err => err)\r\n    }\r\n\r\n\r\n    // Create Account inputs\r\n    onChangeAccountUsername(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            newInput : {\r\n                userName : e.target.value,\r\n                email : this.state.newInput.email,\r\n                password : this.state.newInput.password,\r\n                confirmPassword : this.state.newInput.confirmPassword,\r\n            }},\r\n           // () => {this.validateField(fieldName, this.state.newUserName)} \r\n        );\r\n    }\r\n\r\n    onChangeAccountEmail(e) {\r\n        const fieldName = e.target.name;\r\n        //console.log(fieldName);\r\n        this.setState({\r\n            newInput : {\r\n\r\n               email: e.target.value,\r\n               userName : this.state.newInput.userName,\r\n               password : this.state.newInput.password,\r\n               confirmPassword : this.state.newInput.confirmPassword,\r\n            }},\r\n           // () => {this.validateField(fieldName, this.state.newEmail)}\r\n        );  \r\n    }\r\n\r\n    onChangeAccountPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            newInput : {\r\n                password: e.target.value,\r\n                confirmPassword : this.state.newInput.confirmPassword,\r\n                userName : this.state.newInput.userName,\r\n                email : this.state.newInput.email,\r\n            }},\r\n           // () => {this.validateField(fieldName, this.state.newPassword)}\r\n        );\r\n    }\r\n\r\n    onChangeAccountConfirmPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            newInput : {\r\n                confirmPassword: e.target.value,\r\n                userName : this.state.newInput.userName,\r\n                email : this.state.newInput.email,\r\n                passowrd : this.state.newInput.password,\r\n            }},\r\n           // () => {this.validateField(fieldName, this.state.newConfirmPassword)}\r\n        );\r\n    }\r\n\r\n    onChangeCurrentPassword(e) {\r\n        const fieldName = e.target.name;\r\n        this.setState({\r\n            onChangeCurrentPassword : e.target.value\r\n        })\r\n    }\r\n\r\n    checkPassword (){\r\n        const loginAccount = {\r\n            userName : this.state.oldUser.userName,\r\n            userPassword : this.state.onChangeCurrentPassword\r\n        }\r\n\r\n        this.setState((state) => ({\r\n            oldUser : {\r\n                ...state.oldUser,\r\n                password : loginAccount.userPassword\r\n            }\r\n        })\r\n\r\n        )\r\n        //console.log(loginAccount)\r\n        axios.post(this.state.APIURL + '/user/login' , loginAccount, {withCredentials:true})\r\n        .then(res => {\r\n            \r\n            if (res.data) {\r\n                //console.log('beep')\r\n                this.setState({\r\n                    Modal : false\r\n                })\r\n            }\r\n        }).catch (err => err) \r\n    }\r\n\r\n\r\n\r\n    // check if both entries of passwords match returns true / false\r\n    passwordsMatch() {\r\n        if (this.state.newPassword === this.state.newConfirmPassowrd) {\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Modal\r\n                    show={this.state.Modal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                       <Modal.Title>Enter your current Password</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Enter your current password to edit your Account.\r\n                        <Form>\r\n                            \r\n                            <Form.Control \r\n                                value={this.state.onChangeCurrentPassword}\r\n                                type = \"password\"\r\n                                id = \"inputUserName\"\r\n                                onChange = {this.onChangeCurrentPassword}\r\n                                name = \"Username\"\r\n                           />\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Link to=\"/profile\">\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Nevermind\r\n                        </Button>\r\n                    </Link>\r\n                    \r\n                    <Button variant=\"danger\" onClick={this.checkPassword}>Edit Account</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={5}>\r\n                            <Form>\r\n                                <Form.Group>\r\n                                    <h4>Edit Account</h4>\r\n                                    <Form.Label>User Name:</Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.newInput.userName}\r\n                                        id = \"inputUserName\"\r\n                                        onChange = {this.onChangeAccountUsername}\r\n                                        name = \"Username\"\r\n                                        placeholder = {this.state.oldUser.userName}\r\n                                    /><br />\r\n\r\n                                    <Form.Label>Email: </Form.Label>\r\n                                    <Form.Control \r\n                                        value={this.state.newInput.email}\r\n                                        id = \"inputUserEmail\"\r\n                                        onChange = {this.onChangeAccountEmail}\r\n                                        name = \"Email\"\r\n                                        placeholder = {this.state.oldUser.email}\r\n                                    /><br />\r\n                                    \r\n                                    <Form.Label>Password: </Form.Label>\r\n                                    <Form.Control\r\n                                        type = \"password\"\r\n                                        value={this.state.newInput.password}\r\n                                        id = \"inputPassword\"\r\n                                        onChange = {this.onChangeAccountPassword}\r\n                                        name = \"Password\"\r\n                                    />\r\n                                    <Form.Label>Confirm Password: </Form.Label>\r\n                                    <Form.Control\r\n                                        type = \"password\"\r\n                                        value={this.state.newInput.confirmPassword}\r\n                                        id = \"inputConfirmPassword\"\r\n                                        onChange = {this.onChangeAccountConfirmPassword}\r\n                                        name = \"ConfirmPassword\"\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                 <Link to=\"/profile\">\r\n                                    <Button variant=\"secondary\" style={{ marginRight : 10}}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Link>\r\n\r\n                                <Button  variant=\"info\" onClick={this.editAccount}>\r\n                                    Save\r\n                                </Button>\r\n                                \r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport axios from 'axios';\r\nimport Card from \"./Card\";\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst SearchInput = styled.input.attrs(props => ({\r\n    type : 'text',\r\n    placeholder : ' Search: Title, Author, User'\r\n    \r\n}))`\r\n    background: white;\r\n    border-radius: 5px;\r\n    border: 1px solid darkgray;\r\n    height : 35px;\r\n    margin-left : 80px;\r\n    width : 230px;\r\n    float: right;\r\n    :: disabled\r\n`\r\n\r\n// Quote component\r\nconst Quote = props => (\r\n    <div>\r\n        <Alert variant=\"secondary\">\r\n            <Link to={{ pathname : '/', state: { id : props.quote._id }}} style={{color : '#202326'}}>\r\n                <Alert.Heading>{props.quote.quoteTitle} -{props.quote.quoteAuthor}</Alert.Heading>\r\n            </Link>\r\n            <span>{props.quote.quoteBody}</span>\r\n            <hr />\r\n            <Row>\r\n                <Col sm={8}>\r\n                    <span>Added by: <Alert.Link>{props.quote.quoteUser}</Alert.Link></span>\r\n                    <span style={{marginLeft : 10}}>Approved : {String(props.quote.quoteApproved)}</span> \r\n                    <span style={{marginLeft : 10}}>Rating : {props.quote.quoteScore}</span> \r\n                    <span style={{marginLeft : 10}}>High Score : {props.quote.highWPMScore}WPM {props.quote.highAccScore}% Accuracy</span>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div style={{float : 'right'}}>\r\n\r\n                        <Button variant=\"success\" style={{ marginRight : 5}} onClick={props.approve}  >\r\n                            Approve\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={props.del}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>    \r\n        </Alert>\r\n        <br></br>\r\n    </div>  \r\n)\r\n\r\nexport default class QuoteList extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.search = this.search.bind(this);\r\n        this.quotesList = this.quotesList.bind(this);\r\n        this.approveQuote = this.approveQuote.bind(this);\r\n        this.deleteQuote = this.deleteQuote.bind(this);\r\n        this.noQuotes = this.noQuotes.bind(this);\r\n\r\n        this.state = {\r\n            quotes: [],\r\n            search : '',\r\n            token : '',\r\n            APIURL : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let token = localStorage.getItem('beepboop');\r\n        let APIURL = ''\r\n        if (process.env.NODE_ENV === 'production') {\r\n            APIURL = 'https://typingtest.jdoyle.ie'\r\n            this.setState({\r\n                APIURL : 'https://typingtest.jdoyle.ie'\r\n            })\r\n        } else if (process.env.NODE_ENV === 'development') { \r\n            APIURL = 'http://localhost:8080'\r\n            this.setState({\r\n                APIURL : 'http://localhost:8080'\r\n            })\r\n        }\r\n        axios.get(APIURL + '/quotes/unapproved', {headers : {'auth-token' : token}})\r\n            .then(response => {\r\n                this.setState({ \r\n                    quotes : response.data,\r\n                    token : localStorage.getItem('beepboop')\r\n                });\r\n\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    quotesList(quotesList) {\r\n        let approve = this.approveQuote;\r\n        let del = this.deleteQuote;\r\n        return quotesList.map(function(currentQuote, i, ){\r\n            return <Quote quote={currentQuote} key={i} index = {i}  approve={() => approve(currentQuote)} del={() => del(currentQuote)}/>\r\n        })\r\n    }\r\n\r\n    search() {\r\n        this.setState({\r\n            search : document.getElementById('searchBar').value\r\n        })\r\n        \r\n    }\r\n\r\n    approveQuote(currentQuote) {\r\n        console.log(currentQuote)\r\n        axios.post(this.state.APIURL + '/quotes/approve', currentQuote, { headers : {'auth-token' : this.state.token}})\r\n        .then(res => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                quotes : []\r\n            })\r\n        })\r\n        console.log(currentQuote.quoteApproved)\r\n\r\n    }\r\n\r\n    deleteQuote() {\r\n        console.log('Delete')\r\n    }\r\n\r\n    noQuotes() {\r\n        if (this.state.quotes.length === 0) {\r\n            return <span>No quotes to approve!</span> \r\n        }\r\n    }\r\n   \r\n\r\n    \r\n\r\n    render() {\r\n        // filter funtion that works so amazingly well without needing more requests\r\n        let filteredQuotes = this.state.quotes.filter(\r\n            (quote) => {\r\n                return  quote.quoteTitle.toLowerCase().indexOf(this.state.search) !== -1 ||\r\n                        quote.quoteAuthor.toLowerCase().indexOf(this.state.search) !== -1 || \r\n                        quote.quoteUser.indexOf(this.state.search) !== -1;\r\n            }\r\n        )\r\n        return (\r\n            <div className=\"container\">\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={8}>\r\n                            <h4> Approve Quotes</h4>  \r\n                            \r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <SearchInput id=\"searchBar\"  onChange={this.search}></SearchInput>\r\n                        </Col>\r\n                        \r\n                    </Row><br/>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to='/profile'>\r\n                                <Button variant=\"info\">Back to Profile</Button>\r\n                            </Link>\r\n                        </Col> \r\n                    </Row><br/>\r\n                    <Row>\r\n                        <Col>\r\n                            {this.quotesList(filteredQuotes)}\r\n                            {this.noQuotes()}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n                <div style={{ height : 800}}></div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAdmin } from '../utils/isAdmin';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isAdmin() ?\r\n                <Component {...props} />\r\n            : <Redirect to=\"/profile\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","\r\nexport const isAdmin  = () => {\r\n    if (localStorage.getItem('nimdAis')) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}","export default {\r\n    colors: {\r\n        background : \"white\",\r\n        cardBackground : \"#white\",\r\n        buttonBackground : \"#5E81AC\",\r\n        textColor : \"black\",\r\n        buttonColor : \"ECEFF4\",\r\n\r\n    },\r\n\r\n    \r\n};","export default {\r\n    colors: {\r\n      background: \"#343A40\",\r\n      cardBackground: \"#3B4252\",\r\n      buttonBackground: \"#d08770\",\r\n      textColor: \"#ECEFF4\",\r\n      buttonColor: \"#2E3440\",\r\n    },\r\n  };","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n    background: ${props => props.theme.colors.background};\r\n    color: ${props => props.theme.colors.textColor};\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 0px;\r\n\r\n`;\r\n","import styled from \"styled-components\";\r\nimport React from 'react';\r\n\r\n\r\nconst Svg = styled.svg`\r\n width : 30px;\r\n height : 30px;\r\n alt=\"Typing Test;\r\n`;\r\n\r\nexport default({ className }) => ( \r\n    <Svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-keyboard-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fillRule=\"evenodd\" d=\"M0 6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6zm13 .25a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zM2.25 8a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5A.25.25 0 0 0 3 8.75v-.5A.25.25 0 0 0 2.75 8h-.5zM4 8.25A.25.25 0 0 1 4.25 8h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 4 8.75v-.5zM6.25 8a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5A.25.25 0 0 0 7 8.75v-.5A.25.25 0 0 0 6.75 8h-.5zM8 8.25A.25.25 0 0 1 8.25 8h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 8 8.75v-.5zM13.25 8a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-.5zm0 2a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-.5zm-3-2a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h1.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-1.5zm.75 2.25a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zM11.25 6a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-.5zM9 6.25A.25.25 0 0 1 9.25 6h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 9 6.75v-.5zM7.25 6a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h.5A.25.25 0 0 0 8 6.75v-.5A.25.25 0 0 0 7.75 6h-.5zM5 6.25A.25.25 0 0 1 5.25 6h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 5 6.75v-.5zM2.25 6a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h1.5A.25.25 0 0 0 4 6.75v-.5A.25.25 0 0 0 3.75 6h-1.5zM2 10.25a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zM4.25 10a.25.25 0 0 0-.25.25v.5c0 .138.112.25.25.25h5.5a.25.25 0 0 0 .25-.25v-.5a.25.25 0 0 0-.25-.25h-5.5z\"/>\r\n    </Svg>\r\n)","import React, { useState } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\"; \r\n\r\nimport TypingTest from './components/test.component';\r\nimport CreateQuote from './components/CreateQuote.component';\r\nimport Quotes from './components/quotes.component';\r\nimport Login from './components/login.component';\r\nimport Account from './components/account.component';\r\nimport Profile from './components/profile.component';\r\nimport EditAccount from './components/editAccount.component';\r\nimport ApproveQuote from './components/approveQuote.component';\r\n\r\nimport PrivateRoute from './components/privateRoute.component';\r\nimport './App.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavbarBrand from 'react-bootstrap/NavbarBrand';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport lightTheme from \"./themes/light\";\r\nimport darkTheme from \"./themes/dark\";\r\n\r\n\r\nimport Container from \"./components/Container\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavIcon from './components/NavIcon';\r\n\r\n\r\nconst App = () => {\r\n\r\n  const stored = localStorage.getItem(\"isDarkMode\");\r\n  \r\n  const [isDarkMode, setIsDarkMode] = useState( \r\n    stored === \"true\" ? true : false\r\n  );\r\n\r\n  \r\n\r\n  return (\r\n    <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\r\n      <Container>\r\n        \r\n        <Router>\r\n        <div className=\"container\">\r\n            <Navbar collapseOnSelect expand=\"lg\" bg={isDarkMode ? 'dark' : 'light'} variant={isDarkMode ? 'dark' : 'light'} sticky=\"top\">\r\n              <NavbarBrand>\r\n                <NavIcon></NavIcon>\r\n              </NavbarBrand>\r\n              <NavbarBrand>Typing Test</NavbarBrand>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  <Link to=\"/\" className=\"nav-link\" id=\"navBarText\">Test</Link>\r\n                  <Link to=\"/quotes\" className=\"nav-link\">Quotes</Link>\r\n                  <Link to=\"/createQuote\" className=\"nav-link\">Create Quote</Link>\r\n                  <Link to=\"/account\" className=\"nav-link\">Account</Link>\r\n                </Nav>\r\n                <Nav>\r\n                  <Button variant=\"outline-secondary\" onClick={() => {\r\n                  setIsDarkMode(!isDarkMode);\r\n                  localStorage.setItem(\"isDarkMode\", !isDarkMode);\r\n                  }}>\r\n                  <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" className=\"bi bi-circle-half\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" d=\"M8 15V1a7 7 0 1 1 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z\"/>\r\n                  </svg>\r\n                </Button>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n\r\n          <Route path=\"/\" exact component={TypingTest} />\r\n          <Route path=\"/createQuote\" component={CreateQuote} />\r\n          <Route path=\"/quotes\" component={Quotes} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/account\"exact component={Account} />\r\n          <Route path=\"/profile\" component={Profile} />\r\n          <Route path=\"/editAccount\" component={EditAccount} />\r\n          <PrivateRoute path=\"/approveQuote\" component={ApproveQuote} exact/>\r\n      \r\n        </Router>  \r\n      </Container>\r\n        \r\n    </ThemeProvider>\r\n   \r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}